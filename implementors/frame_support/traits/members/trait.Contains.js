(function() {var implementors = {
"interlay_runtime_parachain":[["impl Contains&lt;&lt;&lt;MultiSignature as Verify&gt;::Signer as IdentifyAccount&gt;::AccountId&gt; for <a class=\"struct\" href=\"interlay_runtime_parachain/struct.DustRemovalWhitelist.html\" title=\"struct interlay_runtime_parachain::DustRemovalWhitelist\">DustRemovalWhitelist</a>"],["impl Contains&lt;<a class=\"enum\" href=\"interlay_runtime_parachain/enum.RuntimeCall.html\" title=\"enum interlay_runtime_parachain::RuntimeCall\">RuntimeCall</a>&gt; for <a class=\"struct\" href=\"interlay_runtime_parachain/struct.BaseCallFilter.html\" title=\"struct interlay_runtime_parachain::BaseCallFilter\">BaseCallFilter</a>"],["impl Contains&lt;<a class=\"enum\" href=\"interlay_runtime_parachain/enum.RuntimeCall.html\" title=\"enum interlay_runtime_parachain::RuntimeCall\">RuntimeCall</a>&gt; for <a class=\"struct\" href=\"interlay_runtime_parachain/xcm_config/struct.SafeCallFilter.html\" title=\"struct interlay_runtime_parachain::xcm_config::SafeCallFilter\">SafeCallFilter</a>"]],
"kintsugi_runtime_parachain":[["impl Contains&lt;<a class=\"enum\" href=\"kintsugi_runtime_parachain/enum.RuntimeCall.html\" title=\"enum kintsugi_runtime_parachain::RuntimeCall\">RuntimeCall</a>&gt; for <a class=\"struct\" href=\"kintsugi_runtime_parachain/struct.BaseCallFilter.html\" title=\"struct kintsugi_runtime_parachain::BaseCallFilter\">BaseCallFilter</a>"],["impl Contains&lt;<a class=\"enum\" href=\"kintsugi_runtime_parachain/enum.RuntimeCall.html\" title=\"enum kintsugi_runtime_parachain::RuntimeCall\">RuntimeCall</a>&gt; for <a class=\"struct\" href=\"kintsugi_runtime_parachain/xcm_config/struct.SafeCallFilter.html\" title=\"struct kintsugi_runtime_parachain::xcm_config::SafeCallFilter\">SafeCallFilter</a>"],["impl Contains&lt;&lt;&lt;MultiSignature as Verify&gt;::Signer as IdentifyAccount&gt;::AccountId&gt; for <a class=\"struct\" href=\"kintsugi_runtime_parachain/struct.DustRemovalWhitelist.html\" title=\"struct kintsugi_runtime_parachain::DustRemovalWhitelist\">DustRemovalWhitelist</a>"]],
"tx_pause":[["impl&lt;T: <a class=\"trait\" href=\"tx_pause/pallet/trait.Config.html\" title=\"trait tx_pause::pallet::Config\">Config</a>&gt; Contains&lt;&lt;T as Config&gt;::RuntimeCall&gt; for <a class=\"struct\" href=\"tx_pause/pallet/struct.Pallet.html\" title=\"struct tx_pause::pallet::Pallet\">Pallet</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    &lt;T as Config&gt;::RuntimeCall: GetCallMetadata,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()