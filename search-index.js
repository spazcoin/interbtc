var searchIndex = JSON.parse('{\
"annuity":{"doc":"Annuity Module","t":"IQIKKAKKKKQQNQEIQQEEDGDGGQQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLNMFFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BlockRewardProvider","Currency","WeightInfo","distribute_block_reward","on_initialize","pallet","set_reward_per_wrapped","update_rewards","withdraw_reward","withdraw_rewards","AnnuityPalletId","BlockNumberToBalance","BlockReward","BlockRewardProvider","Call","Config","Currency","EmissionPeriod","Error","Event","Instance1","Module","Pallet","RewardPerBlock","RewardPerWrapped","RuntimeEvent","TotalWrapped","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","account_id","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","min_reward_per_block","module_name","name","new_call_variant_set_reward_per_wrapped","new_call_variant_update_rewards","new_call_variant_withdraw_rewards","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","reward_per_block","reward_per_wrapped","set_reward_per_wrapped","set_reward_per_wrapped","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_reward_per_block","update_rewards","update_rewards","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_rewards","withdraw_rewards","reward_per_wrapped","set_reward_per_wrapped","update_rewards","withdraw_rewards","RewardPerBlock","RewardPerWrapped","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"annuity"],[10,"annuity::pallet"],[245,"annuity::pallet::Call"],[246,"annuity::pallet::dispatchables"],[249,"annuity::pallet::storage_types"]],"d":["","","Weight functions needed for annuity.","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","The annuity module id, used for deriving its sovereign …","Convert the block number into a balance.","","The block reward provider.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The native currency for emission.","The emission period for block rewards.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","<code>Instance1</code> to be used for instantiable palllets defined …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","Storage type is <code>StorageValue</code> with value type …","Storage type is <code>StorageValue</code> with value type …","The overarching event type.","The total amount of the wrapped asset.","Weight information for the extrinsics in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a call with the variant <code>set_reward_per_wrapped</code>.","Create a call with the variant <code>update_rewards</code>.","Create a call with the variant <code>withdraw_rewards</code>.","","","","","","","","","An auto-generated getter for <code>RewardPerBlock</code>.","An auto-generated getter for <code>RewardPerWrapped</code>.","","See <code>Pallet::set_reward_per_wrapped</code>.","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::update_rewards</code>.","","","","","","","","","See <code>Pallet::withdraw_rewards</code>.","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,40,0,40,41,0,41,41,40,41,9,9,10,9,0,0,9,9,0,0,0,0,0,0,0,9,9,9,10,11,12,13,11,10,18,12,10,18,12,10,18,12,10,18,11,12,13,10,18,11,12,13,10,11,12,13,10,11,12,13,11,11,11,10,18,12,10,18,12,10,18,12,10,18,12,10,18,11,12,13,10,18,11,12,13,12,0,10,18,11,12,13,10,12,10,11,12,13,10,10,11,11,12,12,13,13,10,18,11,12,13,10,18,11,12,13,10,10,18,18,11,11,12,12,13,13,10,10,18,18,11,11,12,12,13,13,12,12,12,12,12,10,18,12,11,11,10,18,11,12,13,11,10,18,11,12,13,10,18,11,12,13,10,18,11,12,13,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,10,12,11,0,10,18,12,10,11,12,13,10,18,11,12,13,10,18,11,12,13,10,18,12,10,18,12,10,18,12,10,18,11,12,13,10,18,12,10,18,11,12,13,10,18,11,12,13,11,11,12,10,18,11,12,13,11,18,11,12,42,0,0,0,0,0,43,44,43,44,43,44,43,44,43,44,43,44,43,43,44,44,43,43,44,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44],"f":[0,0,0,[[],1],[[],2],0,[[],2],[[],2],[[],[[4,[3]]]],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[9]]]],[11,11],[[[12,[9]]],[[12,[9]]]],[13,13],[[]],[[]],[[]],[[]],[[],14],[[],15],[[]],[16,[[4,[[10,[9]],17]]]],[16,[[4,[18,17]]]],[16,[[4,[[12,[9]],17]]]],[[],[[4,[17]]]],[[],[[4,[17]]]],[[],[[4,[17]]]],[19,[[4,[17]]]],[19,[[4,[17]]]],[19,[[4,[17]]]],[[19,16],[[4,[17]]]],[[19,16],[[4,[17]]]],[[19,16],[[4,[17]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[[12,[9]]],20],0,[14],[14],[14],[14],[14],[[[10,[9]],[0,[21,22]]]],[[[12,[9]],[0,[21,22]]]],[[[10,[9]],[10,[9]]],23],[[11,11],23],[[[12,[9]],[12,[9]]],23],[[13,13],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[10,[9]],24],25],[[[18,[9]],24],25],[[11,24],25],[[[12,[9]],24],25],[[13,24],[[4,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[9]]],6],[[]],[[[12,[9]]],27],[[]],[[[12,[9]]],28],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],14],[[],[[8,[29]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],[[12,[9]]]],[[],[[12,[9]]]],[[],[[12,[9]]]],[[[30,[9]]]],[[],31],[[[30,[9]]]],[[]],[[[30,[9]],2],2],[[[30,[9]]],2],[[[30,[9]]],2],[[],2],[[]],[[],32],[[[33,[9]]],20],0,[[[10,[9]]],14],[[[12,[9]]],14],[[],[[8,[34]]]],0,[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[9]]],20],0,[[]],[[]],[[]],[[]],[[]],[[],[[8,[37]]]],[2,[[39,[38]]]],[[[33,[9]]],20],0,0,[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[21],"p":[[6,"DispatchResult"],[3,"Weight"],[4,"DispatchError"],[4,"Result"],[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"Instance1"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Error"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[4,"Option"],[6,"OriginFor"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"BlockRewardProvider"],[8,"WeightInfo"],[13,"set_reward_per_wrapped"],[3,"RewardPerBlock"],[3,"RewardPerWrapped"]]},\
"bitcoin":{"doc":"Bitcoin Library","t":"ENNNNEINNNNNNNNNNNNNNNNNNNDDINNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLKALLLLLLLLLLLLLLALLLLALLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLALLLLIIKKDHLLLLLLLLLDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLMLLLLLLLLMMMMMLLLLLLLLLMMLLLLLLLLLLLRRRFDDDDNNNDDDDRRESRCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRRRNDDDDEDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLENNNDDLLLLLLMLLLFLLLFFMMMMFMFFFLLLLLLLLLFLLLMM","n":["Address","ArithmeticOverflow","ArithmeticUnderflow","BoundExceeded","EndOfFile","Error","GetCompact","InvalidBlockVersion","InvalidBtcAddress","InvalidBtcHash","InvalidCompact","InvalidHeaderSize","InvalidMerkleProof","InvalidScript","InvalidTxid","MalformedHeader","MalformedMerkleProof","MalformedOpReturnOutput","MalformedP2PKHOutput","MalformedP2SHOutput","MalformedTransaction","MalformedWitnessOutput","P2PKH","P2SH","P2WPKHv0","P2WSHv0","PublicKey","Script","SetCompact","UnsupportedInputFormat","UnsupportedOutputFormat","append","as_bytes","as_bytes","as_hex","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deserialize","deserialize","dummy","dummy","encode","encode","encode_to","encode_to","encode_to","eq","eq","eq","eq","extract_op_return_data","fmt","fmt","fmt","fmt","formatter","from","from","from","from","from","from","from_script_pub_key","get_compact","global","hash","into","into","into","into","is_empty","is_p2pkh","is_p2sh","is_p2wpkh_v0","is_p2wsh_v0","is_zero","len","max_encoded_len","max_encoded_len","merkle","new","new_deposit_public_key","op_return","partial_cmp","pow","random","serialize","serialize","set_compact","size_hint","size_hint","size_hint","to_hash","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_p2pkh_script_sig","to_p2sh_script_sig","to_script_pub_key","try_format","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","type_info","type_info","types","using_encoded","using_encoded","utils","vzip","vzip","vzip","vzip","TryFormat","Writer","try_format","write","GlobalContext","SECP256K1","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","vzip","MerkleProof","MerkleTree","PartialTransactionProof","ProofResult","block_hash","block_header","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compute_height","compute_merkle_root","compute_partial_tree_height","compute_partial_tree_width","compute_root","compute_width","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","encode_to","encode_to","eq","eq","eq","extracted_root","flag_bits","fmt","fmt","fmt","fmt","from","from","from","from","hashes","into","into","into","into","merkle_proof","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","transaction","transaction","transaction_hash","transaction_position","transactions_count","try_format","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_count","tx_encoded_len","type_id","type_id","type_id","type_id","type_info","type_info","verify_proof","vzip","vzip","vzip","vzip","TARGET_TIMESPAN","TARGET_TIMESPAN_DIVISOR","UNROUNDED_MAX_TARGET","calculate_next_work_required","Block","BlockBuilder","BlockChain","BlockHeader","BlockHeight","Coinbase","FromOutput","FullTransactionProof","H160","H256","H256Le","HASH160_SIZE_HEX","HASH256_SIZE_HEX","LockTime","MAX","MAX_OPRETURN_SIZE","MerkleProof","Op0","Op0NotEqual","Op1","Op10","Op11","Op12","Op13","Op14","Op15","Op16","Op1Add","Op1Negate","Op1Sub","Op2","Op2Div","Op2Drop","Op2Dup","Op2Mul","Op2Over","Op2Rot","Op2Swap","Op3","Op3Dup","Op4","Op5","Op6","Op7","Op8","Op9","OpAbs","OpAdd","OpAnd","OpBooland","OpBoolor","OpCat","OpCheckLocktimeVerify","OpCheckMultisig","OpCheckMultisigVerify","OpCheckSequenceVerify","OpCheckSig","OpCheckSigverify","OpCode","OpCodeSeparator","OpDepth","OpDiv","OpDrop","OpDup","OpElse","OpEndIf","OpEqual","OpEqualVerify","OpFromAltStack","OpGreaterThan","OpGreaterThanOrEqual","OpHash160","OpHash256","OpIf","OpIfdup","OpInvert","OpLeft","OpLessThan","OpLessThanOrEqual","OpLshift","OpMax","OpMin","OpMod","OpMul","OpNegate","OpNip","OpNop","OpNop1","OpNop10","OpNop4","OpNop5","OpNop6","OpNop7","OpNop8","OpNop9","OpNot","OpNotIf","OpNumEqual","OpNumEqualVerify","OpNumNotEqual","OpOr","OpOver","OpPick","OpPushData1","OpPushData2","OpPushData4","OpReserved","OpReserved1","OpReserved2","OpReturn","OpRight","OpRipemd160","OpRoll","OpRot","OpRshift","OpSha1","OpSha256","OpSize","OpSub","OpSubstr","OpSwap","OpToaltStack","OpTuck","OpVer","OpVerIf","OpVerNotIf","OpVerify","OpWithin","OpXor","P2PKH_SCRIPT_SIZE","P2SH_SCRIPT_SIZE","P2WPKH_V0_SCRIPT_SIZE","P2WSH_V0_SCRIPT_SIZE","Time","Transaction","TransactionBuilder","TransactionInput","TransactionInputBuilder","TransactionInputSource","TransactionOutput","U256","Value","abs_diff","add","add","add_assign","add_input","add_output","add_transaction","add_witness","as_bits","as_bits","as_bits","as_byte_slice","as_byte_slice","as_byte_slice","as_bytes","as_bytes","as_bytes_mut","as_bytes_mut","as_fixed_bytes","as_fixed_bytes","as_fixed_bytes_mut","as_fixed_bytes_mut","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_byte_slice","as_mut_byte_slice","as_mut_ptr","as_mut_ptr","as_mut_slice_of","as_mut_slice_of","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","as_u128","as_u256","as_u32","as_u64","as_usize","assign_from_slice","assign_from_slice","bit","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","byte","chain_id","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","coinbase_proof","covers","covers","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","div","div","div_assign","div_mod","encode","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_version","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp10","extract_address","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_big_endian","from_bytes_be","from_bytes_le","from_dec_str","from_hex_be","from_hex_le","from_little_endian","from_low_u64_be","from_low_u64_be","from_low_u64_le","from_low_u64_le","from_low_u64_ne","from_low_u64_ne","from_slice","from_slice","from_str","from_str","from_str","from_str_radix","full_mul","get_compact","hash","hash","hash","hash","hash","hash","hash_prev_block","header","index","index","index_mut","index_mut","inputs","integer_sqrt","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_coinbase","is_zero","is_zero","is_zero","is_zero","leading_zeros","len_bytes","len_bytes","lock_at","low_u128","low_u32","low_u64","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_height","max_value","merkle_proof","merkle_root","mine","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","nonce","not","one","op_return","outputs","overflowing_add","overflowing_mul","overflowing_neg","overflowing_pow","overflowing_sub","partial_cmp","partial_cmp","partial_cmp","payment","pow","random","random","random_using","random_using","randomize","randomize","randomize_using","randomize_using","rem","rem","rem_assign","repeat_byte","repeat_byte","rlp_append","rlp_append","rlp_append","saturating_add","saturating_mul","saturating_sub","script","script","sequence","serialize","serialize","serialize","serialize","set_compact","sha256d","shl","shl","shl_assign","shr","shr","shr_assign","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_no_witness","source","start_height","sub","sub","sub_assign","target","timestamp","to_big_endian","to_bytes_be","to_bytes_le","to_fixed_bytes","to_fixed_bytes","to_hex_be","to_hex_le","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_little_endian","to_low_u64_be","to_low_u64_be","to_low_u64_le","to_low_u64_le","to_low_u64_ne","to_low_u64_ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trailing_zeros","transactions","try_as_bits","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_format","try_format","try_format","try_format","try_format","try_format","try_format","try_format","try_format","try_format","try_format","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","tx_id_bounded","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","update_hash","user_tx_proof","using_encoded","using_encoded","using_encoded","using_encoded","value","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_block_height","with_coinbase","with_locktime","with_p2pkh","with_p2sh","with_p2wpkh","with_p2wsh","with_previous_hash","with_script","with_sequence","with_source","with_timestamp","with_version","with_version","with_witness","witness","zero","zero","zero","zero","InputType","P2PKH","P2SH","P2WPKHv0","TransactionInputMetadata","TransactionOutputMetadata","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","count","from","from","from","hash256_merkle_step","into","into","into","log2","log256","num_op_return","num_p2pkh","num_p2sh","num_p2wpkh","reverse_endianness","script_type","sha256d","sha256d_be","sha256d_le","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virtual_transaction_size","vzip","vzip","vzip","num_pubkeys","num_signatures"],"q":[[0,"bitcoin"],[155,"bitcoin::formatter"],[159,"bitcoin::global"],[170,"bitcoin::merkle"],[263,"bitcoin::pow"],[267,"bitcoin::types"],[1118,"bitcoin::utils"],[1162,"bitcoin::utils::InputType"]],"d":["A Bitcoin address is a serialized identifier that …","","","","","","","","","","","","","","","","","","","","","","","","","","Compressed ECDSA (secp256k1 curve) Public Key","Bitcoin script","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Generates an ephemeral “deposit” public key which can …","","","","","","","","","","","Calculates the RIPEMD-160 hash of the compressed public …","","","","","","","Construct the p2pkh scriptSig for this compressed pubKey …","Construct the scriptSig for a one-signature-required p2sh …","","","","","","","","","","","","","","","","","","","","","","","","","","","Type to be formatted as a bytes array","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Stores the content of a merkle proof","Stores the content of a merkle tree","","","","","","","","","","","","","","","","","","","","","","","Returns the height of the partial merkle tree","Returns the width of the partial merkle tree","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the merkle root of the proof partial merkle tree","","","","","Target Timespan: 2 weeks (1209600 seconds)","Used in Bitcoin’s retarget algorithm","Unrounded Maximum Target …","","Bitcoin block: header and transactions","Generates a new block mined with the given difficulty","Representation of a Bitcoin blockchain","Structs Bitcoin Basic Block Headers","","coinbase transaction with given height","Spending from transaction with the given hash, from output …","We also check the coinbase proof in order to defend …","Fixed-size uninterpreted hash type with 20 bytes (160 …","Fixed-size uninterpreted hash type with 32 bytes (256 …","Represents a bitcoin 32 bytes hash digest encoded in …","","","","Maximum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bitcoin Script OpCodes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom Types","","","","time as unix timestamp","Bitcoin transaction","Construct txs from inputs and outputs","Bitcoin transaction input","Construct transaction inputs","","Bitcoin transaction output","Little-endian large integer type 256-bit unsigned integer.","","Computes the absolute difference between self and other.","","","","","","","","","","","","","","Extracts a byte slice containing the entire fixed hash.","Extracts a byte slice containing the entire fixed hash.","Extracts a mutable byte slice containing the entire fixed …","Extracts a mutable byte slice containing the entire fixed …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","","","","","","","Returns a mutable raw pointer to the value.","Returns a mutable raw pointer to the value.","","","Returns a constant raw pointer to the value.","Returns a constant raw pointer to the value.","","","","","","Conversion to u128 with overflow checking","Returns the value as a U256","Conversion to u32 with overflow checking","Conversion to u64 with overflow checking","Conversion to usize with overflow checking","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Return if specific bit is set.","","","","","","","","","","","","","","","","","","","","","Return the least number of bits needed to represent the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return specific byte.","","Checked addition. Returns <code>None</code> if overflow occurred.","Checked division. Returns <code>None</code> if <code>other == 0</code>.","Checked multiplication. Returns <code>None</code> if overflow occurred.","Checked negation. Returns <code>None</code> unless <code>self == 0</code>.","Checked exponentiation. Returns <code>None</code> if overflow occurred.","Checked modulus. Returns <code>None</code> if <code>other == 0</code>.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a pair <code>(self / other, self % other)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create <code>10**n</code> as this type.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Constructs a hash type from the given reference to the …","Returns the argument unchanged.","Constructs a hash type from the given bytes array of fixed …","Constructs a hash type from the given reference to the …","","Constructs a hash type from the given bytes array of fixed …","Constructs a hash type from the given reference to the …","Returns the argument unchanged.","Constructs a hash type from the given reference to the …","Converts from big endian representation bytes in memory.","Creates a H256Le from big endian bytes","Creates a H256Le from little endian bytes","Convert from a decimal string.","","","Converts from little endian representation bytes in memory.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Create a new fixed-hash from the given slice <code>src</code>.","Create a new fixed-hash from the given slice <code>src</code>.","","Creates a hash type instance from the given string.","Creates a hash type instance from the given string.","Converts a string slice in a given base to an integer. …","Multiplies two 256-bit integers to produce full 512-bit …","","","Returns the hash of the block header using Bitcoin’s …","","","","","","","","","","","","Compute the highest <code>n</code> such that <code>n * n &lt;= self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether this is zero.","","Returns <code>true</code> if no bits are set.","Returns <code>true</code> if no bits are set.","Returns the number of leading zeros in the binary …","Returns the size of this hash in bytes.","Returns the size of this hash in bytes.","","Low 2 words (u128)","Conversion to u32","Low word (u64)","","","","","","","","The maximum value which can be inhabited by this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One (multiplicative identity) of this type.","","","Addition which overflows and returns a flag if it does.","Multiply with overflow, returning a flag if it does.","Negation with overflow.","Fast exponentiation by squaring. Returns result and …","Subtraction which underflows and returns a flag if it does.","","","","","Fast exponentiation by squaring …","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content …","Create a new hash with cryptographically random content …","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value using the …","Assign <code>self</code> to a cryptographically random value using the …","","","","Returns a new fixed hash where all bits are set to the …","Returns a new fixed hash where all bits are set to the …","","","","Addition which saturates at the maximum value (Self::MAX).","Multiplication which saturates at the maximum value..","Subtraction which saturates at zero.","","","","","","","","","Hashes the value a single time using sha256","","","","","","","","","","","","","","","","","","","","","","","","Write to the slice in big-endian format.","Returns the content of the H256Le encoded in big endian","Returns the content of the H256Le encoded in little endian","Returns the inner bytes array.","Returns the inner bytes array.","Returns the content of the H256Le encoded in big endian hex","Returns the content of the H256Le encoded in little endian …","","","","","","","","","","","","","Write to the slice in little-endian format.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as native-endian.","Returns the lowest 8 bytes interpreted as native-endian.","","","","","","","","","","","","","","","","","","","Returns the number of trailing zeros in the binary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero (additive identity) of this type.","Creates a new H256Le hash equals to zero","Returns a new zero-initialized fixed hash.","Returns a new zero-initialized fixed hash.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Concatenates and hashes two inputs for merkle proving.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the (ceiled) log base 2 of the value","Returns the (ceiled) log base 256 of the value","","","","","Reverses endianness of the value","","Computes Bitcoin’s double SHA256 hash over a LE byte …","","","","","","","","","","","","","","","","",""],"i":[0,16,16,16,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,5,5,5,0,0,0,16,16,1,3,1,1,16,5,3,1,16,5,3,1,5,3,1,5,3,1,5,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,5,3,3,1,5,3,1,16,5,3,1,1,16,5,3,1,0,16,5,3,3,1,1,5,86,0,5,16,5,3,1,1,1,1,1,1,5,1,5,3,0,1,3,1,5,0,5,5,3,87,5,3,1,3,5,3,1,5,3,1,3,3,5,1,16,5,3,1,1,16,5,3,1,16,5,3,1,5,3,1,0,3,1,0,16,5,3,1,0,0,2,28,0,0,33,33,33,33,33,33,33,33,33,0,0,0,0,37,36,34,35,36,37,34,35,36,37,34,35,36,37,34,35,36,37,35,36,36,36,35,35,34,36,34,36,34,36,34,36,36,34,36,34,36,37,37,36,34,35,36,37,34,35,36,37,36,34,35,36,37,34,34,36,34,36,34,35,36,37,34,37,37,37,36,36,34,35,36,37,34,35,36,37,37,34,34,35,36,37,34,36,34,34,35,36,37,0,0,0,0,0,0,0,0,56,55,55,0,0,0,0,0,0,0,39,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,56,0,0,0,0,0,0,0,0,39,39,39,39,42,42,45,47,39,26,23,39,26,23,26,23,26,23,26,23,26,23,26,23,26,23,26,23,26,23,26,23,26,23,39,26,23,26,23,39,38,39,39,39,26,23,39,39,26,26,23,23,39,26,26,23,23,39,26,26,23,23,39,26,26,23,23,39,39,26,26,23,23,39,26,26,23,23,45,42,47,52,53,39,54,55,43,44,46,56,57,58,38,26,23,45,42,47,52,53,39,54,55,43,44,46,56,57,58,38,26,23,42,47,39,58,39,39,39,39,39,39,39,52,53,39,54,55,43,44,46,56,57,58,38,26,23,52,53,39,54,55,43,44,46,56,57,58,38,26,23,39,26,23,52,26,23,52,39,39,54,55,43,44,46,56,58,38,26,26,23,23,52,39,54,55,43,44,46,56,58,38,26,23,52,39,54,55,43,44,46,56,58,38,26,23,52,39,54,55,43,44,46,56,58,38,26,23,45,42,47,39,54,46,56,57,58,38,26,23,39,38,26,23,39,39,39,39,38,26,23,26,23,52,54,55,43,44,46,56,58,38,54,52,39,54,55,43,44,46,56,57,58,38,38,26,23,23,39,44,52,39,39,39,39,54,55,43,44,46,56,57,58,38,38,38,26,26,26,26,23,23,23,23,45,42,47,52,53,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,54,55,43,44,46,56,57,58,38,38,38,38,38,38,38,38,38,26,26,26,26,26,23,23,23,23,23,39,38,38,39,38,38,39,26,23,26,23,26,23,26,23,39,26,23,39,39,39,39,54,46,26,23,54,54,57,26,23,26,23,46,39,45,42,47,52,53,39,54,55,43,44,46,56,57,58,38,26,23,46,39,38,26,23,39,26,23,46,39,39,39,39,54,58,38,26,23,58,39,57,54,45,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,45,42,47,54,39,39,44,46,39,39,39,39,39,39,26,23,44,39,26,23,26,23,26,23,26,23,39,39,39,26,23,39,26,23,39,39,39,43,44,43,39,38,26,23,39,38,39,39,39,39,39,39,52,54,55,43,44,46,56,58,38,46,43,58,39,39,39,54,54,39,38,38,26,23,38,38,52,39,54,55,43,44,46,56,58,38,26,23,39,26,23,26,23,26,23,52,53,39,54,55,43,44,46,56,57,58,38,26,23,39,38,26,23,39,57,39,26,23,26,23,53,39,54,43,44,46,56,57,38,26,23,45,42,47,52,53,39,39,39,54,55,43,44,46,56,57,58,38,26,23,45,42,47,52,53,39,54,55,43,44,46,56,57,58,38,26,23,46,46,45,42,47,52,53,39,54,55,43,44,46,56,57,58,38,26,23,52,39,54,55,43,44,46,56,58,38,26,23,54,52,39,38,26,23,44,54,46,45,42,47,52,53,39,54,55,43,44,46,56,57,58,38,26,23,42,45,42,47,47,47,47,45,47,47,47,45,45,42,43,43,39,38,26,23,0,88,88,88,0,0,88,84,85,88,84,85,84,88,84,85,0,88,84,85,0,0,85,85,85,85,0,84,0,0,0,88,84,85,88,84,85,88,84,85,0,88,84,85,89,89],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[3],[1],[1,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[3,3],[1,1],[[]],[[]],[[]],[[5,5],6],[7,[[9,[5,8]]]],[7,[[9,[3,8]]]],[7,[[9,[1,8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[],5],[[],3],[[],1],[11,[[9,[5]]]],[11,[[9,[3]]]],[[],5],[[],3],[3,[[13,[12]]]],[1,[[13,[12]]]],[[5,[0,[14,15]]]],[[3,[0,[14,15]]]],[[1,[0,[14,15]]]],[[16,16],17],[[5,5],17],[[3,3],17],[[1,1],17],[1,[[9,[[13,[12]],16]]]],[[16,18],19],[[5,18],19],[[3,18],19],[[1,18],19],0,[[]],[[]],[[]],[[],3],[[]],[[[13,[12]]],1],[1,[[9,[5,16]]]],[[],[[20,[10]]]],0,[[5,21]],[[]],[[]],[[]],[[]],[1,17],[1,17],[1,17],[1,17],[1,17],[5,17],[1,22],[[],22],[[],22],0,[[],1],[[3,23],[[9,[3,24]]]],[[],1],[[5,5],[[20,[6]]]],0,[[],5],[[5,25],9],[[3,25],9],[10,[[20,[15]]]],[5,22],[3,22],[1,22],[3,26],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[]],[[]],[[]],[[3,[13,[12]]],1],[[3,[13,[12]]],1],[5,1],[[1,28],[[9,[16]]]],[[],9],[[],9],[[],9],[29,[[9,[1]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],0,[[3,32]],[[1,32]],0,[[]],[[]],[[]],[[]],0,0,[28,[[9,[16]]]],[[],[[9,[16]]]],0,0,[[]],[[]],[33],[[]],[[]],[[],9],[[],9],[[],30],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[36,36],[37,37],[[]],[[]],[[]],[[]],[10,10],[[36,10,10],[[9,[38,16]]]],[36,10],[[36,10],10],[[10,10,10],[[9,[38,16]]]],[[10,10],10],[7,[[9,[34,8]]]],[7,[[9,[36,8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[],36],[[34,[0,[14,15]]]],[[36,[0,[14,15]]]],[[34,34],17],[[36,36],17],[[37,37],17],0,0,[[34,18],19],[[35,18],19],[[36,18],19],[[37,18],19],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,[34,22],[36,22],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[36,28],[[9,[16]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[34,[[9,[37,16]]]],[[]],[[]],[[]],[[]],0,0,0,[[39,40,40],[[9,[10,16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,39],39],[[39,[41,[39]]],39],[[39,[41,[39]]],39],[[39,39]],[[42,43],42],[[42,44],42],[[45,46],45],[47,47],[[],[[49,[48]]]],[[],[[49,[48]]]],[[],[[49,[48]]]],[[]],[[]],[[]],[26],[23],[26],[23],[26],[23],[26],[23],[26],[23],[[],[[49,[48]]]],[[],[[49,[48]]]],[[]],[[]],[26,12],[23,12],[[],[[9,[50]]]],[[],[[9,[50]]]],[26,12],[23,12],[39],[26],[23],[[],[[9,[50]]]],[[],[[9,[50]]]],[39,51],[38,39],[39,10],[39,40],[39,22],[26],[23],[[39,22],17],[[39,39],39],[[26,26]],[[26,26]],[[23,23]],[[23,23]],[[39,39]],[[26,26]],[[26,26]],[[23,23]],[[23,23]],[[39,39],39],[[26,26]],[[26,26]],[[23,23]],[[23,23]],[[39,39]],[[26,26]],[[26,26]],[[23,23]],[[23,23]],[39,22],[[39,39],39],[[26,26]],[[26,26]],[[23,23]],[[23,23]],[[39,39]],[[26,26]],[[26,26]],[[23,23]],[[23,23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,46],[47,43],[[39,22],12],0,[[39,39],[[20,[39]]]],[[39,39],[[20,[39]]]],[[39,39],[[20,[39]]]],[39,[[20,[39]]]],[[39,39],[[20,[39]]]],[[39,39],[[20,[39]]]],[[39,39],[[20,[39]]]],[52,52],[53,53],[39,39],[54,54],[55,55],[43,43],[44,44],[46,46],[56,56],[57,57],[58,58],[38,38],[26,26],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,39],6],[[26,26],6],[[23,23],6],0,[[26,26],17],[[23,23],17],[7,[[9,[52,8]]]],[7,[[9,[39,8]]]],[59,[[9,[39,60]]]],[7,[[9,[54,8]]]],[7,[[9,[55,8]]]],[7,[[9,[43,8]]]],[7,[[9,[44,8]]]],[7,[[9,[46,8]]]],[7,[[9,[56,8]]]],[7,[[9,[58,8]]]],[7,[[9,[38,8]]]],[7,[[9,[26,8]]]],[59,[[9,[26,60]]]],[7,[[9,[23,8]]]],[59,[[9,[23,60]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[10,7],[[9,[8]]]],[[],45],[[],42],[[],47],[[],39],[[],54],[[],46],[[],56],[[],57],[[],58],[[],38],[[],26],[[],23],[11,[[9,[39]]]],[11,[[9,[38]]]],[11,[[9,[26]]]],[11,[[9,[23]]]],[[39,[41,[39]]],39],[[39,[41,[39]]],39],[[39,[41,[39]]]],[[39,39]],[38,[[13,[12]]]],[[],[[62,[61]]]],[[],[[62,[61]]]],[[],[[62,[61]]]],[[],[[62,[61]]]],[[52,[0,[14,15]]]],[[54,[0,[14,15]]]],[[55,[0,[14,15]]]],[[43,[0,[14,15]]]],[[44,[0,[14,15]]]],[[46,[0,[14,15]]]],[[56,[0,[14,15]]]],[[58,[0,[14,15]]]],[[38,[0,[14,15]]]],[54,[[9,[16]]]],[[52,52],17],[[39,39],17],[[54,54],17],[[55,55],17],[[43,43],17],[[44,44],17],[[46,46],17],[[56,56],17],[[57,57],17],[[58,58],17],[[38,38],17],[[38,23],17],[[26,26],17],[[23,23],17],[[23,38],17],[22,39],[44,[[9,[5,16]]]],[[52,18],19],[[39,18],[[9,[63]]]],[[39,18],[[9,[63]]]],[[39,18],[[9,[63]]]],[[39,18],[[9,[63]]]],[[54,18],19],[[55,18],19],[[43,18],19],[[44,18],19],[[46,18],19],[[56,18],19],[[57,18],19],[[58,18],19],[[38,18],19],[[38,18],19],[[38,18],19],[[26,18],[[9,[63]]]],[[26,18],[[9,[63]]]],[[26,18],[[9,[63]]]],[[26,18],[[9,[63]]]],[[23,18],[[9,[63]]]],[[23,18],[[9,[63]]]],[[23,18],[[9,[63]]]],[[23,18],[[9,[63]]]],[[]],[[]],[[]],[[]],[[]],[39,39],[51,39],[64,39],[29,39],[22,39],[65,39],[66,39],[67,39],[68,39],[40,39],[[],39],[[],39],[10,39],[69,39],[12,39],[70,39],[[],39],[[]],[71,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,38],[71,38],[70,38],[65,38],[40,38],[[]],[12,38],[66,38],[69,38],[23,26],[[],26],[[]],[[],26],[[],26],[26,23],[[],23],[[],23],[[]],[[],23],[[],39],[[],38],[[],38],[29,[[9,[39,72]]]],[29,38],[29,38],[[],39],[40,26],[40,23],[40,26],[40,23],[40,26],[40,23],[[],26],[[],23],[29,[[9,[39]]]],[29,[[9,[26,73]]]],[29,[[9,[23,73]]]],[[29,10],[[9,[39,74]]]],[[39,39],75],[39,[[20,[10]]]],[[39,21]],[54,[[9,[38,16]]]],[46,38],[[26,21]],[[23,21]],0,0,0,[[26,76]],[[23,76]],[[26,76]],[[23,76]],0,[39,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,17],[39,17],[38,17],[26,17],[23,17],[39,10],[[],22],[[],22],0,[39,51],[39,10],[39,40],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],39],[57,[[9,[36,16]]]],0,[[45,39],[[9,[57,16]]]],[[39,10],39],[[39,22],39],[[39,64],39],[[39,40],39],[[39,10],39],[[39,12],39],[[39,70],39],[[39,39],39],[[39,66],39],[[39,69],39],[[39,64],39],[[39,66],39],[[39,65],39],[[39,64],39],[[39,66],39],[[39,12],39],[[39,70],39],[[39,10],39],[[39,70],39],[[39,12],39],[[39,69],39],[[39,40],39],[[39,22],39],[[39,40],39],[[39,22],39],[[39,71],39],[[39,71],39],[[39,71],39],[[39,71],39],[[39,65],39],[[39,22],39],[[39,39],39],[[39,39],39],[[39,40],39],[[39,70],39],[[39,69],39],[[39,39],39],[[39,69],39],[[39,12],39],[[39,65],39],[[39,64],39],[[39,65],39],[[39,10],39],[[39,66],39],[[39,22]],[[39,64]],[[39,40]],[[39,71]],[[39,12]],[[39,66]],[[39,39]],[[39,70]],[[39,69]],[[39,10]],[[39,65]],[[],45],[[],42],[[],47],0,[39,39],[[],39],[77,44],0,[[39,39]],[[39,39]],[39],[[39,39]],[[39,39]],[[39,39],[[20,[6]]]],[[26,26],[[20,[6]]]],[[23,23],[[20,[6]]]],[[77,5],44],[[39,39],39],[[],26],[[],23],[[[0,[78,15]]],26],[[[0,[78,15]]],23],[26],[23],[[26,[0,[78,15]]]],[[23,[0,[78,15]]]],[[39,[0,[[41,[39]],79]]],39],[[39,[0,[[41,[39]],79]]],39],[[39,[0,[[41,[39]],79]]]],[12,26],[12,23],[[39,80]],[[26,80]],[[23,80]],[[39,39],39],[[39,39],39],[[39,39],39],0,0,0,[[39,25],9],[[38,25],9],[[26,25],9],[[23,25],9],[10,[[20,[39]]]],[38,38],[[39,[41,[39]]],39],[[39,[41,[39]]],39],[[39,[41,[39]]]],[[39,[41,[39]]],39],[[39,[41,[39]]],39],[[39,[41,[39]]]],[52,22],[54,22],[55,22],[43,22],[44,22],[46,22],[56,22],[58,22],[38,22],[46,22],0,0,[[39,[41,[39]]],39],[[39,[41,[39]]],39],[[39,39]],0,0,[39],[38],[38],[26],[23],[38,4],[38,4],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[[],[[13,[12,27]]]],[39],[26,40],[23,40],[26,40],[23,40],[26,40],[23,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[39,10],0,[[],[[9,[[49,[48]],81]]]],[[],[[9,[[49,[48]],81]]]],[[],[[9,[[49,[48]],81]]]],[[],[[9,[[49,[48]],81]]]],[[],[[9,[[49,[48]],81]]]],[[53,28],[[9,[16]]]],[[39,28],[[9,[16]]]],[[54,28],[[9,[16]]]],[[43,28],[[9,[16]]]],[[44,28],[[9,[16]]]],[[46,28],[[9,[16]]]],[[56,28],[[9,[16]]]],[[57,28],[[9,[16]]]],[[38,28],[[9,[16]]]],[[26,28],[[9,[16]]]],[[23,28],[[9,[16]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[75,[[9,[39,82]]]],[75,[[9,[39,82]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[46,38],[[46,10],[[9,[38,16]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],[[31,[83]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],[[31,[83]]]],[[],[[31,[83]]]],[54,[[9,[38,16]]]],0,[[39,32]],[[38,32]],[[26,32]],[[23,32]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,10],42],[[45,5,77,10],45],[[42,10],42],[[47,3,[13,[12]]],47],[[47,3,[13,[12]]],47],[[47,3,[13,[12]]],47],[[47,3,[13,[12]]],47],[[45,38],45],[47,47],[[47,10],47],[[47,55],47],[[45,10],45],[[45,65],45],[[42,65],42],[[43,[13,[[13,[12]]]]]],0,[[],39],[[],38],[[],26],[[],23],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],38],[[]],[[]],[[]],[40,10],[39,12],0,0,0,0,[[],[[13,[12]]]],0,[[]],[[],23],[[],38],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],30],[[],30],[[],30],[[84,85],10],[[]],[[]],[[]],0,0],"c":[],"p":[[3,"Script"],[8,"TryFormat"],[3,"PublicKey"],[3,"String"],[4,"Address"],[4,"Ordering"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Deserializer"],[15,"u8"],[3,"Vec"],[8,"Output"],[8,"Sized"],[4,"Error"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[15,"usize"],[3,"H256"],[4,"Error"],[8,"Serializer"],[3,"H160"],[3,"Global"],[8,"Writer"],[15,"str"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[3,"GlobalContext"],[3,"PartialTransactionProof"],[3,"MerkleTree"],[3,"MerkleProof"],[3,"ProofResult"],[3,"H256Le"],[3,"U256"],[15,"u64"],[8,"Into"],[3,"TransactionBuilder"],[3,"TransactionInput"],[3,"TransactionOutput"],[3,"BlockBuilder"],[3,"Transaction"],[3,"TransactionInputBuilder"],[8,"BitOrder"],[3,"BitSlice"],[4,"Error"],[15,"u128"],[3,"FullTransactionProof"],[4,"OpCode"],[3,"BlockHeader"],[4,"TransactionInputSource"],[4,"LockTime"],[3,"Block"],[3,"BlockChain"],[3,"Rlp"],[4,"DecoderError"],[15,"char"],[8,"FromIterator"],[3,"Error"],[15,"isize"],[15,"i32"],[15,"i16"],[3,"U128"],[15,"i128"],[15,"i8"],[15,"i64"],[15,"u16"],[4,"FromDecStrErr"],[4,"FromHexError"],[3,"FromStrRadixErr"],[3,"U512"],[8,"SliceIndex"],[6,"Value"],[8,"Rng"],[8,"Copy"],[3,"RlpStream"],[4,"BitSpanError"],[4,"Error"],[4,"MetaForm"],[3,"TransactionInputMetadata"],[3,"TransactionOutputMetadata"],[8,"GetCompact"],[8,"SetCompact"],[4,"InputType"],[13,"P2SH"]]},\
"btc_relay":{"doc":"BTC-Relay Pallet","t":"REDRDRCNNNNDCRRILLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLMLALLLLLLLLKKKKLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLALLLLLLLLMLLLLLLNNNNNNNNENNNINNNEENNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGNDQNNQNNNNNNNNQNLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLALNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMFFDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNNNNDLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLL","n":["ACCEPTED_MAX_TRANSACTION_OUTPUTS","BtcAddress","BtcPublicKey","DIFFICULTY_ADJUSTMENT_INTERVAL","FullTransactionProof","MAIN_CHAIN_ID","OpReturnPaymentData","P2PKH","P2SH","P2WPKHv0","P2WSHv0","PartialTransactionProof","RichBlockHeader","TARGET_SPACING","UNROUNDED_MAX_TARGET","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","as_bytes","bitcoin","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","coinbase_proof","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","dummy","dummy","encode","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_script_pub_key","get_hash","hash","identity","identity","identity","identity","init","init","init","init","initialize","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_zero","max_encoded_len","max_encoded_len","merkle_proof","new_deposit_public_key","pallet","partial_cmp","random","serialize","serialize","size_hint","size_hint","size_hint","size_hint","store_block_header","store_block_header_new_fork_sorted","store_block_header_new_fork_unsorted","store_block_header_reorganize_chains","to_hash","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_p2pkh_script_sig","to_p2sh_script_sig","to_script_pub_key","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_encoded_len","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","types","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","user_tx_proof","using_encoded","verify_proof","vzip","vzip","vzip","vzip","AlreadyInitialized","AlreadyReported","ArithmeticOverflow","ArithmeticUnderflow","BitcoinConfirmations","BlockHeightOverflow","BlockNotFound","BoundExceeded","Call","ChainCounterOverflow","ChainReorg","ChainsUnderflow","Config","DiffTargetHeader","DuplicateBlock","EndOfFile","Error","Event","ForkAheadOfMainChain","ForkIdNotFound","GenesisConfig","Initialized","InvalidBlockVersion","InvalidBtcAddress","InvalidBtcHash","InvalidChainID","InvalidCoinbasePosition","InvalidCompact","InvalidHeaderSize","InvalidMerkleProof","InvalidOpReturn","InvalidOpReturnTransaction","InvalidOutputFormat","InvalidPayment","InvalidPaymentAmount","InvalidScript","InvalidStartHeight","InvalidTransaction","InvalidTxVersion","InvalidTxid","LowDiff","MalformedHeader","MalformedMerkleProof","MalformedOpReturnOutput","MalformedP2PKHOutput","MalformedP2SHOutput","MalformedTransaction","MalformedTxid","MalformedWitnessOutput","MissingBlockHeight","Module","OngoingFork","Pallet","ParachainBlocksPerBitcoinBlock","ParachainConfirmations","PrevBlock","RuntimeEvent","Shutdown","StoreForkHeader","StoreMainChainHeader","TryIntoIntError","UnauthorizedRelayer","UnknownErrorcode","UnsupportedInputFormat","UnsupportedOutputFormat","WeightInfo","WrongForkBound","__clone_box","__clone_box","__clone_box","_initialize","_store_block_header","_validate_block_header","_verify_transaction_inclusion","assimilate_storage","bitcoin_block_expired","bitcoin_confirmations","bitcoin_confirmations","bitcoin_expiry_height","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","block_header_exists","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_bitcoin_confirmations","check_parachain_confirmations","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","disable_difficulty_check","disable_difficulty_check","disable_inclusion_check","disable_inclusion_check","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_and_verify_issue_payment","get_best_block","get_best_block_height","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","has_request_expired","identity","identity","identity","index","infos","init","init","init","init","init","initialize","initialize","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_fully_initialized","module_name","name","new_call_variant_initialize","new_call_variant_store_block_header","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","parachain_confirmations","parachain_confirmations","serialize","set_disable_difficulty_check","size_hint","size_hint","size_hint","storage_info","storage_types","store_block_header","store_block_header","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_and_validate_op_return_transaction","verify_block_header_inclusion","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","block_header","block_header","block_height","fork_bound","block_hash","block_hash","block_hash","block_height","block_height","chain_id","fork_depth","fork_height","fork_height","fork_id","main_chain_height","new_chain_tip_hash","new_chain_tip_height","relayer_id","relayer_id","relayer_id","initialize","store_block_header","BestBlock","BestBlockHeight","BlockHeaders","ChainCounter","Chains","ChainsHashes","ChainsIndex","DisableDifficultyCheck","DisableInclusionCheck","StableBitcoinConfirmations","StableParachainConfirmations","StartBlockHeight","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BtcAddress","OpReturnPaymentData","P2PKH","P2SH","P2WPKHv0","P2WSHv0","RichBlockHeader","__clone_box","blake2_128","blake2_128_concat","blake2_256","block_hash","block_header","block_height","borrow","borrow","borrow_mut","borrow_mut","chain_id","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","ensure_valid_payment_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_clear","max_encoded_len","new","op_return","para_height","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"btc_relay"],[232,"btc_relay::pallet"],[532,"btc_relay::pallet::Call"],[536,"btc_relay::pallet::Event"],[552,"btc_relay::pallet::dispatchables"],[554,"btc_relay::pallet::storage_types"],[806,"btc_relay::types"]],"d":["Accepted maximum number of transaction outputs for …","A Bitcoin address is a serialized identifier that …","Compressed ECDSA (secp256k1 curve) Public Key","Difficulty Adjustment Interval","We also check the coinbase proof in order to defend …","Main chain id","","","","","","","","Target Spacing: 10 minutes (600 seconds)","Unrounded Maximum Target …","Weight functions needed for btc_relay.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Generates an ephemeral “deposit” public key which can …","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","Calculates the RIPEMD-160 hash of the compressed public …","","","","","","","","","Construct the p2pkh scriptSig for this compressed pubKey …","Construct the scriptSig for a one-signature-required p2sh …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the merkle root of the proof partial merkle tree","","","","","Already initialized","Error code already reported","Arithmetic overflow","Arithmetic underflow","Transaction has less confirmations of Bitcoin blocks than …","Overflow of block height","Block header not found for given hash","Weight bound exceeded","Contains a variant per dispatchable extrinsic that this …","Overflow of chain counter","","Underflow of stored blockchains counter","Configuration trait of this pallet.","Incorrect difficulty target specified in block header","Block already stored","EndOfFile reached while parsing","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","","Blockchain with requested ID not found","Can be used to configure the genesis state of this pallet.","","Invalid block header version","Specified invalid Bitcoin address","User supplied an invalid address","Invalid chain ID","Coinbase tx must be the first transaction in the block","Invalid compact value in header","Invalid block header size","Invalid merkle proof","Incorrect identifier in OP_RETURN field","Transaction does meet the requirements to be a valid …","Incorrect transaction output format","Incorrect recipient Bitcoin address","Invalid payment amount","User supplied an invalid script","Start height must be start of difficulty period","Transaction does meet the requirements to be considered …","Invalid transaction version","Transaction hash does not match given txid","PoW hash does not meet difficulty target of header","Format of the header is invalid","Merkle proof is malformed","Format of the OP_RETURN transaction output is invalid","","","Transaction has incorrect format","Malformed transaction identifier","Format of the BIP141 witness transaction output is invalid","Missing the block at this height","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Current fork ongoing","The <code>Pallet</code> struct, the main type that implements traits …","","Transaction has less confirmations of Parachain blocks …","Previous block hash not found","The overarching event type.","BTC Parachain has shut down","","","TryInto failed on integer","Unauthorized staked relayer","Error code not applicable to blocks","","","Weight information for the extrinsics in this module.","Wrong fork bound, should be higher","","","","","","","","","","“ Global security parameter k for stable Bitcoin …","Global security parameter k for stable Bitcoin transactions","","","","","","","","","","","Check if a block header exists","","","","","","","","","","","","Checks if the given transaction confirmations are …","Checks if the given bitcoin block has been stored for a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“ Whether the module should perform difficulty checks.“","Whether the module should perform difficulty checks.","“ Whether the module should perform inclusion checks.“","Whether the module should perform inclusion checks.","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","interface to the issue pallet; verifies inclusion and …","Get the current best block hash","get the best block height","","","","","","","","","","","","","","","","","One time function to initialize the BTC-Relay with the …","See <code>Pallet::initialize</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a call with the variant <code>initialize</code>.","Create a call with the variant <code>store_block_header</code>.","","","","","","","","“ Global security parameter k for stable Parachain …","Global security parameter k for stable Parachain …","","For internal testing","","","","","Auto-generated docs-only module listing all (public and …","Stores a single new block header","See <code>Pallet::store_block_header</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interface to redeem,replace,refund to check that the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One time function to initialize the BTC-Relay with the …","Stores a single new block header","Store the current blockchain tip","Store the height of the best block","Store Bitcoin block headers","Increment-only counter used to track new BlockChain entries","Priority queue of BlockChain elements, ordered by the …","Stores a mapping from (chain_index, block_height) to block …","Auxiliary mapping of chains ids to <code>BlockChain</code> entries. The …","Whether the module should perform difficulty checks.","Whether the module should perform inclusion checks.","Global security parameter k for stable Bitcoin transactions","Global security parameter k for stable Parachain …","BTC height when the relay was initialized","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Bitcoin address is a serialized identifier that …","","","","","","Bitcoin Enriched Block Headers","","","","","","","height of the block in the bitcoin chain","","","","","id if the chain that this block belongs to","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new RichBlockHeader","","active_block_number of the parachain at the time this …","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[2],0,[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[7,7],[2,2],[8,8],[[]],[[]],[[]],[[]],[[7,7],9],0,[10,[[12,[6,11]]]],[10,[[12,[7,11]]]],[10,[[12,[2,11]]]],[10,[[12,[8,11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,10],[[12,[11]]]],[[13,10],[[12,[11]]]],[[13,10],[[12,[11]]]],[[13,10],[[12,[11]]]],[[],7],[[],2],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[15,[[12,[7]]]],[15,[[12,[2]]]],[14],[14],[14],[14],[[],7],[[],2],[2,[[5,[3,4]]]],[[6,[0,[16,17]]]],[[7,[0,[16,17]]]],[[2,[0,[16,17]]]],[[8,[0,[16,17]]]],[[6,6],18],[[7,7],18],[[2,2],18],[[8,8],18],[[],18],[[],18],[[],18],[[],18],[[6,19],[[12,[20]]]],[[7,19],[[12,[20]]]],[[2,19],[[12,[20]]]],[[8,19],[[12,[20]]]],[[]],[[]],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[12,[7,22]]]],[[[0,[23,17]],24],25],[[7,26]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],14],[[],14],[[],14],[[],14],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[7,18],[[],14],[[],14],0,[[2,28],[[12,[2,29]]]],0,[[7,7],[[30,[9]]]],[[],7],[[7,31],12],[[2,31],12],[6,14],[7,14],[2,14],[8,14],[[],27],[13,27],[13,27],[13,27],[2,32],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[2,[5,[3,4]]],21],[[2,[5,[3,4]]],21],[7,21],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],33],[[],33],[[],33],[[],33],[[],[[35,[34]]]],[[],[[35,[34]]]],[[],[[35,[34]]]],[[],[[35,[34]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,36]],[6,[[12,[37,22]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[38,13],39],[38,39],[38,[[12,[40]]]],[[8,[30,[13]]],[[12,[41,40]]]],[[[43,[42]],44],[[12,[45]]]],[[13,[46,[42]]],[[12,[18,40]]]],[[],13],0,[[13,[46,[42]]],[[12,[13,40]]]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[47,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]]],[[13,[30,[13]],13],[[12,[40]]]],[[[46,[42]]],[[12,[40]]]],[48,48],[[[49,[42]]],[[49,[42]]]],[[[50,[42]]],[[50,[42]]]],[[]],[[]],[[]],[[],14],[[],51],[[]],[10,[[12,[[49,[42]],11]]]],[10,[[12,[52,11]]]],[10,[[12,[[50,[42]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,10],[[12,[11]]]],[[13,10],[[12,[11]]]],[[13,10],[[12,[11]]]],[[],[[43,[42]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[15,[[12,[[43,[42]]]]]],[[],18],0,[[],18],0,[[[50,[42]]],53],0,[14],[14],[14],[14],[14],[[[49,[42]],[0,[16,17]]]],[[52,[0,[16,17]]]],[[[50,[42]],[0,[16,17]]]],[[48,48],18],[[[49,[42]],[49,[42]]],18],[[[50,[42]],[50,[42]]],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[48,19],54],[[[49,[42]],19],54],[[[52,[42]],19],54],[[[50,[42]],19],54],[[]],[[]],[[]],[22,[[52,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,7],[[12,[[56,[55]],40]]]],[[],47],[[],13],[[[50,[42]]],3],[[]],[[[50,[42]]],57],[[]],[[[50,[42]]],58],[[[46,[42]],13,[46,[42]]],[[12,[18,40]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],14],[[],[[5,[59]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[[60,[42]],38,13],53],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[18,40]]]],[[],57],[[],57],[[38,13],[[50,[42]]]],[[38,13],[[50,[42]]]],[[[46,[42]]]],[[],61],[[[46,[42]]]],[[]],[[[46,[42]],27],27],[[[46,[42]]],27],[[],27],[[],[[46,[42]]]],0,[[[43,[42]],31],12],[18],[[[49,[42]]],14],[52,14],[[[50,[42]]],14],[[],[[5,[62]]]],0,[[[60,[42]],38,13],53],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],35],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,7,[63,[55]],28],[[12,[40]]]],[[47,[30,[13]]],[[12,[38,40]]]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[64]]]],[27,[[66,[65]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[38,13]],[[38,13]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[]],[[],[[5,[3,4]]]],[[]],[67,47],0,0,[[]],[[]],[[]],[[]],0,[[]],[[[67,[68]]],[[67,[68]]]],[[]],[10,[[12,[[67,[69]],11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[[13,10],[[12,[11]]]],[[],[[67,[70]]]],[14],[14],[14],[14],[14],[14],[[[67,[71]],[0,[16,17]]]],[[[72,[42]],55,7,[30,[28]]],[[12,[[30,[7]],40]]]],[[[67,[73]],[67,[73]]],18],[[[72,[[0,[73,74]]]],[72,[[0,[73,74]]]]],18],[[],18],[[],18],[[[67,[75]],19],54],[[[72,[[0,[75,74]]]],19],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],14],[[38,13,13],67],0,0,[[[67,[71]]],14],[[],[[5,[3,4]]]],[[]],[[],12],[[],12],[41,[[12,[[72,[42]]]]]],[[],12],[[],12],[[]],[[]],[[],[[5,[3,4]]]],[[],33],[[],33],[[],35],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[282],"p":[[3,"Private"],[3,"BtcPublicKey"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"PartialTransactionProof"],[4,"BtcAddress"],[3,"FullTransactionProof"],[4,"Ordering"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"Script"],[4,"Error"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[3,"Weight"],[3,"H256"],[4,"Error"],[4,"Option"],[8,"Serializer"],[3,"H160"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"FnOnce"],[3,"ProofResult"],[3,"BlockHeader"],[6,"DispatchResult"],[4,"DispatchError"],[3,"Transaction"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[6,"BlockNumberFor"],[3,"H256Le"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[6,"Result"],[6,"Value"],[8,"TryFrom"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"OriginFor"],[3,"StorageVersion"],[3,"StorageInfo"],[8,"TryInto"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[3,"RichBlockHeader"],[8,"Clone"],[8,"Decode"],[8,"Default"],[8,"Encode"],[3,"OpReturnPaymentData"],[8,"PartialEq"],[8,"Config"],[8,"Debug"],[8,"WeightInfo"],[13,"initialize"],[13,"store_block_header"],[13,"Initialized"],[13,"StoreMainChainHeader"],[13,"StoreForkHeader"],[13,"ChainReorg"],[13,"ForkAheadOfMainChain"],[3,"BlockHeaders"],[3,"Chains"],[3,"ChainsIndex"],[3,"ChainsHashes"],[3,"BestBlock"],[3,"BestBlockHeight"],[3,"StartBlockHeight"],[3,"ChainCounter"],[3,"StableBitcoinConfirmations"],[3,"StableParachainConfirmations"],[3,"DisableDifficultyCheck"],[3,"DisableInclusionCheck"]]},\
"btc_relay_rpc":{"doc":"RPC interface for the BtcRelay Module.","t":"DIIILLLLLLLLLLLLLLLLLLLLLKLLLL","n":["BtcRelay","BtcRelayApiClient","BtcRelayApiServer","BtcRelayRuntimeApi","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verify_block_header_inclusion","verify_block_header_inclusion","verify_block_header_inclusion","verify_block_header_inclusion","vzip"],"q":[[0,"btc_relay_rpc"]],"d":["A struct that implements the [<code>BtcRelayApi</code>].","Client implementation for the <code>BtcRelayApi</code> RPC API.","Server trait implementation for the <code>BtcRelayApi</code> RPC API.","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Collects all the methods and subscriptions defined in the …","Create new <code>BtcRelay</code> with the given reference to the client.","","","","","","","Verify that the block with the given block hash is …","","",""],"i":[0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,20,4,4,4,4,4,4,20,21,4,22,4],"f":[0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[]],[[]],[[],2],[3,4],[[],5],[[],5],[[],6],[[]],[[]],[7,[[9,[[5,[8]]]]]],[[],[[5,[[5,[8]],10]]]],[[[4,[[0,[11,12,[14,[13]],[15,[13]]]],13]],16,7],[[9,[[5,[8]]]]]],[[12,7],[[19,[[18,[17]]]]]],[[]]],"c":[],"p":[[15,"usize"],[3,"RpcModule"],[3,"Arc"],[3,"BtcRelay"],[4,"Result"],[3,"TypeId"],[4,"Option"],[4,"DispatchError"],[6,"RpcResult"],[4,"ApiError"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[8,"Codec"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"BtcRelayApiServer"],[8,"BtcRelayRuntimeApi"],[8,"BtcRelayApiClient"]]},\
"btc_relay_rpc_runtime_api":{"doc":"Runtime API definition for the BTCRelay Module.","t":"IL","n":["BtcRelayApi","verify_block_header_inclusion"],"q":[[0,"btc_relay_rpc_runtime_api"]],"d":["","Verify that the block with the given block hash is …"],"i":[0,4],"f":[0,[[],[[2,[[2,[1]],3]]]]],"c":[],"p":[[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"BtcRelayApi"]]},\
"clients_info":{"doc":"ClientsInfo Module","t":"DILLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKKLLLLLLLLLLLLAMALNEIEEQQGNDQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["ClientRelease","WeightInfo","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","checksum","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","is_clear","max_encoded_len","pallet","set_current_client_release","set_pending_client_release","size_hint","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","upgrade_client_releases","uri","v0","vzip","ApplyClientRelease","Call","Config","Error","Event","MaxNameLength","MaxUriLength","Module","NotifyClientRelease","Pallet","RuntimeEvent","WeightInfo","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_client_release","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_set_current_client_release","new_call_variant_set_pending_client_release","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","on_runtime_upgrade","pending_client_release","set_current_client_release","set_current_client_release","set_pending_client_release","set_pending_client_release","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","client_name","client_name","release","release","release","release","set_current_client_release","set_pending_client_release","CurrentClientReleases","PendingClientReleases","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","try_upgrade_current_client_releases"],"q":[[0,"clients_info"],[56,"clients_info::pallet"],[251,"clients_info::pallet::Call"],[255,"clients_info::pallet::Event"],[257,"clients_info::pallet::dispatchables"],[259,"clients_info::pallet::storage_types"],[301,"clients_info::upgrade_client_releases"]],"d":["","Weight functions needed for clients_info.","","","","","","","The SHA256 checksum of the client binary.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","","URI to the client release binary.","","","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","The maximum length of a client name.","The maximum length of a client URI.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The <code>Pallet</code> struct, the main type that implements traits …","The overarching event type.","Weight information for the extrinsics in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“ Mapping of client name (string literal represented as …","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant <code>set_current_client_release</code>.","Create a call with the variant <code>set_pending_client_release</code>.","","","","","","","","","“ Mapping of client name (string literal represented as …","Sets the current client release version, in case of a bug …","See <code>Pallet::set_current_client_release</code>.","Sets the pending client release version. To be batched …","See <code>Pallet::set_pending_client_release</code>.","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the current client release version, in case of a bug …","Sets the pending client release version. To be batched …","Mapping of client name (string literal represented as …","Mapping of client name (string literal represented as …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","For each pending client release, set the current release …"],"i":[0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,46,46,6,6,6,6,6,6,6,6,6,6,6,6,0,6,0,6,27,0,0,0,0,26,26,0,27,0,26,26,25,27,28,27,33,28,27,33,28,27,33,28,25,27,33,28,25,27,33,28,25,27,28,25,27,28,25,25,25,25,27,33,28,27,33,28,27,33,28,27,33,28,25,27,33,28,25,27,33,28,28,0,25,27,33,28,27,28,25,27,28,25,25,27,27,28,28,25,27,33,28,25,27,33,28,25,25,27,27,33,33,28,28,25,25,27,27,33,33,28,28,28,28,28,28,28,27,33,28,25,25,25,27,33,28,25,25,27,33,28,25,27,33,28,25,27,33,28,25,25,28,28,25,25,25,25,25,25,25,25,25,25,28,25,28,27,28,25,0,27,33,28,25,27,28,25,27,33,28,25,27,33,28,27,33,28,27,33,28,27,33,28,25,27,33,28,27,33,28,25,27,33,28,25,27,33,28,25,27,33,28,25,33,47,48,47,48,49,50,0,0,0,0,51,52,51,52,51,52,51,52,51,52,51,52,51,51,52,52,51,51,52,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,0],"f":[0,0,[1],[[]],[[],[[4,[2,3]]]],[[]],[[]],[[]],0,[[]],[[[6,[5,5]]],[[6,[5,5]]]],[[]],[7,[[10,[[6,[8,8]],9]]]],[[],[[10,[9]]]],[11,[[10,[9]]]],[[11,7],[[10,[9]]]],[[],[[6,[12,12]]]],[13],[13],[13],[[[6,[14,14]],[0,[15,16]]]],[[[6,[17,17]],[6,[17,17]]],18],[[],18],[[],18],[[[6,[19,19]],20],21],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],13],[[]],[[]],[[]],[[],18],[[],13],0,[[11,11],22],[[11,11],22],[[[6,[14,14]]],13],[[],[[4,[2,3]]]],[[]],[[],10],[[],10],[[]],[[]],[[],[[4,[2,3]]]],[[],23],[[],24],[[]],[[]],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[[[27,[26]]],[[27,[26]]]],[[[28,[26]]],[[28,[26]]]],[[]],[[]],[[]],[[],13],[[],29],[[[31,[[30,[2]]]]],[[32,[[6,[[30,[2]]]]]]]],[[]],[7,[[10,[[27,[26]],9]]]],[7,[[10,[33,9]]]],[7,[[10,[[28,[26]],9]]]],[[],[[10,[9]]]],[[],[[10,[9]]]],[[],[[10,[9]]]],[11,[[10,[9]]]],[11,[[10,[9]]]],[11,[[10,[9]]]],[[11,7],[[10,[9]]]],[[11,7],[[10,[9]]]],[[11,7],[[10,[9]]]],[13],[13],[13],[13],[13],[13],[13],[13],[[[28,[26]]],34],0,[13],[13],[13],[13],[[[27,[26]],[0,[15,16]]]],[[[28,[26]],[0,[15,16]]]],[[25,25],18],[[[27,[26]],[27,[26]]],18],[[[28,[26]],[28,[26]]],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[25,20],21],[[[27,[26]],20],21],[[[33,[26]],20],21],[[[28,[26]],20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[26]]],2],[[]],[[[28,[26]]],35],[[]],[[[28,[26]]],36],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],13],[[],[[4,[37]]]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[[30,[2]],[6,[[30,[2]]]]],[[28,[26]]]],[[[30,[2]],[6,[[30,[2]]]]],[[28,[26]]]],[[[38,[26]]]],[[],39],[[[38,[26]]]],[[]],[[[38,[26]],22],22],[[[38,[26]]],22],[[],22],[[],22],[[[31,[[30,[2]]]]],[[32,[[6,[[30,[2]]]]]]]],[[[40,[26]],[30,[2]],[6,[[30,[2]]]]],41],0,[[[40,[26]],[30,[2]],[6,[[30,[2]]]]],41],0,[[[27,[26]]],13],[[[28,[26]]],13],[[],[[4,[42]]]],0,[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[43]]]],[22,[[45,[44]]]],0,0,0,0,0,0,[[[30,[2]],[6,[[30,[2]]]]]],[[[30,[2]],[6,[[30,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[],22]],"c":[63],"p":[[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Clone"],[3,"ClientRelease"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Weight"],[3,"TypeId"],[3,"Type"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[3,"BoundedVec"],[8,"EncodeLike"],[4,"Option"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[6,"OriginFor"],[6,"DispatchResult"],[3,"StorageInfo"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"set_current_client_release"],[13,"set_pending_client_release"],[13,"NotifyClientRelease"],[13,"ApplyClientRelease"],[3,"CurrentClientReleases"],[3,"PendingClientReleases"]]},\
"collator_selection":{"doc":"Collator Selection pallet.","t":"ANNEGNDNGIGEEDDGQGQQQGNNNNNDNQQQQNNNNQQQNQIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLNLLLLLLLLKLKLLLLLLLLKLNLKLNKLNKLNLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMFFFFFDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["pallet","AlreadyCandidate","AlreadyInvulnerable","Call","CandidacyBond","CandidateAdded","CandidateInfo","CandidateRemoved","Candidates","Config","DesiredCandidates","Error","Event","GenesisConfig","IdentityCollator","Invulnerables","KickThreshold","LastAuthoredBlock","MaxCandidates","MaxInvulnerables","MinCandidates","Module","NewCandidacyBond","NewDesiredCandidates","NewInvulnerables","NoAssociatedValidatorId","NotCandidate","Pallet","Permission","PotId","RewardsCurrency","RuntimeEvent","StakingCurrency","TooFewCandidates","TooManyCandidates","TooManyInvulnerables","Unknown","UpdateOrigin","ValidatorId","ValidatorIdOf","ValidatorNotRegistered","ValidatorRegistration","WeightInfo","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","account_id","assemble_collators","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","candidacy_bond","candidacy_bond","candidates","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","count","crate_version","current_storage_version","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deposit","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","desired_candidates","desired_candidates","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","end_session","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invulnerables","invulnerables","kick_stale_candidates","last_authored_block","leave_intent","leave_intent","leave_intent","max_encoded_len","module_name","name","new_call_variant_leave_intent","new_call_variant_register_as_candidate","new_call_variant_set_candidacy_bond","new_call_variant_set_desired_candidates","new_call_variant_set_invulnerables","new_session","new_session","note_author","note_author","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","register_as_candidate","register_as_candidate","register_as_candidate","serialize","set_candidacy_bond","set_candidacy_bond","set_candidacy_bond","set_desired_candidates","set_desired_candidates","set_desired_candidates","set_invulnerables","set_invulnerables","set_invulnerables","size_hint","size_hint","size_hint","size_hint","start_session","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","who","with_weight","bond","max","new","account_id","account_id","bond_amount","deposit","desired_candidates","invulnerables","leave_intent","register_as_candidate","set_candidacy_bond","set_desired_candidates","set_invulnerables","CandidacyBond","Candidates","DesiredCandidates","Invulnerables","LastAuthoredBlock","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"collator_selection"],[1,"collator_selection::pallet"],[349,"collator_selection::pallet::Call"],[352,"collator_selection::pallet::Event"],[358,"collator_selection::pallet::dispatchables"],[363,"collator_selection::pallet::storage_types"]],"d":["The <code>pallet</code> module in each FRAME pallet hosts the most …","User is already a candidate","User is already an Invulnerable","Contains a variant per dispatchable extrinsic that this …","Fixed amount to deposit to become a collator.","","Basic information about a collation candidate.","","The (community, limited) collation candidates.","Configuration trait of this pallet.","Desired number of candidates.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Can be used to configure the genesis state of this pallet.","A convertor from collators id. Since this pallet does not …","The invulnerable, fixed collators.","","Last block authored by collator.","Maximum number of candidates that we should have. This is …","Maximum number of invulnerables. This is enforced in code.","Minimum number of candidates that we should have. This is …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","","Account has no associated validator ID","User is not a candidate","The <code>Pallet</code> struct, the main type that implements traits …","Permission issue","Account Identifier from which the internal Pot is …","The currency used for rewards.","Overarching event type.","The currency used for staking.","Too few candidates","Too many candidates","Too many invulnerables","Unknown error","Origin that can dictate updating parameters of this pallet.","A stable ID for a validator.","A conversion from account ID to validator ID.","Validator ID is not yet registered","Validate a user is registered","Weight functions needed for collator_selection.","The weight information of this pallet.","","","","","Get a unique, inaccessible account id from the <code>PotId</code>.","Assemble the current set of candidates and invulnerables …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>CandidacyBond</code>.","","An auto-generated getter for <code>Candidates</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reserved deposit.","","","","","","","","","","","","","","","","An auto-generated getter for <code>DesiredCandidates</code>.","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","An auto-generated getter for <code>Invulnerables</code>.","","Kicks out candidates that did not produce a block in the …","An auto-generated getter for <code>LastAuthoredBlock</code>.","","Deregister <code>origin</code> as a collator candidate. Note that the …","See <code>Pallet::leave_intent</code>.","","","","Create a call with the variant <code>leave_intent</code>.","Create a call with the variant <code>register_as_candidate</code>.","Create a call with the variant <code>set_candidacy_bond</code>.","Create a call with the variant <code>set_desired_candidates</code>.","Create a call with the variant <code>set_invulnerables</code>.","","","","","","","","","","","","","Register this account as a collator candidate. The account …","See <code>Pallet::register_as_candidate</code>.","","","Set the candidacy bond amount.","See <code>Pallet::set_candidacy_bond</code>.","","Set the ideal number of collators (not including the …","See <code>Pallet::set_desired_candidates</code>.","","Set the list of invulnerable (fixed) collators.","See <code>Pallet::set_invulnerables</code>.","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Account identifier.","","","","","","","","","","","Deregister <code>origin</code> as a collator candidate. Note that the …","Register this account as a collator candidate. The account …","Set the candidacy bond amount.","Set the ideal number of collators (not including the …","Set the list of invulnerable (fixed) collators.","Fixed amount to deposit to become a collator.","The (community, limited) collation candidates.","Desired number of candidates.","The invulnerable, fixed collators.","Last block authored by collator.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,21,21,0,0,13,0,13,0,0,0,0,0,0,0,0,4,0,4,4,4,0,13,13,13,21,21,0,21,4,4,4,4,21,21,21,21,4,4,4,21,4,0,4,12,13,14,11,12,12,5,13,21,14,11,13,21,14,11,13,21,14,11,50,12,5,13,21,14,11,50,12,5,13,21,14,11,5,12,5,12,12,13,14,11,12,13,14,11,50,12,12,12,13,21,14,11,13,21,14,11,13,21,14,11,13,21,14,11,5,11,50,12,5,13,21,14,11,50,12,5,13,21,14,11,5,12,5,14,0,50,12,5,13,21,14,11,13,21,14,11,12,12,13,14,11,12,12,13,13,14,14,11,11,12,13,21,14,11,50,12,5,13,21,14,11,50,50,12,12,5,5,13,13,21,21,14,14,11,11,50,50,12,12,5,5,13,13,21,21,14,14,11,11,14,14,14,14,14,13,21,14,11,12,12,50,12,5,13,21,14,11,12,50,12,5,13,21,14,11,50,12,5,13,21,14,11,50,12,5,13,21,14,11,12,5,12,12,51,12,14,11,12,12,14,14,14,14,14,51,12,51,12,12,12,12,12,12,12,12,51,12,14,5,51,12,14,51,12,14,51,12,14,13,21,14,11,12,12,0,13,21,14,11,12,13,14,11,50,12,5,13,21,14,11,50,12,5,13,21,14,11,13,21,14,11,13,21,14,11,13,21,14,11,50,12,5,13,21,14,11,13,21,14,11,50,12,5,13,21,14,11,50,12,5,13,21,14,11,50,12,5,13,21,14,11,12,11,21,52,53,54,55,56,57,55,58,59,0,0,0,0,0,0,0,0,0,0,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,60,61,61,62,62,63,63,64,64,60,60,61,61,62,62,63,63,64,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64,60,61,62,63,64],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[2,3],[[[5,[4]],6],[[8,[7]]]],[[]],[[]],[[]],[[]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]]],[[]],0,[[],[[2,[11]]]],[12,12],[[[13,[4]]],[[13,[4]]]],[[[14,[4]]],[[14,[4]]]],[[[11,[15,15]]],[[11,[15,15]]]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],18],[[]],[19,[[8,[[13,[4]],20]]]],[19,[[8,[21,20]]]],[19,[[8,[[14,[4]],20]]]],[19,[[8,[[11,[22,22]],20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[23,[[8,[20]]]],[23,[[8,[20]]]],[23,[[8,[20]]]],[23,[[8,[20]]]],[[23,19],[[8,[20]]]],[[23,19],[[8,[20]]]],[[23,19],[[8,[20]]]],[[23,19],[[8,[20]]]],[[],[[5,[4]]]],0,[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[24,[[8,[[5,[4]]]]]],[[],23],0,[[[14,[4]]],25],0,[17],[17],[17],[17],[17],[17],[17],[[[13,[4]],[0,[26,27]]]],[[21,[0,[26,27]]]],[[[14,[4]],[0,[26,27]]]],[[[11,[28,28]],[0,[26,27]]]],[29],[[12,12],30],[[[13,[4]],[13,[4]]],30],[[[14,[4]],[14,[4]]],30],[[[11,[31,31]],[11,[31,31]]],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[12,32],33],[[[13,[4]],32],33],[[[21,[4]],32],33],[[[14,[4]],32],33],[[[11,[34,34]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[4]]],9],[[]],[[[14,[4]]],35],[[]],[[[14,[4]]],36],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],17],[[],[[3,[37]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],0,[[[2,[11]]],2],[38,[[39,[4]]]],[23,40],[[[41,[4]]],25],0,[[],17],[[],35],[[],35],[[],[[14,[4]]]],[[],[[14,[4]]]],[[],[[14,[4]]]],[23,[[14,[4]]]],[3,[[14,[4]]]],[[23,23],40],[29,[[16,[3]]]],[[],40],[[]],[[[39,[4]]]],[[],42],[[[39,[4]]]],[[]],[[[39,[4]],40],40],[[[39,[4]]],40],[[],40],[23,40],[[[41,[4]]],25],0,[[[5,[4]],43],8],[[],40],[[[41,[4]]],25],0,[[],40],[[[41,[4]],23],25],0,[23,40],[[[41,[4]],3],25],0,[[[13,[4]]],17],[21,17],[[[14,[4]]],17],[[[11,[28,28]]],17],[29],[[],[[3,[44]]]],0,[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[47]]]],0,[40,[[49,[48]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[23],[3],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[21],"p":[[3,"Private"],[3,"BoundedVec"],[3,"Vec"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[3,"Global"],[3,"CandidateInfo"],[3,"Pallet"],[4,"Event"],[4,"Call"],[8,"Clone"],[4,"Option"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Error"],[8,"Decode"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[8,"Encode"],[6,"SessionIndex"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[8,"EncodeLike"],[6,"BlockNumberFor"],[3,"Weight"],[6,"OriginFor"],[3,"StorageVersion"],[8,"Serializer"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[3,"IdentityCollator"],[8,"WeightInfo"],[13,"set_candidacy_bond"],[13,"set_desired_candidates"],[13,"set_invulnerables"],[13,"CandidateAdded"],[13,"CandidateRemoved"],[13,"NewCandidacyBond"],[13,"NewDesiredCandidates"],[13,"NewInvulnerables"],[3,"Invulnerables"],[3,"Candidates"],[3,"LastAuthoredBlock"],[3,"DesiredCandidates"],[3,"CandidacyBond"]]},\
"currency":{"doc":"Currency Wrappers","t":"CIDGNNNIEDNLALLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFALLLLLLLLLLLLKLALLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFQEIQEQQQNGDQQNQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Amount","CurrencyConversion","CurrencyConvert","CurrencyId","Down","NearestPrefDown","NearestPrefUp","OnSweep","Rounding","SweepFunds","Up","__clone_box","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","convert","convert","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signed","get_free_balance","get_reserved_balance","getters","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","on_sweep","on_sweep","pallet","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","Amount","__clone_box","add","add","add_assign","amount","borrow","borrow_mut","burn_from","checked_accrue","checked_add","checked_div","checked_mul","checked_rounded_mul","checked_sub","clone","clone_into","convert_to","currency","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref_mut","div","drop","eq","eq","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","from_signed_fixed_point","from_unsigned_fixed_point","ge","gt","init","into","into_mut","into_ref","is_zero","le","lock_on","lt","map","max","min","mint_to","mul","mul","mul_ratio_floor","ne","new","partial_cmp","ratio","saturating_sub","set_currency","sub","sub","sub_assign","to_owned","to_signed_fixed_point","to_unsigned_fixed_point","transfer","try_from","try_into","type_id","unchecked_into","unique_saturated_into","unlock_on","vzip","with_amount","zero","get_native_currency_id","get_relay_chain_currency_id","get_wrapped_currency_id","Balance","Call","Config","CurrencyConversion","Error","GetNativeCurrencyId","GetRelayChainCurrencyId","GetWrappedCurrencyId","InvalidCurrency","Module","Pallet","SignedFixedPoint","SignedInner","TryIntoIntError","UnsignedFixedPoint","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","with_weight"],"q":[[0,"currency"],[86,"currency::amount"],[164,"currency::getters"],[167,"currency::pallet"]],"d":["","","","","","","","","The rounding method to use for unsigned quantities.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the value for <code>Rounding</code> which would give the same …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default mul, which is rounded down","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","sets the currency, leaving the amount untouched","","","","","","","","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","The <code>Error</code> enum of this pallet.","Native currency e.g. INTR/KINT","Relay chain currency e.g. DOT/KSM","Wrapped currency e.g. IBTC/KBTC","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,2,2,2,0,0,0,2,2,0,50,51,2,50,51,2,2,2,52,50,50,51,2,50,51,2,50,51,2,2,50,51,2,50,50,51,51,2,2,50,50,51,51,2,2,2,0,0,0,50,51,2,50,51,2,50,51,2,50,51,2,53,51,0,2,50,51,2,50,51,2,50,51,2,50,51,2,50,51,2,50,51,2,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,5,0,0,5,0,5,5,5,33,0,0,5,5,33,5,29,30,33,30,33,30,33,30,33,29,30,33,29,30,29,30,29,30,29,29,29,33,30,33,30,33,30,33,30,33,29,30,33,29,30,30,0,33,29,30,33,29,30,29,29,30,30,33,29,30,33,29,30,33,33,29,29,30,30,33,33,29,29,30,30,30,30,30,30,30,33,30,29,29,33,29,30,29,33,29,30,33,29,30,33,29,30,29,29,29,29,29,29,29,29,29,33,29,0,33,30,29,30,33,29,30,33,29,30,33,30,33,30,33,30,33,29,30,33,30,33,29,30,33,29,30,33,29,30,29,33],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[[],[[4,[3]]]],[[[6,[5]],[7,[5]]],[[4,[[6,[5]],3]]]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[[2,9],[[4,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,12],2],[[],[[6,[5]]]],[[],[[6,[5]]]],0,[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[[6,[5]]],13],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[[6,[5]],[6,[5]]],[[6,[5]]]],[[[6,[5]],15],[[6,[5]]]],[[[6,[5]],[6,[5]]]],[[[6,[5]]]],[[]],[[]],[[[6,[5]]],13],[[[6,[5]],[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]],[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]],2],[[4,[[6,[5]],3]]]],[[[6,[5]],[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[[0,[5,16]]]]],[[6,[[0,[5,16]]]]]],[[]],[[[6,[5]],[7,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]]],[[7,[5]]]],[[]],[[]],[[]],[[]],[8],[8],[[[6,[5]]],[[6,[5]]]],[8],[[[6,[5]],[6,[5]]],[[4,[12,3]]]],[[[6,[[0,[5,17]]]],[6,[[0,[5,17]]]]],12],[[],12],[[],12],[[[6,[[0,[5,18]]]],9],19],[[]],[[]],[[]],[[]],[[]],[[[7,[5]]],[[4,[[6,[5]],3]]]],[[[7,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]],[6,[5]]],[[4,[12,3]]]],[[[6,[5]],[6,[5]]],[[4,[12,3]]]],[[],8],[[]],[[]],[[]],[[[6,[5]]],12],[[[6,[5]],[6,[5]]],[[4,[12,3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]],[6,[5]]],[[4,[12,3]]]],[[[6,[5]],20],[[6,[5]]]],[[[6,[5]],[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]],[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]]],13],[[[6,[5]],21],[[6,[5]]]],[[[6,[5]],15],[[6,[5]]]],[[[6,[5]],22],[[6,[5]]]],[[[6,[5]],[6,[5]]],[[4,[12,3]]]],[[[7,[5]]],[[6,[5]]]],[[[6,[5]],[6,[5]]],[[24,[23]]]],[[[6,[5]],[6,[5]]],[[4,[3]]]],[[[6,[5]],[6,[5]]],[[4,[[6,[5]],3]]]],[[[6,[5]],[7,[5]]],[[6,[5]]]],[[[6,[5]],[6,[5]]],[[6,[5]]]],[[[6,[5]],15],[[6,[5]]]],[[[6,[5]],[6,[5]]]],[[]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[],4],[[],4],[[],14],[[]],[[]],[[[6,[5]]],[[4,[3]]]],[[]],[[[6,[5]],25],[[6,[5]]]],[[[7,[5]]],[[6,[5]]]],[[],[[7,[5]]]],[[],[[7,[5]]]],[[],[[7,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[],[[28,[26,27]]]],[[],[[28,[26,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[[[30,[5]]],[[30,[5]]]],[[]],[[]],[[],8],[[],31],[[]],[32,[[4,[33,34]]]],[32,[[4,[[30,[5]],34]]]],[[],[[4,[34]]]],[[],[[4,[34]]]],[35,[[4,[34]]]],[35,[[4,[34]]]],[[35,32],[[4,[34]]]],[[35,32],[[4,[34]]]],[8],[8],[8],[8],[8],[8],[[[30,[5]]],36],0,[8],[8],[8],[[33,[0,[37,38]]]],[[29,29],12],[[[30,[5]],[30,[5]]],12],[[],12],[[],12],[[],12],[[],12],[[[33,[5]],9],19],[[29,9],19],[[[30,[5]],9],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[5]]],26],[[]],[[[30,[5]]],39],[[]],[[[30,[5]]],40],[[],[[28,[26,27]]]],[[],[[28,[26,27]]]],[[],8],[[],[[28,[41]]]],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[[42,[5]]]],[[],43],[[[42,[5]]]],[[]],[[[42,[5]],44],44],[[[42,[5]]],44],[[],44],[33,8],[[],[[28,[45]]]],0,[[],[[28,[26,27]]]],[[],[[28,[26,27]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[],[[28,[26,27]]]],[[],[[28,[26,27]]]],[[],14],[[],14],[[],14],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[28,[47]]]],[44,[[49,[48]]]]],"c":[176],"p":[[3,"Private"],[4,"Rounding"],[4,"DispatchError"],[4,"Result"],[8,"Config"],[3,"Amount"],[6,"CurrencyId"],[15,"usize"],[3,"Formatter"],[3,"Error"],[4,"SignedRounding"],[15,"bool"],[6,"DispatchResult"],[3,"TypeId"],[15,"u128"],[8,"Clone"],[8,"PartialEq"],[8,"Debug"],[6,"Result"],[8,"Fn"],[3,"FixedU128"],[6,"Ratio"],[4,"Ordering"],[4,"Option"],[8,"FnOnce"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[8,"Input"],[4,"Error"],[3,"Error"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[3,"CurrencyConvert"],[3,"SweepFunds"],[8,"CurrencyConversion"],[8,"OnSweep"]]},\
"democracy":{"doc":"Democracy Pallet","t":"IGGINNGGEDNNNDDEDILLLLLLKLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMKKKAMKKKLLLLLLLKMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLMMADLLLLLLLLLLLLLLLLLLLLLENNIQGQEENQNQDNNQGQQQNQGGNNNNNDQNNQNNGGGNGNQQNNNNQQNQNGQQNLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLNLNLLLLLNLALNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Approved","BoundedCallOf","CallOf","EncodeInto","Finished","Ongoing","PropIndex","ReferendumIndex","ReferendumInfo","ReferendumStatus","SimpleMajority","SuperMajorityAgainst","SuperMajorityApprove","Tally","Vote","VoteThreshold","Voting","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","approved","approved","aye","ayes","balance","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_proposal","cancel_referendum","clear","clear","clear_public_proposals","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","delay","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","encode","encode_into","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","end","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fast_track","fast_track_referendum","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","migrations","nays","on_initialize_base","on_initialize_base_with_launch_period","on_initialize_public","pallet","proposal","propose","remove_vote","second","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","spend_from_treasury","tally","threshold","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","turnout","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vote_existing","vote_new","vzip","vzip","vzip","vzip","vzip","vzip","approved","end","v1","Migration","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","on_runtime_upgrade","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Call","Cancelled","CancelledProposal","Config","Currency","DepositOf","EnactmentPeriod","Error","Event","FastTrack","FastTrackOrigin","FastTrackReferendum","FastTrackVotingPeriod","GenesisConfig","Imminent","InsufficientFunds","LaunchPeriod","LowestUnbaked","MaxDeposits","MaxProposals","MaxVotes","MaxVotesReached","MinimumDeposit","Module","NextLaunchTimestamp","NoneWaiting","NotImminent","NotPassed","NotProposer","NotVoter","Pallet","PalletsOrigin","Passed","PreimageMissing","Preimages","ProposalMissing","Proposed","PublicPropCount","PublicProps","ReferendumCount","ReferendumFastTrackFailed","ReferendumInfoOf","ReferendumInvalid","RuntimeEvent","Scheduler","Started","Tabled","TooEarly","TooMany","TreasuryAccount","TreasuryCurrency","TryIntoIntError","UnixTime","ValueLow","VotingOf","VotingPeriod","WeightInfo","WrongUpperBound","__clone_box","__clone_box","__clone_box","assimilate_storage","backing_for","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_proposal","cancel_proposal","cancel_referendum","cancel_referendum","clear_public_proposals","clear_public_proposals","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deposit_of","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fast_track","fast_track","fast_track_referendum","fast_track_referendum","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","internal_cancel_referendum","internal_start_referendum","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","lowest_unbaked","maturing_referenda_at","module_name","name","new_call_variant_cancel_proposal","new_call_variant_cancel_referendum","new_call_variant_clear_public_proposals","new_call_variant_fast_track","new_call_variant_fast_track_referendum","new_call_variant_propose","new_call_variant_remove_vote","new_call_variant_second","new_call_variant_spend_from_treasury","new_call_variant_table_proposal","new_call_variant_vote","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","propose","propose","public_prop_count","public_props","referendum_count","referendum_info","remove_vote","remove_vote","second","second","serialize","size_hint","size_hint","size_hint","spend_from_treasury","spend_from_treasury","storage_info","storage_types","table_proposal","table_proposal","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vote","vote","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","beneficiary","delay","delay","index","prop_index","prop_index","prop_index","proposal","proposal","ref_index","ref_index","ref_index","value","value","vote","deposit","deposit","prop_index","proposal_index","proposal_index","ref_index","ref_index","ref_index","ref_index","ref_index","ref_index","threshold","cancel_proposal","cancel_referendum","clear_public_proposals","fast_track","fast_track_referendum","propose","remove_vote","second","spend_from_treasury","table_proposal","vote","DepositOf","LowestUnbaked","NextLaunchTimestamp","PublicPropCount","PublicProps","ReferendumCount","ReferendumInfoOf","VotingOf","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"democracy"],[321,"democracy::ReferendumInfo"],[323,"democracy::migrations"],[324,"democracy::migrations::v1"],[346,"democracy::pallet"],[650,"democracy::pallet::Call"],[665,"democracy::pallet::Event"],[677,"democracy::pallet::dispatchables"],[688,"democracy::pallet::storage_types"]],"d":["","","","","Referendum finished at <code>end</code>, and has been <code>approved</code> or …","Referendum is happening, the arg is the block number at …","A proposal index.","A referendum index.","Info regarding a referendum, present or past.","Info regarding an ongoing referendum.","A simple majority of approvals is needed to pass this vote.","A supermajority of rejects is needed to fail this vote.","A supermajority of approvals is needed to pass this vote.","Info regarding an ongoing referendum.","A standard vote, one-way (approve or reject).","A means of determining if a vote is past pass threshold.","The account is voting directly.","Weight functions needed for democracy.","","","","","","","Given a <code>tally</code> of votes and a total size of <code>electorate</code>, …","","","The number of aye votes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delay (in blocks) to wait after a successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","When voting on this referendum will end.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The number of nay votes.","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","The proposal being voted on.","","","","","","","","","","","","The current tally of votes in this referendum.","The thresholding mechanism to determine whether it passed.","","","","","","","","","","","","","","","","","","","","","","","","","The amount of funds currently expressing its opinion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Migration for translating bare <code>Hash</code>es into <code>Bounded&lt;Call&gt;</code>s.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","A referendum has been cancelled.","A proposal has been cancelled.","Configuration trait of this pallet.","Currency type for this pallet.","Those who have locked a deposit.","The period between a proposal being approved and enacted.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","A proposal has been fast tracked.","Origin from which the next majority-carries (or more …","A referendum has been fast tracked.","Minimum voting period allowed for a fast-track referendum.","Can be used to configure the genesis state of this pallet.","Imminent","Too high a balance was provided that the account cannot …","Period from previous launch timestamp.","The lowest referendum index representing an unbaked …","The maximum number of deposits a public proposal may have …","The maximum number of public proposals that can exist at …","The maximum number of votes for an account.","Maximum number of votes reached.","The minimum amount to be used as a deposit for a public …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Storage type is <code>StorageValue</code> with value type <code>u64</code>.","No proposals waiting","Not imminent","A proposal has been rejected by referendum.","The given account did not make this proposal.","The given account did not vote on the referendum.","The <code>Pallet</code> struct, the main type that implements traits …","Overarching type of all pallets origins.","A proposal has been approved by referendum.","Preimage does not exist","The Preimage provider.","Proposal does not exist","A motion has been proposed by a public account.","The number of (public) proposals that have been made so …","The public proposals. Unsorted. The second item is the …","The next free referendum index, aka the number of …","Fast tracking failed, because the referendum is ending …","Information concerning any given referendum.","Vote given for invalid referendum","The overarching event type.","The Scheduler.","A referendum has begun.","A public proposal has been tabled for referendum vote.","Too early","Maximum number of items reached.","Account from which is transferred in <code>spend_from_treasury</code>.","Currency used in <code>spend_from_treasury</code>.","Unable to convert value.","Unix time","Value too low","All votes for a particular voter. We store the balance for …","How often (in blocks) to check for new votes.","Weight information for extrinsics in this pallet.","Invalid upper bound.","","","","","Get the amount locked in support of <code>proposal</code>; <code>None</code> if …","","","","","","","","","","","","","","","","","","","","","Remove a proposal.","See <code>Pallet::cancel_proposal</code>.","Remove a referendum.","See <code>Pallet::cancel_referendum</code>.","Clears all public proposals.","See <code>Pallet::clear_public_proposals</code>.","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>DepositOf</code>.","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","Schedule a proposal to be tabled immediately with the …","See <code>Pallet::fast_track</code>.","Reduces the voting period of an existing referendum.","See <code>Pallet::fast_track_referendum</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","Remove a referendum.","Start a referendum.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An auto-generated getter for <code>LowestUnbaked</code>.","Get all referenda ready for tally at block <code>n</code>.","","","Create a call with the variant <code>cancel_proposal</code>.","Create a call with the variant <code>cancel_referendum</code>.","Create a call with the variant <code>clear_public_proposals</code>.","Create a call with the variant <code>fast_track</code>.","Create a call with the variant <code>fast_track_referendum</code>.","Create a call with the variant <code>propose</code>.","Create a call with the variant <code>remove_vote</code>.","Create a call with the variant <code>second</code>.","Create a call with the variant <code>spend_from_treasury</code>.","Create a call with the variant <code>table_proposal</code>.","Create a call with the variant <code>vote</code>.","","","","","","","Weight: see <code>begin_block</code>","","Propose a sensitive action to be taken.","See <code>Pallet::propose</code>.","An auto-generated getter for <code>PublicPropCount</code>.","An auto-generated getter for <code>PublicProps</code>.","An auto-generated getter for <code>ReferendumCount</code>.","An auto-generated getter for <code>ReferendumInfoOf</code>.","Remove a vote for an ongoing referendum.","See <code>Pallet::remove_vote</code>.","Signals agreement with a particular proposal.","See <code>Pallet::second</code>.","","","","","","See <code>Pallet::spend_from_treasury</code>.","","Auto-generated docs-only module listing all (public and …","Same as <code>fast_track</code> but with the default <code>VotingPeriod</code>.","See <code>Pallet::table_proposal</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vote in a referendum. If <code>vote.is_aye()</code>, the vote is to …","See <code>Pallet::vote</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove a proposal.","Remove a referendum.","Clears all public proposals.","Schedule a proposal to be tabled immediately with the …","Reduces the voting period of an existing referendum.","Propose a sensitive action to be taken.","Remove a vote for an ongoing referendum.","Signals agreement with a particular proposal.","Warning: Doc-Only","Same as <code>fast_track</code> but with the default <code>VotingPeriod</code>.","Vote in a referendum. If <code>vote.is_aye()</code>, the vote is to …","Those who have locked a deposit.","The lowest referendum index representing an unbaked …","Warning: Doc-Only","The number of (public) proposals that have been made so …","The public proposals. Unsorted. The second item is the …","The next free referendum index, aka the number of …","Information concerning any given referendum.","All votes for a particular voter. We store the balance for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,23,23,0,0,0,0,4,4,4,0,0,0,0,0,18,21,2,22,23,4,71,4,18,2,18,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,72,72,21,2,72,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,21,2,22,18,21,2,22,23,4,18,21,2,22,23,4,4,18,21,2,22,23,4,21,73,18,21,2,22,23,4,22,18,21,2,22,23,4,18,18,21,21,2,2,22,22,23,23,4,4,72,72,18,21,2,22,23,4,18,21,2,22,23,4,18,18,21,21,2,2,22,22,23,23,4,4,18,18,21,21,2,2,22,22,23,23,4,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,21,2,18,21,2,22,23,4,0,2,72,72,72,0,22,72,72,72,4,18,21,2,22,23,4,72,22,22,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,2,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,18,21,2,22,23,4,21,72,72,18,21,2,22,23,4,74,74,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,53,53,0,43,0,43,0,0,53,43,53,43,0,56,56,43,0,43,43,43,56,43,0,0,56,56,53,56,56,0,43,53,56,43,56,53,0,0,0,56,0,56,43,43,53,53,56,56,43,43,56,43,56,0,43,43,56,52,53,54,44,52,53,56,54,53,56,54,53,56,54,52,44,53,56,54,52,44,53,56,54,44,52,54,52,54,52,54,52,53,54,52,53,54,52,52,52,53,56,54,53,56,54,53,56,54,53,56,54,44,52,52,44,53,56,54,52,44,53,56,54,44,54,0,52,44,53,56,54,53,56,54,52,53,54,52,52,53,53,54,54,52,54,52,54,52,53,56,54,52,44,53,56,56,54,52,52,44,44,53,53,56,56,54,54,52,52,44,44,53,53,56,56,54,54,54,54,54,54,54,53,56,54,52,52,52,44,53,56,54,52,52,52,52,44,53,56,54,52,44,53,56,54,52,44,53,56,54,52,52,52,52,54,54,54,54,54,54,54,54,54,54,54,52,52,52,52,52,52,52,52,52,54,52,52,52,52,52,54,52,54,44,53,56,54,52,54,52,0,52,54,53,56,54,52,53,54,52,44,53,56,54,52,44,53,56,54,53,56,54,53,56,54,53,56,54,52,44,53,56,54,53,56,54,52,44,53,56,54,52,44,53,56,54,52,54,52,44,53,56,54,52,56,76,77,78,79,77,78,80,81,82,83,84,85,81,76,83,86,87,88,86,87,89,90,91,92,93,94,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102,95,96,97,98,99,100,101,102],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[2,3],[[4,[2,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],12]]]],[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[9,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[10,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],[11,[[0,[5,6,7,[8,[[0,[5,6,7,8,9,10,11,12]]]],[9,[[0,[5,6,7,8,9,10,11,12]]]],[10,[[0,[5,6,7,8,9,10,11,12]]]],[11,[[0,[5,6,7,8,9,10,11,12]]]],12]]]],12]]]],12]]]],12]]],3],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[],16],[[[18,[17]]],[[18,[17]]]],[[[21,[17,[0,[17,[20,[19]]]]]]],[[21,[17,[0,[17,[20,[19]]]]]]]],[[[2,[17]]],[[2,[17]]]],[[[22,[17,17,17]]],[[22,[17,17,17]]]],[[[23,[17,17,17]]],[[23,[17,17,17]]]],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[27,[[18,[25]],26]]]],[24,[[27,[[21,[[20,[19]]]],26]]]],[24,[[27,[[2,[25]],26]]]],[24,[[27,[[22,[25,25]],26]]]],[24,[[27,[[23,[25]],26]]]],[24,[[27,[4,26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[],[[21,[28,[20,[19]]]]]],[[],[[2,[28]]]],0,[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[30,[[27,[4]]]],[29],[29],[29],[29],[29],[29],[[[21,[[20,[19]]]]],[[15,[13]]]],[[],[[0,[31,28]]]],[[[18,[32]],[0,[33,34]]]],[[[21,[[20,[19]]]],[0,[33,34]]]],[[[2,[32]],[0,[33,34]]]],[[[22,[32,32]],[0,[33,34]]]],[[[23,[32]],[0,[33,34]]]],[[4,[0,[33,34]]]],0,[[[18,[35]],[18,[35]]],3],[[[21,[35,[0,[35,[20,[19]]]]]],[21,[35,[0,[35,[20,[19]]]]]]],3],[[[2,[35]],[2,[35]]],3],[[[22,[35,35,35]],[22,[35,35,35]]],3],[[[23,[35,35,35]],[23,[35,35,35]]],3],[[4,4],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],16],[[],16],[[[18,[36]],37],38],[[[21,[36,[0,[36,[20,[19]]]]]],37],38],[[[2,[36]],37],38],[[[22,[36,36,36]],37],38],[[[23,[36,36,36]],37],38],[[4,37],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,[19,16],[19,16],[19,16],0,0,[[],16],[19,16],[[],16],[[4,39],27],[[[18,[32]]],29],[[[21,[[20,[19]]]]],29],[[[2,[32]]],29],[[[22,[32,32]]],29],[[[23,[32]]],29],[4,29],[[],16],0,0,[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[[20,[19]]]],42]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[29],[29],[29],[[]],[[]],[[]],[[]],[[]],[[],29],[[]],[[]],[[]],[[],16],[[],27],[[],27],[[],40],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[44,[43]],45],[[27,[46]]]],[47,48],[[]],[[]],[[]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[43]]]],[[[49,[43]],47],50],0,[[[49,[43]],51],50],0,[[[49,[43]]],50],0,[52,52],[[[53,[43]]],[[53,[43]]]],[[[54,[43]]],[[54,[43]]]],[[]],[[]],[[]],[[],29],[[],55],[[]],[24,[[27,[[53,[43]],26]]]],[24,[[27,[56,26]]]],[24,[[27,[[54,[43]],26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[19,[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[19,24],[[27,[26]]]],[[],[[44,[43]]]],[[[57,[47]]],48],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[30,[[27,[[44,[43]]]]]],[[[54,[43]]],58],0,[29],[29],[29],[29],[29],[[[53,[43]],[0,[33,34]]]],[[56,[0,[33,34]]]],[[[54,[43]],[0,[33,34]]]],[[52,52],3],[[[53,[43]],[53,[43]]],3],[[[54,[43]],[54,[43]]],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[[49,[43]],47,[59,[43]]],50],0,[[[49,[43]],47],50],0,[[52,37],38],[[[53,[43]],37],38],[[[56,[43]],37],38],[[[54,[43]],37],38],[[]],[[]],[[]],[[]],[60,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[43]]],13],[[]],[[[54,[43]]],61],[[]],[[[54,[43]]],62],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],29],[[],[[15,[63]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[51],[[[64,[43]],4,[59,[43]]],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[[59,[43]]],15],[[],61],[[],61],[47,[[54,[43]]]],[51,[[54,[43]]]],[[],[[54,[43]]]],[[47,[59,[43]]],[[54,[43]]]],[47,[[54,[43]]]],[[[64,[43]]],[[54,[43]]]],[51,[[54,[43]]]],[47,[[54,[43]]]],[[],[[54,[43]]]],[[47,[59,[43]]],[[54,[43]]]],[[51,18],[[54,[43]]]],[[[59,[43]]]],[[],65],[[[59,[43]]]],[[]],[[[59,[43]],16],16],[[[59,[43]]],16],[[[59,[43]]],16],[[],16],[[[49,[43]],[64,[43]]],50],0,[[],47],[[],66],[[],51],[[[57,[51]]],[[48,[[23,[[59,[43]],[64,[43]]]]]]]],[[[49,[43]],51],50],0,[[[49,[43]],47],50],0,[[[44,[43]],39],27],[[[53,[43]]],29],[56,29],[[[54,[43]]],29],[[[49,[43]]],50],0,[[],[[15,[67]]]],0,[[[49,[43]],47,[59,[43]]],50],0,[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],[[15,[13,14]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[49,[43]],51,18],50],0,[[]],[[]],[[]],[[]],[[]],[[],[[15,[68]]]],[16,[[70,[69]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[47],[51],[[]],[[47,[59,[43]]]],[47],[[[64,[43]]]],[51],[47],[[]],[[47,[59,[43]]]],[[51,18]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[369],"p":[[3,"Private"],[3,"Tally"],[15,"bool"],[4,"VoteThreshold"],[8,"IntegerSquareRoot"],[8,"Zero"],[8,"Ord"],[8,"Add"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Copy"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Weight"],[8,"Clone"],[3,"Vote"],[15,"u32"],[8,"Get"],[3,"Voting"],[3,"ReferendumStatus"],[4,"ReferendumInfo"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[8,"Default"],[15,"usize"],[8,"Deserializer"],[8,"AsMut"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[6,"PropIndex"],[4,"Option"],[6,"OriginFor"],[6,"DispatchResult"],[6,"ReferendumIndex"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[8,"EncodeLike"],[6,"DispatchResultWithPostInfo"],[6,"BlockNumberFor"],[3,"TryFromIntError"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BoundedCallOf"],[3,"StorageVersion"],[3,"BoundedVec"],[3,"StorageInfo"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"Approved"],[8,"WeightInfo"],[8,"EncodeInto"],[13,"Finished"],[3,"Migration"],[13,"spend_from_treasury"],[13,"fast_track"],[13,"table_proposal"],[13,"remove_vote"],[13,"cancel_proposal"],[13,"propose"],[13,"second"],[13,"vote"],[13,"fast_track_referendum"],[13,"cancel_referendum"],[13,"Proposed"],[13,"Tabled"],[13,"CancelledProposal"],[13,"Started"],[13,"FastTrack"],[13,"FastTrackReferendum"],[13,"Passed"],[13,"NotPassed"],[13,"Cancelled"],[3,"PublicPropCount"],[3,"PublicProps"],[3,"DepositOf"],[3,"ReferendumCount"],[3,"LowestUnbaked"],[3,"ReferendumInfoOf"],[3,"VotingOf"],[3,"NextLaunchTimestamp"]]},\
"dex_general":{"doc":"Standard AMM Pallet","t":"GCNDRCNIRIDDECNIILLLLMMKMMLLLLLLLLLLLLKKKKKKKKLLLLLLLLMLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLKKKMLLLLLLLLKKKKLLLLLLLLLLLLLMLLLMMALKMMLKKLLLLMKKMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLQNNNNNNGGGNGNENNINNNNNQEENNDNNNNNNNNNGNGNQQQGQNNNNNNNNNGDQQNNNNQNNLLLLNLLLLLLLLLLLNLNLNLNLNLLLNLNLNLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLNLNLNLLLLLALLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFFFFFFDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AssetBalance","Bootstrap","Bootstrap","BootstrapParameter","DEFAULT_FEE_RATE","Disable","Disable","ExportDexGeneral","FEE_ADJUSTMENT","GenerateLpAssetId","PairInfo","PairMetadata","PairStatus","Trading","Trading","ValidateAsset","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","account","accumulated_supply","add_liquidity","asset_0","asset_1","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","bootstrap_charge_reward","bootstrap_claim","bootstrap_contribute","bootstrap_create","bootstrap_end","bootstrap_refund","bootstrap_update","bootstrap_withdraw_reward","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity_supply","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","create_pair","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","end_block_number","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee_rate","fee_rate","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_lp_asset_id","get_amount_in_by_path","get_amount_out_by_path","holding_liquidity","identity","identity","identity","identity","init","init","init","init","inner_add_liquidity","inner_remove_liquidity","inner_swap_assets_for_exact_assets","inner_swap_exact_assets_for_assets","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_clear","lp_asset_id","max_encoded_len","max_encoded_len","max_encoded_len","pair_account","pair_account","pallet","partial_cmp","remove_liquidity","reserve_0","reserve_1","serialize","set_fee_point","set_fee_receiver","size_hint","size_hint","size_hint","size_hint","status","swap_assets_for_exact_assets","swap_exact_assets_for_assets","target_supply","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","total_liquidity","total_supply","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_asset","vzip","vzip","vzip","vzip","AssetId","AssetNotExists","AssetSwap","BootstrapClaim","BootstrapContribute","BootstrapCreated","BootstrapEnd","BootstrapEndStatus","BootstrapLimits","BootstrapPersonalSupply","BootstrapRefund","BootstrapRewards","BootstrapUpdate","Call","ChargeReward","ChargeRewardParamsError","Config","Deadline","DeniedCreatePair","DenyRefund","DisableBootstrap","DistributeReward","EnsurePairAsset","Error","Event","ExcessiveSoldAmount","ExistRewardsInBootstrap","GenesisConfig","IncorrectAssetAmountRange","InsufficientAssetBalance","InsufficientLiquidity","InsufficientPairReserve","InsufficientTargetAmount","InvalidContributionAmount","InvalidFeeRate","InvalidPath","InvariantCheckFailed","KLast","LiquidityAdded","LiquidityPairs","LiquidityRemoved","LpGenerate","MaxBootstrapLimits","MaxBootstrapRewards","Module","MultiCurrency","NewFeePoint","NewFeeRate","NoRewardTokens","NotInBootstrap","NotQualifiedAccount","Overflow","PairAlreadyExists","PairCreated","PairNotExists","PairStatuses","Pallet","PalletId","RuntimeEvent","TooManyLimits","TooManyRewards","UnqualifiedBootstrap","UnsupportedAssetType","WeightInfo","WithdrawReward","ZeroContribute","__clone_box","__clone_box","__clone_box","add_liquidity","add_liquidity","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","bootstrap_charge_reward","bootstrap_charge_reward","bootstrap_claim","bootstrap_claim","bootstrap_contribute","bootstrap_contribute","bootstrap_create","bootstrap_create","bootstrap_end","bootstrap_end","bootstrap_end_status","bootstrap_personal_supply","bootstrap_refund","bootstrap_refund","bootstrap_update","bootstrap_update","bootstrap_withdraw_reward","bootstrap_withdraw_reward","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","calculate_remove_liquidity","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create_pair","create_pair","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","desired_in_amount","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee_meta","fee_point","fee_receiver","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_amount_in_by_path","get_amount_in_by_path","get_amount_out_by_path","get_amount_out_by_path","get_bootstrap_limits","get_bootstrap_rewards","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_estimate_lptoken","get_pair_by_asset_id","identity","identity","identity","index","infos","init","init","init","init","init","inner_add_liquidity","inner_remove_liquidity","inner_swap_assets_for_exact_assets","inner_swap_assets_for_exact_assets","inner_swap_exact_assets_for_assets","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","k_last","lp_asset_id","lp_pairs","module_name","name","new_call_variant_add_liquidity","new_call_variant_bootstrap_charge_reward","new_call_variant_bootstrap_claim","new_call_variant_bootstrap_contribute","new_call_variant_bootstrap_create","new_call_variant_bootstrap_end","new_call_variant_bootstrap_refund","new_call_variant_bootstrap_update","new_call_variant_bootstrap_withdraw_reward","new_call_variant_create_pair","new_call_variant_remove_liquidity","new_call_variant_set_exchange_fee","new_call_variant_set_fee_point","new_call_variant_set_fee_receiver","new_call_variant_swap_assets_for_exact_assets","new_call_variant_swap_exact_assets_for_assets","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","pair_account_id","pair_status","remove_liquidity","remove_liquidity","serialize","set_exchange_fee","set_exchange_fee","set_fee_point","set_fee_point","set_fee_receiver","set_fee_receiver","size_hint","size_hint","size_hint","sort_asset_id","storage_info","storage_types","supply_out_amount","swap_assets_for_exact_assets","swap_assets_for_exact_assets","swap_exact_assets_for_assets","swap_exact_assets_for_assets","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","amount_0_contribute","amount_0_desired","amount_0_min","amount_0_min","amount_1_contribute","amount_1_desired","amount_1_min","amount_1_min","amount_in","amount_in_max","amount_out","amount_out_min","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","capacity_supply_0","capacity_supply_0","capacity_supply_1","capacity_supply_1","charge_rewards","deadline","deadline","deadline","deadline","deadline","deadline","end","end","fee_point","fee_rate","fee_rate","limits","limits","liquidity","path","path","recipient","recipient","recipient","recipient","recipient","rewards","rewards","send_to","target_supply_0","target_supply_0","target_supply_1","target_supply_1","add_balance_0","add_balance_1","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0","asset_0_amount","asset_0_contribute","asset_0_refund","asset_0_refund","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1","asset_1_amount","asset_1_contribute","asset_1_refund","asset_1_refund","balances","bootstrap_pair_account","bootstrap_pair_account","bootstrap_pair_account","bootstrap_pair_account","burn_balance_lp","caller","capacity_supply_0","capacity_supply_0","capacity_supply_1","capacity_supply_1","charge_rewards","claimer","end","end","fee_rate","lp_amount","mint_balance_lp","new_fee_point","new_fee_rate","owner","owner","owner","receiver","recipient","recipient","recipient","reward_holder","rewards","rm_balance_0","rm_balance_1","swap_path","total_lp_supply","total_supply_0","total_supply_0","total_supply_1","total_supply_1","who","who","add_liquidity","bootstrap_charge_reward","bootstrap_claim","bootstrap_contribute","bootstrap_create","bootstrap_end","bootstrap_refund","bootstrap_update","bootstrap_withdraw_reward","create_pair","remove_liquidity","set_exchange_fee","set_fee_point","set_fee_receiver","swap_assets_for_exact_assets","swap_exact_assets_for_assets","BootstrapEndStatus","BootstrapLimits","BootstrapPersonalSupply","BootstrapRewards","FeeMeta","KLast","LiquidityPairs","PairStatuses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"dex_general"],[244,"dex_general::pallet"],[586,"dex_general::pallet::Call"],[655,"dex_general::pallet::Event"],[730,"dex_general::pallet::dispatchables"],[746,"dex_general::pallet::storage_types"]],"d":["","","pair is Bootstrap, can add liquidity.","Parameters of pair in Bootstrap status","","","nothing in pair","","","","","","Status for TradingPair","","Pair is Trading, can add/remove liquidity and swap.","","Weight functions needed for dex_general.","","","","","","accumulated supply in this bootstrap pair.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","max supply in this bootstrap pair","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bootstrap pair end block number.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","bootstrap pair account.","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","target supply that trading pair could to normal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The asset type.","Asset does not exist.","Transact in trading.","Claim a bootstrap pair.","Contribute to bootstrap pair.","Create a bootstrap pair.","A bootstrap pair end.","End status of bootstrap","Storage type is <code>StorageMap</code> with key type …","Storage type is <code>StorageMap</code> with key type …","Refund from disable bootstrap pair.","Storage type is <code>StorageMap</code> with key type …","Update a bootstrap pair.","Contains a variant per dispatchable extrinsic that this …","Charge reward into a bootstrap.","Charge bootstrap extrinsic args has error,","Configuration trait of this pallet.","Transaction block number is larger than the end block …","Trading pair can’t be created.","Bootstrap deny refund","Bootstrap is disable","Bootstrap distribute some rewards to contributors.","Verify the asset can be used in a pair.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Sold amount is more than exception.","Exist some reward in bootstrap,","Refer: …","Incorrect amount range.","Account balance must be greater than or equal to the …","Liquidity is not enough.","Trading pair does have enough.","Get target amount is less than exception.","Amount of contribution is invalid.","Invalid fee_rate","Can’t find pair though trading path.","Can’t pass the K value check","Refer: …","Add liquidity.","Storage type is <code>StorageMap</code> with key type …","Remove liquidity.","Generate the AssetId for the pair.","The maximum number of limits that can be stored","The maximum number of rewards that can be stored","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The trait control all currencies","A pair’s admin fee was updated","A pair’s swap fee was updated","Reward of bootstrap is not set.","Pair is not in bootstrap","Not eligible to contribute","Overflow.","Trading pair already exists.","Swap Create a trading pair.","Trading pair does not exist.","(T::AssetId, T::AssetId) -&gt; PairStatus","The <code>Pallet</code> struct, the main type that implements traits …","This pallet id.","Because this pallet emits events, it depends on the runtime…","The number of limits exceeds the storage limit","The number of rewards exceeds the storage limit","Amount of contribution is invalid.","Unsupported AssetId.","Weight information for extrinsics in this pallet.","Withdraw all reward from a bootstrap.","Zero contribute in bootstrap","","","","Provide liquidity to a pair.","See <code>Pallet::add_liquidity</code>.","","","","","","","","","","","","See <code>Pallet::bootstrap_charge_reward</code>.","Claim lp asset from a bootstrap pair","See <code>Pallet::bootstrap_claim</code>.","Contribute some asset to a bootstrap pair","See <code>Pallet::bootstrap_contribute</code>.","Create bootstrap pair","See <code>Pallet::bootstrap_create</code>.","End a bootstrap pair","See <code>Pallet::bootstrap_end</code>.","An auto-generated getter for <code>BootstrapEndStatus</code>.","An auto-generated getter for <code>BootstrapPersonalSupply</code>.","Contributor refund from disable bootstrap pair","See <code>Pallet::bootstrap_refund</code>.","update a bootstrap pair","See <code>Pallet::bootstrap_update</code>.","","See <code>Pallet::bootstrap_withdraw_reward</code>.","","","","","","","","","","","","Calculate the underlying amounts for burning LP tokens …","","","","","","","","","Create pair by two assets.","See <code>Pallet::create_pair</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","The higher the fee point, the smaller the cut of the …","The receiver of the protocol fee.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","An auto-generated getter for <code>BootstrapLimits</code>.","An auto-generated getter for <code>BootstrapRewards</code>.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An auto-generated getter for <code>KLast</code>.","","An auto-generated getter for <code>LiquidityPairs</code>.","","","Create a call with the variant <code>add_liquidity</code>.","Create a call with the variant <code>bootstrap_charge_reward</code>.","Create a call with the variant <code>bootstrap_claim</code>.","Create a call with the variant <code>bootstrap_contribute</code>.","Create a call with the variant <code>bootstrap_create</code>.","Create a call with the variant <code>bootstrap_end</code>.","Create a call with the variant <code>bootstrap_refund</code>.","Create a call with the variant <code>bootstrap_update</code>.","Create a call with the variant <code>bootstrap_withdraw_reward</code>.","Create a call with the variant <code>create_pair</code>.","Create a call with the variant <code>remove_liquidity</code>.","Create a call with the variant <code>set_exchange_fee</code>.","Create a call with the variant <code>set_fee_point</code>.","Create a call with the variant <code>set_fee_receiver</code>.","Create a call with the variant <code>swap_assets_for_exact_assets</code>…","Create a call with the variant <code>swap_exact_assets_for_assets</code>…","","","","","","","","The account ID of a pair account only use two byte prefix …","An auto-generated getter for <code>PairStatuses</code>.","Extract liquidity.","See <code>Pallet::remove_liquidity</code>.","","Set the exchange fee rate.","See <code>Pallet::set_exchange_fee</code>.","Set the protocol fee point.","See <code>Pallet::set_fee_point</code>.","Set the new receiver of the protocol fee.","See <code>Pallet::set_fee_receiver</code>.","","","","Sorted the foreign id of assets pair","","Auto-generated docs-only module listing all (public and …","","Buy amount of asset by path.","See <code>Pallet::swap_assets_for_exact_assets</code>.","Sell amount of asset by path.","See <code>Pallet::swap_exact_assets_for_assets</coderovide liquidity to a pair.","Warning: Doc-Only","Claim lp asset from a bootstrap pair","Contribute some asset to a bootstrap pair","Create bootstrap pair","End a bootstrap pair","Contributor refund from disable bootstrap pair","update a bootstrap pair","Warning: Doc-Only","Create pair by two assets.","Extract liquidity.","Set the exchange fee rate.","Set the protocol fee point.","Set the new receiver of the protocol fee.","Buy amount of asset by path.","Sell amount of asset by path.","End status of bootstrap","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Refer: …","Warning: Doc-Only","(T::AssetId, T::AssetId) -&gt; PairStatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,8,0,0,0,8,0,0,0,0,0,0,0,8,0,0,8,9,10,11,11,9,62,11,11,8,9,10,11,8,9,10,11,8,9,10,11,62,62,62,62,62,62,62,62,8,9,10,11,8,9,10,11,9,8,8,9,10,11,8,9,10,11,11,62,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,11,11,11,11,8,9,10,11,8,9,10,11,11,8,9,10,11,8,9,10,11,9,8,9,10,11,8,8,9,9,10,10,11,11,8,10,8,9,10,8,9,10,11,8,8,9,9,10,10,11,11,8,8,9,9,10,10,11,11,63,64,64,11,8,9,10,11,8,9,10,11,64,64,64,64,8,9,10,11,8,9,10,11,8,9,10,11,8,11,8,9,10,9,10,0,11,62,11,11,11,62,62,8,9,10,11,11,62,62,9,8,9,10,11,8,9,10,11,11,10,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,65,8,9,10,11,38,50,46,46,46,46,46,0,0,0,46,0,46,0,46,50,0,50,50,50,50,46,38,0,0,50,50,0,50,50,50,50,50,50,50,50,50,0,46,0,46,38,38,38,0,38,46,46,50,50,50,50,50,46,50,0,0,38,38,50,50,50,50,38,46,50,45,46,47,45,47,41,46,50,47,46,50,47,46,50,47,45,47,45,47,45,47,45,47,45,47,45,45,45,47,45,47,45,47,45,41,46,50,47,45,41,46,50,47,41,45,45,46,47,45,46,47,45,45,45,47,45,46,50,47,46,50,47,46,50,47,46,50,47,41,45,41,46,50,47,45,41,46,50,47,41,45,47,0,45,41,46,50,47,46,50,47,45,46,47,45,45,46,46,47,47,45,41,41,45,46,50,47,45,41,46,50,47,45,45,41,41,46,46,50,50,47,47,45,45,41,41,46,46,50,50,47,47,45,45,45,45,45,45,47,47,47,47,47,45,45,46,50,47,45,45,45,41,46,50,47,45,45,45,45,45,45,45,41,46,50,47,45,41,46,50,47,45,41,46,50,47,45,45,45,45,45,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,45,45,45,45,45,45,45,45,45,45,47,41,45,47,45,47,45,47,46,50,47,45,45,0,45,45,47,45,47,46,50,47,45,46,47,45,41,46,50,47,45,41,46,50,47,46,50,47,46,50,47,46,50,47,45,41,46,50,47,46,50,47,45,41,46,50,47,45,41,46,50,47,45,41,46,50,47,45,50,66,67,67,68,66,67,67,68,69,70,70,69,71,72,67,68,73,66,74,75,76,77,78,79,71,72,67,68,73,66,74,75,76,77,78,79,73,76,73,76,78,67,68,69,70,66,74,73,76,80,71,72,73,76,68,69,70,68,69,70,74,79,73,76,81,73,76,73,76,82,82,83,82,84,85,86,87,88,89,90,91,92,93,94,86,85,88,90,83,82,84,85,86,87,88,89,90,91,92,93,94,86,85,88,90,95,87,88,89,90,84,90,87,89,87,89,92,88,87,89,83,88,82,96,94,82,84,95,88,84,95,93,91,91,84,84,95,86,87,89,87,89,85,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104,97,98,99,100,101,102,103,104],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,0,[[],2],0,0,[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[6,2],[[],2],[[],2],[[6,6],2],[[],2],[[],2],[[6,6],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[[8,[7,7,7]]],[[8,[7,7,7]]]],[[[9,[7,7,7]]],[[9,[7,7,7]]]],[[[10,[7,7]]],[[10,[7,7]]]],[[[11,[7,7,7]]],[[11,[7,7,7]]]],[[]],[[]],[[]],[[]],[[[11,[12,12,12]],[11,[12,12,12]]],13],[[],2],[14,[[16,[8,15]]]],[14,[[16,[[9,[17,17,17]],15]]]],[14,[[16,[[10,[17,17]],15]]]],[14,[[16,[[11,[17,17,17]],15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[6,[[16,[15]]]],[6,[[16,[15]]]],[6,[[16,[15]]]],[6,[[16,[15]]]],[[6,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[],8],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[19,[[16,[[11,[20,20,20]]]]]],[18],[18],[18],[18],[[8,[0,[21,22]]]],[[[9,[23,23,23]],[0,[21,22]]]],[[[10,[23,23]],[0,[21,22]]]],[[[11,[23,23,23]],[0,[21,22]]]],0,[[[8,[24,24,24]],[8,[24,24,24]]],25],[[[9,[24,24,24]],[9,[24,24,24]]],25],[[[10,[24,24]],[10,[24,24]]],25],[[[11,[24,24,24]],[11,[24,24,24]]],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[[8,[26]]],26],0,[[[8,[27,27,27]],28],29],[[[9,[27,27,27]],28],29],[[[10,[27,27]],28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[26,[[16,[[5,[26]],31]]]],[26,[[16,[[5,[26]],31]]]],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],18],[[],18],[[],18],[[],18],[[26,26,26,26],32],[[26,26,26],32],[[26,26],32],[[26,26],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],0,[[],18],[[],18],[[],18],0,0,0,[[[11,[33,33,33]],[11,[33,33,33]]],[[30,[13]]]],[[],2],0,0,[[[11,[34,34,34]],35],16],[[],2],[[],2],[8,18],[[[9,[23,23,23]]],18],[[[10,[23,23]]],18],[[[11,[23,23,23]]],18],0,[6,2],[6,2],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[39,[38]],26,26,26,26,[40,[38]]],32],0,[[[41,[38]],42],[[16,[43]]]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[[39,[38]],5],32],0,[[[39,[38]],[40,[38]]],32],0,[[[39,[38]],26,26,[40,[38]]],32],0,[[[39,[38]],26,26,26,26,[40,[38]],5,5],32],0,[[[39,[38]]],32],0,[44,[[8,[26,[40,[38]]]]]],[44],[[[39,[38]]],32],0,[[[39,[38]],26,26,26,26,[40,[38]],5,5],32],0,[[[39,[38]]],32],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[38]]]],[26,30],[45,45],[[[46,[38]]],[[46,[38]]]],[[[47,[38]]],[[47,[38]]]],[[]],[[]],[[]],[[],18],[[],48],[[[39,[38]],49],32],0,[[]],[14,[[16,[[46,[38]],15]]]],[14,[[16,[50,15]]]],[14,[[16,[[47,[38]],15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[6,[[16,[15]]]],[6,[[16,[15]]]],[6,[[16,[15]]]],[[6,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[],[[41,[38]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[19,[[16,[[41,[38]]]]]],[[26,5],26],[[[47,[38]]],51],0,[18],[18],[18],[18],[18],[[[46,[38]],[0,[21,22]]]],[[50,[0,[21,22]]]],[[[47,[38]],[0,[21,22]]]],[[45,45],25],[[[46,[38]],[46,[38]]],25],[[[47,[38]],[47,[38]]],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],0,0,[[45,28],29],[[[46,[38]],28],29],[[[50,[38]],28],29],[[[47,[38]],28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[16,[[5,[26]],31]]]],[26,[[16,[[5,[26]],31]]]],[26,[[16,[[5,[26]],31]]]],[26,[[16,[[5,[26]],31]]]],[44,[[52,[26]]]],[44,[[52,[26]]]],[[[47,[38]]],3],[[]],[[[47,[38]]],53],[[]],[[[47,[38]]],54],[[26,26,26,26],26],[[],[[30,[[11,[26]]]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],18],[[],[[5,[55]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[26,26,26,26],32],[[26,26,26],32],[[26,26],32],[[26,26],32],[[26,26],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,56],[[],30],[44,30],[[],53],[[],53],[[26,26,26,26,[40,[38]]],[[47,[38]]]],[5,[[47,[38]]]],[[[40,[38]]],[[47,[38]]]],[[26,26,[40,[38]]],[[47,[38]]]],[[26,26,26,26,[40,[38]],5,5],[[47,[38]]]],[[],[[47,[38]]]],[[],[[47,[38]]]],[[26,26,26,26,[40,[38]],5,5],[[47,[38]]]],[[],[[47,[38]]]],[49,[[47,[38]]]],[[26,26,26,[40,[38]]],[[47,[38]]]],[49,[[47,[38]]]],[3,[[47,[38]]]],[30,[[47,[38]]]],[[26,26,5,[40,[38]]],[[47,[38]]]],[[26,26,5,[40,[38]]],[[47,[38]]]],[[[40,[38]]]],[[],57],[[[40,[38]]]],[[]],[[[40,[38]],2],2],[[[40,[38]]],2],[[],2],[[]],[44,[[8,[26,[40,[38]]]]]],[[[39,[38]],26,26,26,[40,[38]]],32],0,[[[41,[38]],35],16],[[[39,[38]],49],32],0,[[[39,[38]],3],32],0,[[[39,[38]],30],32],0,[[[46,[38]]],18],[50,18],[[[47,[38]]],18],[[]],[[],[[5,[58]]]],0,[[26,5],26],[[[39,[38]],26,26,5,[40,[38]]],32],0,[[[39,[38]],26,26,5,[40,[38]]],32],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[59]]]],[2,[[61,[60]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[26,26,26,26,[40,[38]]]],[5],[[[40,[38]]]],[[26,26,[40,[38]]]],[[26,26,26,26,[40,[38]],5,5]],[[]],[[]],[[26,26,26,26,[40,[38]],5,5]],[[]],[49],[[26,26,26,[40,[38]]]],[49],[3],[30],[[26,26,5,[40,[38]]]],[[26,26,5,[40,[38]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[288],"p":[[3,"Private"],[3,"Weight"],[15,"u8"],[3,"Global"],[3,"Vec"],[15,"u32"],[8,"Clone"],[4,"PairStatus"],[3,"BootstrapParameter"],[3,"PairMetadata"],[3,"PairInfo"],[8,"Ord"],[4,"Ordering"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"Output"],[8,"Sized"],[8,"Encode"],[8,"PartialEq"],[15,"bool"],[6,"AssetBalance"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"DispatchError"],[6,"DispatchResult"],[8,"PartialOrd"],[8,"Serialize"],[8,"Serializer"],[3,"TypeId"],[3,"Type"],[8,"Config"],[6,"OriginFor"],[6,"BlockNumberFor"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[8,"EncodeLike"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[15,"u128"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[3,"BoundedBTreeMap"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"U256"],[3,"StorageVersion"],[3,"StorageInfo"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[8,"GenerateLpAssetId"],[8,"ExportDexGeneral"],[8,"ValidateAsset"],[13,"bootstrap_contribute"],[13,"add_liquidity"],[13,"remove_liquidity"],[13,"swap_exact_assets_for_assets"],[13,"swap_assets_for_exact_assets"],[13,"set_exchange_fee"],[13,"create_pair"],[13,"bootstrap_create"],[13,"bootstrap_claim"],[13,"bootstrap_end"],[13,"bootstrap_update"],[13,"bootstrap_refund"],[13,"bootstrap_charge_reward"],[13,"bootstrap_withdraw_reward"],[13,"set_fee_point"],[13,"set_fee_receiver"],[13,"LiquidityAdded"],[13,"PairCreated"],[13,"LiquidityRemoved"],[13,"BootstrapContribute"],[13,"BootstrapEnd"],[13,"BootstrapCreated"],[13,"BootstrapClaim"],[13,"BootstrapUpdate"],[13,"BootstrapRefund"],[13,"DistributeReward"],[13,"ChargeReward"],[13,"WithdrawReward"],[13,"NewFeeRate"],[13,"AssetSwap"],[13,"NewFeePoint"],[3,"KLast"],[3,"FeeMeta"],[3,"LiquidityPairs"],[3,"PairStatuses"],[3,"BootstrapPersonalSupply"],[3,"BootstrapEndStatus"],[3,"BootstrapRewards"],[3,"BootstrapLimits"]]},\
"dex_general_rpc":{"doc":"RPC interface for the dex module.","t":"DIIIENLLLLKLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DexGeneral","DexGeneralApiClient","DexGeneralApiServer","DexGeneralRuntimeApi","Error","RuntimeError","borrow","borrow","borrow_mut","borrow_mut","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_amount_in_price","get_amount_in_price","get_amount_in_price","get_amount_in_price","get_amount_out_price","get_amount_out_price","get_amount_out_price","get_amount_out_price","get_estimate_lptoken","get_estimate_lptoken","get_estimate_lptoken","get_estimate_lptoken","get_pair_by_asset_id","get_pair_by_asset_id","get_pair_by_asset_id","get_pair_by_asset_id","init","init","into","into","into_mut","into_mut","into_ref","into_ref","into_rpc","new","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"dex_general_rpc"]],"d":["","Client implementation for the <code>DexGeneralApi</code> RPC API.","Server trait implementation for the <code>DexGeneralApi</code> RPC API.","","Error type of this RPC api.","The call to runtime failed.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Collects all the methods and subscriptions defined in the …","","","","","","","","","","","","",""],"i":[0,0,0,0,0,25,9,25,9,25,26,9,27,28,9,25,9,25,9,25,9,25,9,9,25,25,9,9,25,25,26,9,27,28,26,9,27,28,26,9,27,28,26,9,27,28,9,25,9,25,9,25,9,25,26,9,9,25,9,25,9,25,9,25,9,25,9,25],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],[[3,[2]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,1,2],[[3,[2]]]],[11,[[13,[2,12]]]],[[5,1,2],[[16,[[15,[14]]]]]],[17],[17],[17],[17],[17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,18,2],[[3,[19]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],1,[18,[10]],2],[[3,[19]]]],[[11,[18,[20]]],[[13,[11,12]]]],[[5,1,18,2],[[16,[[15,[14]]]]]],[[1,18,2],[[3,[19]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],1,[18,[10]],2],[[3,[19]]]],[[11,[18,[20]]],[[13,[11,12]]]],[[5,1,18,2],[[16,[[15,[14]]]]]],[[1,1,1,1,2],[[3,[19]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,1,1,1,1,2],[[3,[19]]]],[[11,11,11,11],[[13,[11,12]]]],[[5,1,1,1,1,2],[[16,[[15,[14]]]]]],[2,[[3,[[2,[[21,[19]]]]]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,2],[[3,[[2,[[21,[10,19,10]]]]]]]],[[],[[13,[[2,[[21,[11]]]],12]]]],[[5,2],[[16,[[15,[14]]]]]],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[23,9],[[],13],[[],13],[[],13],[[],13],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[6,"AssetBalance"],[4,"Option"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"DexGeneral"],[8,"Codec"],[15,"u128"],[4,"ApiError"],[4,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"Vec"],[4,"NumberOrHex"],[3,"Global"],[3,"PairInfo"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[4,"Error"],[8,"DexGeneralApiServer"],[8,"DexGeneralRuntimeApi"],[8,"DexGeneralApiClient"]]},\
"dex_general_rpc_runtime_api":{"doc":"","t":"ILLLLL","n":["DexGeneralApi","calculate_remove_liquidity","get_amount_in_price","get_amount_out_price","get_estimate_lptoken","get_pair_by_asset_id"],"q":[[0,"dex_general_rpc_runtime_api"]],"d":["","","","","",""],"i":[0,7,7,7,7,7],"f":[0,[1,[[4,[2,3]]]],[[1,5],[[4,[1,3]]]],[[1,5],[[4,[1,3]]]],[[1,1,1,1],[[4,[1,3]]]],[[],[[4,[[2,[[6,[1]]]],3]]]]],"c":[],"p":[[6,"AssetBalance"],[4,"Option"],[4,"ApiError"],[4,"Result"],[3,"Vec"],[3,"PairInfo"],[8,"DexGeneralApi"]]},\
"dex_stable":{"doc":"Stable AMM Pallet","t":"IKKKKAKKKKKKAKKKKKKKAKKNNNNNENNINNNQNNQEENNNNNNNNNNNNNNNGNQNNGQNNGDQQQQGNNNNNNQNNQNNNQNLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLNLLNLLNLNLNLNLNLLLLLLLLNLALLNLNLLNLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFFFFFFFFFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIKKKKKKKKKKKKKKK","n":["WeightInfo","add_liquidity","add_pool_and_base_pool_liquidity","create_base_pool","create_meta_pool","pallet","ramp_a","remove_liquidity","remove_liquidity_imbalance","remove_liquidity_one_currency","remove_pool_and_base_pool_liquidity","remove_pool_and_base_pool_liquidity_one_currency","rpc","set_admin_fee","set_swap_fee","stop_ramp_a","swap","swap_meta_pool_underlying","swap_pool_from_base","swap_pool_to_base","traits","update_fee_receiver","withdraw_admin_fee","AddLiquidity","AlreadyStoppedRampA","AmountSlippage","Arithmetic","BadPoolCurrencySymbol","Call","CheckDFailed","CollectProtocolFee","Config","CreatePool","CurrencyExchange","CurrencyExchangeUnderlying","CurrencyId","CurrencyIndexOutRange","Deadline","EnsurePoolAsset","Error","Event","ExceedMaxA","ExceedMaxAChange","ExceedMaxAdminFee","ExceedMaxFee","ExceedThreshold","InsufficientLpReserve","InsufficientReserve","InsufficientSupply","InvalidBasePool","InvalidBasePoolLpCurrency","InvalidCurrencyDecimal","InvalidLpCurrency","InvalidPoolId","InvalidPooledCurrency","InvalidTransaction","LpCurrencies","LpCurrencyAlreadyUsed","LpGenerate","MinRampTime","MismatchParameter","Module","MultiCurrency","NewAdminFee","NewSwapFee","NextPoolId","Pallet","PalletId","PoolCurrencyLimit","PoolCurrencySymbolLimit","PoolId","Pools","RampA","RampADelay","RemoveLiquidity","RemoveLiquidityImbalance","RemoveLiquidityOneCurrency","RequireAllCurrencies","RuntimeEvent","StopRampA","SwapSameCurrency","TimeProvider","TokenIndexOutOfRange","TooManyCurrencies","UpdateAdminFeeReceiver","WeightInfo","ZeroA","__clone_box","__clone_box","__clone_box","add_liquidity","add_liquidity","add_liquidity","add_pool_and_base_pool_liquidity","add_pool_and_base_pool_liquidity","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_meta_swap_underlying","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create_base_pool","create_base_pool","create_meta_pool","create_meta_pool","currency_index","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_a","get_a_precise_by_id","get_admin_balances","get_call_index","get_call_indices","get_call_name","get_call_names","get_currencies","get_currency","get_currency_balances","get_currency_index","get_currency_precision_multipliers","get_dispatch_info","get_lp_currency","get_number_of_currencies","get_virtual_price","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","lp_currencies","module_name","name","new_call_variant_add_liquidity","new_call_variant_add_pool_and_base_pool_liquidity","new_call_variant_create_base_pool","new_call_variant_create_meta_pool","new_call_variant_ramp_a","new_call_variant_remove_liquidity","new_call_variant_remove_liquidity_imbalance","new_call_variant_remove_liquidity_one_currency","new_call_variant_remove_pool_and_base_pool_liquidity","new_call_variant_remove_pool_and_base_pool_liquidity_one_currency","new_call_variant_set_admin_fee","new_call_variant_set_swap_fee","new_call_variant_stop_ramp_a","new_call_variant_swap","new_call_variant_swap_meta_pool_underlying","new_call_variant_swap_pool_from_base","new_call_variant_swap_pool_to_base","new_call_variant_update_fee_receiver","new_call_variant_withdraw_admin_fee","next_pool_id","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","pool_account_id","pools","ramp_a","ramp_a","remove_liquidity","remove_liquidity","remove_liquidity","remove_liquidity_imbalance","remove_liquidity_imbalance","remove_liquidity_imbalance","remove_liquidity_one_currency","remove_liquidity_one_currency","remove_liquidity_one_currency","remove_pool_and_base_pool_liquidity","remove_pool_and_base_pool_liquidity","remove_pool_and_base_pool_liquidity_one_currency","remove_pool_and_base_pool_liquidity_one_currency","set_admin_fee","set_admin_fee","set_swap_fee","set_swap_fee","size_hint","size_hint","size_hint","stable_amm_calculate_currency_amount","stable_amm_calculate_remove_liquidity","stable_amm_calculate_remove_liquidity_one_currency","stable_amm_calculate_swap_amount","stop_ramp_a","stop_ramp_a","storage_info","storage_types","swap","swap","swap","swap_meta_pool_underlying","swap_meta_pool_underlying","swap_pool_from_base","swap_pool_from_base","swap_pool_from_base","swap_pool_to_base","swap_pool_to_base","swap_pool_to_base","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_fee_receiver","update_fee_receiver","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_admin_fee","withdraw_admin_fee","a","a","admin_fee","admin_fee","admin_fee_receiver","admin_fee_receiver","amount","amount","amounts","amounts","base_amounts","base_pool_id","base_pool_id","base_pool_id","base_pool_id","base_pool_id","currency_decimals","currency_decimals","currency_ids","currency_ids","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","dx","dx","dx","fee","fee","fee_receiver","from_index","future_a","future_a_time","i","in_amount","in_index","in_index","in_index","index","lp_amount","lp_amount","lp_currency_symbol","lp_currency_symbol","max_burn_amount","meta_amounts","min_amount","min_amount","min_amounts","min_amounts_base","min_amounts_meta","min_dy","min_dy","min_dy","min_mint_amount","min_out_amount","min_to_mint","new_admin_fee","new_swap_fee","out_index","out_index","out_index","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","to","to","to","to","to","to","to","to","to","to","to","to_index","a","account","account","admin_fee","admin_fee_receiver","admin_fee_receiver","amounts","amounts","burn_amount","currency_id","currency_ids","currency_index_from","currency_index_to","current_a","fee_amount","fees","fees","fees","future_a_precise","future_a_time","in_amount","in_amount","in_index","initial_a_precise","lp_currency_id","mint_amount","new_admin_fee","new_d","new_d","new_swap_fee","new_total_supply","new_total_supply","now","now","out_amount","out_amount","out_amount","out_index","out_index","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","pool_id","supply_amounts","swap_fee","to","to","to","to","to","to","who","who","who","who","who","add_liquidity","add_pool_and_base_pool_liquidity","create_base_pool","create_meta_pool","ramp_a","remove_liquidity","remove_liquidity_imbalance","remove_liquidity_one_currency","remove_pool_and_base_pool_liquidity","remove_pool_and_base_pool_liquidity_one_currency","set_admin_fee","set_swap_fee","stop_ramp_a","swap","swap_meta_pool_underlying","swap_pool_from_base","swap_pool_to_base","update_fee_receiver","withdraw_admin_fee","LpCurrencies","NextPoolId","Pools","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","StableAmmApi","StablePoolLpCurrencyIdGenerate","ValidateCurrency","add_liquidity","currency_index","generate_by_pool_id","remove_liquidity","remove_liquidity_imbalance","remove_liquidity_one_currency","stable_amm_calculate_currency_amount","stable_amm_calculate_remove_liquidity","stable_amm_calculate_remove_liquidity_one_currency","stable_amm_calculate_swap_amount","swap","swap_pool_from_base","swap_pool_to_base","validate_pool_lp_currency","validate_pooled_currency"],"q":[[0,"dex_stable"],[23,"dex_stable::pallet"],[348,"dex_stable::pallet::Call"],[445,"dex_stable::pallet::Event"],[510,"dex_stable::pallet::dispatchables"],[529,"dex_stable::pallet::storage_types"],[592,"dex_stable::traits"]],"d":["Weight functions needed for dex_stable.","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","","","","Supply some liquidity to a pool.","The ramping A of this pool is already stopped.","Slippage is too large.","The error generate by some arithmetic function.","The symbol of created pool exceeds the length limit.","Contains a variant per dispatchable extrinsic that this …","The new d below then older.","A pool’s admin fee was collected.","Configuration trait of this pallet.","A pool was created.","Swap a amounts of currency to get other.","","The currency ID type","The index of currency id bigger the length of pool’s …","The call already expired.","Verify that the currencies can be used in a pool.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","The A parameter exceed MAX_A when creating the pool.","Forbid change A of a pool bigger than MAX_A.","The admin fee parameter exceeds MAX_ADMIN_FEE when …","The fee parameter exceeds MAX_SWAP_FEE when creating the …","The setting value exceed threshold.","The pool does not have enough lp currency.","The pool does not have enough currencies.","The caller does not have enough currencies.","The base pool mismatch this pool.","The base pool lp currency is invalid when create meta pool.","The decimal of currency is invalid when create pool.","The currency id can’t become the lp currency id of …","The pool id is invalid.","The currency id can’t join stable amm pool.","The transaction change nothing.","The pool id corresponding to lp currency","The lp currency id is already used when create pool.","Generate the CurrencyId for the pool.","The value of feature_a_time is too small.","The parameters of a call are contradictory.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The trait control all currencies","A pool’s admin fee parameters was updated","A pool’s swap fee parameters was updated","The id of next pool","The <code>Pallet</code> struct, the main type that implements traits …","This pallet ID.","","","The pool ID type","Info of a pool.","A pool’s ‘A’ was ramped.","The A of this pool is already ramped in current period.","Remove some liquidity from a pool.","Remove liquidity from a pool with specify the amounts of …","Remove some liquidity from a pool to get only one currency.","Require all currencies of this pool when first supply.","","A pool’s ramping A was stopped.","Forbid swap same currency.","The trait get timestamp of chain.","The token index out of range.","The number of currencies exceeds the length limit.","A pool’s admin_fee_receiver was updated.","Weight information for extrinsics in this pallet.","The A parameter cannot be zero when creating the pool.","","","","Supply amounts of currencies to the pool.","","See <code>Pallet::add_liquidity</code>.","Supply amounts of currencies to the pool which contains …","See <code>Pallet::add_pool_and_base_pool_liquidity</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a stable amm pool.","See <code>Pallet::create_base_pool</code>.","Create a stable amm meta pool.","See <code>Pallet::create_meta_pool</code>.","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","An auto-generated getter for <code>LpCurrencies</code>.","","","Create a call with the variant <code>add_liquidity</code>.","Create a call with the variant …","Create a call with the variant <code>create_base_pool</code>.","Create a call with the variant <code>create_meta_pool</code>.","Create a call with the variant <code>ramp_a</code>.","Create a call with the variant <code>remove_liquidity</code>.","Create a call with the variant <code>remove_liquidity_imbalance</code>.","Create a call with the variant …","Create a call with the variant …","Create a call with the variant …","Create a call with the variant <code>set_admin_fee</code>.","Create a call with the variant <code>set_swap_fee</code>.","Create a call with the variant <code>stop_ramp_a</code>.","Create a call with the variant <code>swap</code>.","Create a call with the variant <code>swap_meta_pool_underlying</code>.","Create a call with the variant <code>swap_pool_from_base</code>.","Create a call with the variant <code>swap_pool_to_base</code>.","Create a call with the variant <code>update_fee_receiver</code>.","Create a call with the variant <code>withdraw_admin_fee</code>.","An auto-generated getter for <code>NextPoolId</code>.","","","","","","","","only use two byte prefix to support 16 byte account id …","An auto-generated getter for <code>Pools</code>.","Start ramping up or down A parameter towards given …","See <code>Pallet::ramp_a</code>.","","Remove liquidity from a pool.","See <code>Pallet::remove_liquidity</code>.","Remove liquidity from a pool to the specify amounts of …","","See <code>Pallet::remove_liquidity_imbalance</code>.","","Remove liquidity from a pool to get one currency.","See <code>Pallet::remove_liquidity_one_currency</code>.","Remove liquidity from a pool which contains the lp …","See <code>Pallet::remove_pool_and_base_pool_liquidity</code>.","Remove liquidity from a pool which contains the lp …","See …","Update admin fee of the pool.","See <code>Pallet::set_admin_fee</code>.","Update fee of the pool.","See <code>Pallet::set_swap_fee</code>.","","","","","","","","Stop ramping A parameter.","See <code>Pallet::stop_ramp_a</code>.","","Auto-generated docs-only module listing all (public and …","","Swap a amounts of currencies to get other.","See <code>Pallet::swap</code>.","","See <code>Pallet::swap_meta_pool_underlying</code>.","Swap the currency from basic pool to get amounts of other …","","See <code>Pallet::swap_pool_from_base</code>.","Swap the currency from pool to get amounts of other …","","See <code>Pallet::swap_pool_to_base</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update admin fee receiver of the pool.","See <code>Pallet::update_fee_receiver</code>.","","","","","","","Withdraw the admin fee from pool to admin fee receiver.","See <code>Pallet::withdraw_admin_fee</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Supply amounts of currencies to the pool.","Supply amounts of currencies to the pool which contains …","Create a stable amm pool.","Create a stable amm meta pool.","Start ramping up or down A parameter towards given …","Remove liquidity from a pool.","Remove liquidity from a pool to the specify amounts of …","Remove liquidity from a pool to get one currency.","Remove liquidity from a pool which contains the lp …","Remove liquidity from a pool which contains the lp …","Update admin fee of the pool.","Update fee of the pool.","Stop ramping A parameter.","Swap a amounts of currencies to get other.","Warning: Doc-Only","Swap the currency from basic pool to get amounts of other …","Swap the currency from pool to get amounts of other …","Update admin fee receiver of the pool.","Withdraw the admin fee from pool to admin fee receiver.","The pool id corresponding to lp currency","The id of next pool","Info of a pool.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,40,40,40,40,0,40,40,40,40,40,40,0,40,40,40,40,40,40,40,0,40,40,16,22,22,22,22,0,22,16,0,16,16,16,4,22,22,4,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,4,22,22,0,4,16,16,0,0,4,4,4,4,0,16,22,16,16,16,22,4,16,22,4,22,22,16,4,22,15,16,17,15,15,17,15,17,16,22,17,16,22,17,16,22,17,15,16,22,17,15,16,22,17,15,15,16,17,15,16,17,15,15,15,17,15,17,15,15,16,22,17,16,22,17,16,22,17,16,22,17,15,16,22,17,15,16,22,17,17,0,15,16,22,17,16,22,17,15,16,17,15,15,16,16,17,17,15,16,22,17,15,16,22,17,15,15,16,16,22,22,17,17,15,15,16,16,22,22,17,17,15,15,15,17,17,17,17,15,15,15,15,15,17,15,15,15,16,22,17,15,15,15,16,22,17,15,15,16,22,17,15,16,22,17,15,16,22,17,15,15,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,15,15,15,15,15,15,15,15,15,15,15,17,15,15,17,15,15,17,15,15,17,15,17,15,17,15,17,15,17,16,22,17,15,15,15,15,15,17,15,0,15,15,17,15,17,15,15,17,15,15,17,16,22,17,15,16,17,15,16,22,17,15,16,22,17,16,22,17,16,22,17,16,22,17,15,16,22,17,16,22,17,15,16,22,17,15,16,22,17,15,17,15,16,22,17,15,22,15,17,41,42,41,42,41,42,43,44,45,46,47,47,43,44,48,49,41,42,41,42,45,50,51,52,46,47,43,44,48,49,53,48,49,53,41,42,54,50,55,55,44,50,48,49,53,52,51,52,41,42,46,47,52,44,51,43,43,48,49,53,45,50,47,56,57,48,49,53,45,50,51,52,46,47,43,44,48,49,53,54,57,56,55,58,59,45,50,51,52,46,47,43,44,48,49,53,50,60,60,61,60,60,62,63,64,65,66,60,61,61,67,66,68,63,64,69,69,70,61,70,69,60,68,71,68,64,72,63,64,69,67,70,65,61,70,65,60,62,68,70,63,65,64,72,71,69,67,66,61,68,60,68,70,63,65,64,61,68,70,63,65,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,73,74,74,75,75,73,73,74,74,75,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,0,0,0,76,76,77,76,76,76,76,76,76,76,76,76,76,78,78],"f":[0,[1,2],[[1,1],2],[[1,1],2],[[1,1],2],0,[[],2],[1,2],[1,2],[[],2],[[1,1],2],[[],2],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3],[3],[3],[[[5,[4]],[7,[6]],6,[8,[4]]],9],[6,[[11,[6,10]]]],0,[[[5,[4]],[7,[6]],[7,[6]],6,[8,[4]]],9],0,[[]],[[]],[[]],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,14,14],[[11,[6,10]]]],[15,15],[[[16,[4]]],[[16,[4]]]],[[[17,[4]]],[[17,[4]]]],[[]],[[]],[[]],[[],14],[[],18],[[[5,[4]],7,[7,[1]],6,6,6,[7,[12]]],9],0,[[[5,[4]],7,[7,[1]],6,6,6,[7,[12]]],9],0,[[],[[19,[1]]]],[[]],[20,[[11,[[16,[4]],21]]]],[20,[[11,[22,21]]]],[20,[[11,[[17,[4]],21]]]],[[],[[11,[21]]]],[[],[[11,[21]]]],[[],[[11,[21]]]],[1,[[11,[21]]]],[1,[[11,[21]]]],[1,[[11,[21]]]],[[1,20],[[11,[21]]]],[[1,20],[[11,[21]]]],[[1,20],[[11,[21]]]],[14],[14],[14],[14],[14],[14],[14],[14],[[[17,[4]]],23],0,[14],[14],[14],[14],[[[16,[4]],[0,[24,25]]]],[[22,[0,[24,25]]]],[[[17,[4]],[0,[24,25]]]],[[15,15],26],[[[16,[4]],[16,[4]]],26],[[[17,[4]],[17,[4]]],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[15,27],28],[[[16,[4]],27],28],[[[22,[4]],27],28],[[[17,[4]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],[[7,[6]]]],[[[17,[4]]],12],[[]],[[[17,[4]]],29],[[]],[[],7],[1,19],[[],[[7,[6]]]],[[],[[19,[1]]]],[[],[[7,[6]]]],[[[17,[4]]],30],[[],19],[[],1],[[],6],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[],14],[[],[[7,[31]]]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,19],[[],29],[[],29],[[[7,[6]],6,[8,[4]]],[[17,[4]]]],[[[7,[6]],[7,[6]],6,[8,[4]]],[[17,[4]]]],[[7,[7,[1]],6,6,6,[7,[12]]],[[17,[4]]]],[[7,[7,[1]],6,6,6,[7,[12]]],[[17,[4]]]],[[6,6],[[17,[4]]]],[[6,[7,[6]],[8,[4]]],[[17,[4]]]],[[[7,[6]],6,[8,[4]]],[[17,[4]]]],[[6,1,6,[8,[4]]],[[17,[4]]]],[[6,[7,[6]],[7,[6]],[8,[4]]],[[17,[4]]]],[[6,1,6,[8,[4]]],[[17,[4]]]],[6,[[17,[4]]]],[6,[[17,[4]]]],[[],[[17,[4]]]],[[1,1,6,6,[8,[4]]],[[17,[4]]]],[[1,1,6,6,[8,[4]]],[[17,[4]]]],[[1,1,6,6,[8,[4]]],[[17,[4]]]],[[1,1,6,6,[8,[4]]],[[17,[4]]]],[[],[[17,[4]]]],[[],[[17,[4]]]],[[]],[[[8,[4]]]],[[],33],[[[8,[4]]]],[[]],[[[8,[4]],2],2],[[[8,[4]]],2],[[],2],[[]],[32,[[19,[0]]]],[[[5,[4]],6,6],9],0,[6,9],[[[5,[4]],6,[7,[6]],[8,[4]]],9],0,[[[5,[4]],[7,[6]],6,[8,[4]]],9],[6,9],0,[[6,1,6],[[11,[6,10]]]],[[[5,[4]],6,1,6,[8,[4]]],9],0,[[[5,[4]],6,[7,[6]],[7,[6]],[8,[4]]],9],0,[[[5,[4]],6,1,6,[8,[4]]],9],0,[[[5,[4]],6],9],0,[[[5,[4]],6],9],0,[[[16,[4]]],14],[22,14],[[[17,[4]]],14],[26,[[11,[6,10]]]],[6,[[19,[[7,[6]]]]]],[[6,1],[[19,[6]]]],[[14,14,6],[[19,[6]]]],[[[5,[4]]],9],0,[[],[[7,[34]]]],0,[[1,1,6,6],[[11,[6,10]]]],[[[5,[4]],1,1,6,6,[8,[4]]],9],0,[[[5,[4]],1,1,6,6,[8,[4]]],9],0,[[[5,[4]],1,1,6,6,[8,[4]]],9],[[1,1,6,6],[[11,[6,10]]]],0,[[[5,[4]],1,1,6,6,[8,[4]]],9],[[1,1,6,6],[[11,[6,10]]]],0,[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[],[[7,[12,13]]]],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],9],0,[[]],[[]],[[]],[[]],[[],[[7,[37]]]],[2,[[39,[38]]]],[[[5,[4]]],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[7,[6]],6,[8,[4]]]],[[[7,[6]],[7,[6]],6,[8,[4]]]],[[7,[7,[1]],6,6,6,[7,[12]]]],[[7,[7,[1]],6,6,6,[7,[12]]]],[[6,6]],[[6,[7,[6]],[8,[4]]]],[[[7,[6]],6,[8,[4]]]],[[6,1,6,[8,[4]]]],[[6,[7,[6]],[7,[6]],[8,[4]]]],[[6,1,6,[8,[4]]]],[6],[6],[[]],[[1,1,6,6,[8,[4]]]],[[1,1,6,6,[8,[4]]]],[[1,1,6,6,[8,[4]]]],[[1,1,6,6,[8,[4]]]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],35],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[11,[10]]]],[[],[[19,[1]]]],[[]],[[],9],[[],9],[1,[[11,[10]]]],[26,[[11,[10]]]],[[],[[19,[7]]]],[1,19],[[14,14],19],[[1,1],[[11,[10]]]],[[1,1],[[11,[10]]]],[[1,1],[[11,[10]]]],[[],26],[[],26]],"c":[61],"p":[[15,"u32"],[3,"Weight"],[3,"Private"],[8,"Config"],[6,"OriginFor"],[15,"u128"],[3,"Vec"],[6,"BlockNumberFor"],[6,"DispatchResult"],[4,"DispatchError"],[4,"Result"],[15,"u8"],[3,"Global"],[15,"usize"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[4,"Option"],[8,"Input"],[3,"Error"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[8,"EncodeLike"],[3,"StorageVersion"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"create_base_pool"],[13,"create_meta_pool"],[13,"remove_pool_and_base_pool_liquidity"],[13,"remove_pool_and_base_pool_liquidity_one_currency"],[13,"add_liquidity"],[13,"remove_liquidity_imbalance"],[13,"add_pool_and_base_pool_liquidity"],[13,"swap_pool_from_base"],[13,"swap_pool_to_base"],[13,"swap"],[13,"remove_liquidity"],[13,"remove_liquidity_one_currency"],[13,"swap_meta_pool_underlying"],[13,"update_fee_receiver"],[13,"ramp_a"],[13,"set_admin_fee"],[13,"set_swap_fee"],[13,"stop_ramp_a"],[13,"withdraw_admin_fee"],[13,"CreatePool"],[13,"CurrencyExchangeUnderlying"],[13,"UpdateAdminFeeReceiver"],[13,"RemoveLiquidity"],[13,"RemoveLiquidityImbalance"],[13,"RemoveLiquidityOneCurrency"],[13,"CollectProtocolFee"],[13,"StopRampA"],[13,"AddLiquidity"],[13,"RampA"],[13,"CurrencyExchange"],[13,"NewAdminFee"],[13,"NewSwapFee"],[3,"NextPoolId"],[3,"Pools"],[3,"LpCurrencies"],[8,"StableAmmApi"],[8,"StablePoolLpCurrencyIdGenerate"],[8,"ValidateCurrency"]]},\
"dex_stable_rpc":{"doc":"RPC interface for the stable amm pallet.","t":"DIIIENLLLLKLLLKLLLKLLLKLLLLLLLLLLLLLLLKLLLKLLLKLLKLLLKLLLKLLLKLLLKLLKLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLL","n":["DexStable","DexStableApiClient","DexStableApiServer","DexStableRuntimeApi","Error","RuntimeError","borrow","borrow","borrow_mut","borrow_mut","calculate_currency_amount","calculate_currency_amount","calculate_currency_amount","calculate_currency_amount","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity_one_currency","calculate_remove_liquidity_one_currency","calculate_remove_liquidity_one_currency","calculate_remove_liquidity_one_currency","calculate_swap","calculate_swap","calculate_swap","calculate_swap","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","get_a","get_a","get_a","get_a","get_a_precise","get_a_precise","get_a_precise","get_a_precise","get_admin_balance","get_admin_balance","get_admin_balance","get_admin_balances","get_admin_balances","get_admin_balances","get_admin_balances","get_currencies","get_currencies","get_currencies","get_currencies","get_currency","get_currency","get_currency","get_currency","get_currency_balances","get_currency_balances","get_currency_balances","get_currency_balances","get_currency_index","get_currency_index","get_currency_index","get_currency_precision_multipliers","get_currency_precision_multipliers","get_currency_precision_multipliers","get_currency_precision_multipliers","get_lp_currency","get_lp_currency","get_lp_currency","get_lp_currency","get_number_of_currencies","get_number_of_currencies","get_number_of_currencies","get_number_of_currencies","get_virtual_price","get_virtual_price","get_virtual_price","get_virtual_price","init","init","into","into","into_rpc","new","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"dex_stable_rpc"]],"d":["","Client implementation for the <code>DexStableApi</code> RPC API.","Server trait implementation for the <code>DexStableApi</code> RPC API.","","Error type of this RPC api.","The call to runtime failed.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Collects all the methods and subscriptions defined in the …","","","","","","","","","","","","",""],"i":[0,0,0,0,0,29,11,29,11,29,30,11,31,32,30,11,31,32,30,11,31,32,30,11,31,32,11,29,11,29,11,29,11,29,11,29,11,29,30,11,31,32,30,11,31,32,30,11,32,30,11,31,32,30,11,31,32,30,11,31,32,30,11,31,32,30,11,32,30,11,31,32,30,11,31,32,30,11,31,32,30,11,31,32,11,29,11,29,30,11,11,29,11,29,11,29,11,29,11,29,11,29],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2,3],[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,[1,[[0,[12,[13,[4]],14,15,16]]]],2,3],[[5,[4]]]],[[[1,[17]],2],[[19,[18]]]],[[7,1,2,3],[[22,[[21,[20]]]]]],[3,[[5,[[1,[4]]]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,[0,[12,[13,[4]],14,15,16]],3],[[5,[[1,[4]]]]]],[[],[[19,[[1,[17]],18]]]],[[7,3],[[22,[[21,[20]]]]]],[[23,3],[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,[0,[12,[13,[4]],14,15,16]],23,3],[[5,[4]]]],[23,[[19,[18]]]],[[7,23,3],[[22,[[21,[20]]]]]],[[23,23,3],[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,23,23,[0,[12,[13,[4]],14,15,16]],3],[[5,[4]]]],[[23,23],[[19,[18]]]],[[7,23,23,3],[[22,[[21,[20]]]]]],[24],[24],[24],[24],[24],[24],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[4]]]],[[],[[19,[18]]]],[[7,3],[[22,[[21,[20]]]]]],[3,[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[4]]]],[[],[[19,[18]]]],[[7,3],[[22,[[21,[20]]]]]],[[23,3],[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,23,3],[[5,[4]]]],[[7,23,3],[[22,[[21,[20]]]]]],[3,[[5,[[1,[4]]]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[[1,[4]]]]]],[[],[[19,[[1,[17]],18]]]],[[7,3],[[22,[[21,[20]]]]]],[3,[[5,[1]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[[1,[[0,[12,25]]]]]]]],[[],[[19,[[1,[17]],18]]]],[[7,3],[[22,[[21,[20]]]]]],[[23,3],5],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,23,3],[[5,[[0,[12,25]]]]]],[23,[[19,[3,18]]]],[[7,23,3],[[22,[[21,[20]]]]]],[3,[[5,[[1,[4]]]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[[1,[4]]]]]],[[],[[19,[[1,[17]],18]]]],[[7,3],[[22,[[21,[20]]]]]],[3,[[5,[23]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,[0,[12,25]],3],[[5,[23]]]],[[7,3],[[22,[[21,[20]]]]]],[3,[[5,[[1,[4]]]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[[1,[4]]]]]],[[],[[19,[[1,[17]],18]]]],[[7,3],[[22,[[21,[20]]]]]],[3,5],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[[0,[12,25]]]]]],[[],[[19,[3,18]]]],[[7,3],[[22,[[21,[20]]]]]],[3,[[5,[23]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[23]]]],[[],[[19,[23,18]]]],[[7,3],[[22,[[21,[20]]]]]],[3,[[5,[4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,3],[[5,[4]]]],[[],[[19,[18]]]],[[7,3],[[22,[[21,[20]]]]]],[[],24],[[],24],[[]],[[]],[[],26],[27,11],[[],19],[[],19],[[],19],[[],19],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Vec"],[15,"bool"],[4,"Option"],[4,"NumberOrHex"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"DexStable"],[8,"Codec"],[8,"TryInto"],[8,"Debug"],[8,"MaybeDisplay"],[8,"Copy"],[3,"Global"],[4,"ApiError"],[4,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u32"],[15,"usize"],[8,"PartialEq"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[4,"Error"],[8,"DexStableApiServer"],[8,"DexStableRuntimeApi"],[8,"DexStableApiClient"]]},\
"dex_stable_rpc_runtime_api":{"doc":"Runtime API definition for stable amm.","t":"ILLLLLLLLLLLLLL","n":["DexStableApi","calculate_currency_amount","calculate_remove_liquidity","calculate_remove_liquidity_one_currency","calculate_swap","get_a","get_a_precise","get_admin_balances","get_currencies","get_currency","get_currency_balances","get_currency_precision_multipliers","get_lp_currency","get_number_of_currencies","get_virtual_price"],"q":[[0,"dex_stable_rpc_runtime_api"]],"d":["","","","","","","","","","","","","","",""],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[0,[[1,2],[[4,[3]]]],[[],[[4,[1,3]]]],[5,[[4,[3]]]],[[5,5],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[1,3]]]],[[],[[4,[1,3]]]],[5,[[4,[6,3]]]],[[],[[4,[1,3]]]],[[],[[4,[1,3]]]],[[],[[4,[6,3]]]],[[],[[4,[5,3]]]],[[],[[4,[3]]]]],"c":[],"p":[[3,"Vec"],[15,"bool"],[4,"ApiError"],[4,"Result"],[15,"u32"],[4,"Option"],[8,"DexStableApi"]]},\
"dex_swap_router":{"doc":"","t":"NNENNDENILLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLNQEINQNEEQQNNNGDQQQQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMF","n":["FromBase","General","Route","Single","Stable","StablePath","StableSwapMode","ToBase","WeightInfo","__clone_box","__clone_box","__clone_box","base_pool_id","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_currency","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","mode","pallet","pool_id","size_hint","size_hint","size_hint","to_currency","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_routes","vzip","vzip","vzip","AmountSlippage","Balance","Call","Config","ConvertCurrencyFailed","CurrencyId","Deadline","Error","Event","GeneralAmm","GeneralWeightInfo","InvalidPath","InvalidRoutes","MismatchPoolAndCurrencyId","Module","Pallet","RuntimeEvent","StableAmm","StablePoolId","StableWeightInfo","WeightInfo","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_swap_exact_tokens_for_tokens","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","size_hint","size_hint","storage_info","storage_types","swap_exact_tokens_for_tokens","swap_exact_tokens_for_tokens","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","amount_in","amount_out_min","deadline","routes","to","swap_exact_tokens_for_tokens"],"q":[[0,"dex_swap_router"],[145,"dex_swap_router::pallet"],[343,"dex_swap_router::pallet::Call"],[348,"dex_swap_router::pallet::dispatchables"]],"d":["","","","","","","","","Weight functions needed for dex_swap_router.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","","Weight information for extrinsics in this pallet.","","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant <code>swap_exact_tokens_for_tokens</code>…","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","Atomically execute a series of trades using <code>DexGeneral</code> …","See <code>Pallet::swap_exact_tokens_for_tokens</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Atomically execute a series of trades using <code>DexGeneral</code> …"],"i":[7,8,0,7,8,0,0,7,0,6,7,8,6,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,6,7,7,8,8,6,7,8,6,7,8,6,6,6,7,7,8,8,6,6,7,7,8,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,0,6,6,7,8,6,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,44,6,7,8,31,27,0,0,31,27,31,0,0,27,27,31,31,31,0,0,27,27,27,27,27,26,28,29,28,31,29,28,31,29,28,31,29,26,28,31,29,26,28,31,29,26,28,29,26,28,29,26,26,26,28,31,29,28,31,29,28,31,29,28,31,29,26,28,31,29,26,28,31,29,29,0,26,28,31,29,31,29,26,28,29,26,26,28,28,29,29,26,28,31,29,26,28,31,29,26,26,28,28,31,31,29,29,26,26,28,28,31,31,29,29,29,29,29,29,29,28,31,29,26,26,26,28,31,29,26,26,28,31,29,26,28,31,29,26,28,31,29,26,26,29,26,26,26,26,26,26,26,31,29,26,0,26,29,28,31,29,26,28,29,26,28,31,29,26,28,31,29,28,31,29,28,31,29,28,31,29,26,28,31,29,28,31,29,26,28,31,29,26,28,31,29,26,28,31,29,26,31,45,45,45,45,45,0],"f":[0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5,5]]],[[6,[5,5]]]],[7,7],[[[8,[5,5]]],[[8,[5,5]]]],[[]],[[]],[[]],[9,[[12,[[6,[10,10]],11]]]],[9,[[12,[7,11]]]],[9,[[12,[8,11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[[6,[15,15]],[0,[16,17]]]],[[7,[0,[16,17]]]],[[8,[0,[16,17]]]],[[[6,[18,18]],[6,[18,18]]],19],[[7,7],19],[[[8,[18,18]],[8,[18,18]]],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[[6,[20,20]],21],22],[[7,21],22],[[[8,[20,20]],21],22],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[6,[15,15]]],14],[7,14],[8,14],0,[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[13,25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[[[28,[27]]],[[28,[27]]]],[[[29,[27]]],[[29,[27]]]],[[]],[[]],[[]],[[],14],[[],30],[[]],[9,[[12,[[28,[27]],11]]]],[9,[[12,[31,11]]]],[9,[[12,[[29,[27]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[14],[14],[14],[14],[14],[14],[14],[14],[[[29,[27]]],32],0,[14],[14],[14],[14],[[31,[0,[16,17]]]],[[[29,[27]],[0,[16,17]]]],[[26,26],19],[[[28,[27]],[28,[27]]],19],[[[29,[27]],[29,[27]]],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[26,21],22],[[[28,[27]],21],22],[[[31,[27]],21],22],[[[29,[27]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[27]]],2],[[]],[[[29,[27]]],33],[[]],[[[29,[27]]],34],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],14],[[],[[4,[35]]]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[[4,[8]],[36,[27]]],[[29,[27]]]],[[[36,[27]]]],[[],37],[[[36,[27]]]],[[]],[[[36,[27]],25],25],[[[36,[27]]],25],[[],25],[31,14],[[[29,[27]]],14],[[],[[4,[38]]]],0,[[[39,[27]],[4,[8]],[36,[27]]],40],0,[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[41]]]],[25,[[43,[42]]]],0,0,0,0,0,[[[4,[8]],[36,[27]]]]],"c":[159],"p":[[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Clone"],[3,"StablePath"],[4,"StableSwapMode"],[4,"Route"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Type"],[3,"Weight"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"StorageInfo"],[6,"OriginFor"],[6,"DispatchResult"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"swap_exact_tokens_for_tokens"]]},\
"escrow":{"doc":"Escrow Pallet","t":"DDILLMLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLAKKLLLLLLLLLLLLLLLLLLLLLLLLKLLKQGEIQNGEQENNNGNNNNNNGQGNDGGQGQNNNGGQNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLNMMMMMMMMMMMMMMFFFFFFFDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["LockedBalance","Point","WeightInfo","__clone_box","__clone_box","amount","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_lock","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","increase_amount","increase_unlock_height","init","init","into","into","into_mut","into_mut","into_ref","into_ref","max_encoded_len","max_encoded_len","pallet","set_account_block","set_account_limit","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_user_stake","vzip","vzip","withdraw","BlockNumberToBalance","Blocks","Call","Config","Currency","Deposit","Epoch","Error","EscrowRewards","Event","IncorrectPercent","InputAmountZero","InsufficientFunds","Limits","LockAmountTooLow","LockAmountZero","LockFound","LockHasExpired","LockNotExpired","LockNotFound","Locked","MaxPeriod","Module","NotSupported","Pallet","PointHistory","Reserved","RuntimeEvent","SlopeChanges","Span","UnlockHeightMustIncrease","UnlockHeightNotInTheFuture","UnlockHeightTooFarInTheFuture","UserPointEpoch","UserPointHistory","WeightInfo","Withdraw","__clone_box","__clone_box","__clone_box","balance_at","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","can_reserve","can_slash","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create_lock","create_lock","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_creating","deposit_into_existing","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","encode_to","ensure_can_withdraw","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","free_balance","free_stakable","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","increase_amount","increase_amount","increase_unlock_height","increase_unlock_height","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","issue","locked_balance","make_free_balance_be","minimum_balance","module_name","name","new_call_variant_create_lock","new_call_variant_increase_amount","new_call_variant_increase_unlock_height","new_call_variant_set_account_block","new_call_variant_set_account_limit","new_call_variant_update_user_stake","new_call_variant_withdraw","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","repatriate_reserved","reserve","reserved_balance","reserved_balance","round_height_and_deposit_for","set_account_block","set_account_block","set_account_limit","set_account_limit","size_hint","size_hint","size_hint","slash","slash_reserved","storage_info","storage_types","supply_at","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_balance","total_issuance","total_supply","transfer","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unreserve","update_user_stake","update_user_stake","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw","withdraw","withdraw","amount","amount","end","start","target_user","unlock_height","unlock_height","who","who","amount","amount","unlock_height","who","who","create_lock","increase_amount","increase_unlock_height","set_account_block","set_account_limit","update_user_stake","withdraw","Blocks","Epoch","Limits","Locked","PointHistory","Reserved","SlopeChanges","UserPointEpoch","UserPointHistory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"escrow"],[95,"escrow::pallet"],[356,"escrow::pallet::Call"],[365,"escrow::pallet::Event"],[370,"escrow::pallet::dispatchables"],[377,"escrow::pallet::storage_types"]],"d":["","","Weight functions needed for escrow.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the block number into a balance.","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The currency trait.","","Storage type is <code>StorageValue</code> with value type <code>T :: Nonce</code>.","The <code>Error</code> enum of this pallet.","Escrow reward pool.","The <code>Event</code> enum of this pallet","Incorrect Percent","Input amount must be non-zero.","Insufficient account balance.","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","Lock amount is too large.","Lock amount must be non-zero.","Lock already exists.","Previous lock has expired.","Previous lock has not expired.","Lock does not exist.","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","The maximum time for locks.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Not supported.","The <code>Pallet</code> struct, the main type that implements traits …","Storage type is <code>StorageMap</code> with key type <code>T :: Nonce</code> and …","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","The overarching event type.","Storage type is <code>StorageMap</code> with key type …","All future times are rounded by this.","Unlock height should be greater than lock.","Unlock height is not in the future.","Unlock height is greater than max period.","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","Storage type is <code>StorageDoubleMap</code> with key1 type T :: …","Weight information for the extrinsics in this module.","","","","","vKINT/vINTR balance at given height","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::create_lock</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","See <code>Pallet::increase_amount</code>.","","See <code>Pallet::increase_unlock_height</code>.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An auto-generated getter for <code>Locked</code>.","","","","","Create a call with the variant <code>create_lock</code>.","Create a call with the variant <code>increase_amount</code>.","Create a call with the variant <code>increase_unlock_height</code>.","Create a call with the variant <code>set_account_block</code>.","Create a call with the variant <code>set_account_limit</code>.","Create a call with the variant <code>update_user_stake</code>.","Create a call with the variant <code>withdraw</code>.","","","","","","","","","","An auto-generated getter for <code>Reserved</code>.","","RPC helper","","See <code>Pallet::set_account_block</code>.","","See <code>Pallet::set_account_limit</code>.","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the stake amount for a user.","See <code>Pallet::update_user_stake</code>.","","","","","","","","","See <code>Pallet::withdraw</code>.","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Update the stake amount for a user.","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,7,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,51,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,6,7,6,6,7,7,6,6,7,7,6,7,51,51,6,7,6,7,6,7,6,7,6,7,0,51,51,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,51,6,7,51,24,0,0,0,24,28,0,0,24,0,34,34,34,0,34,34,34,34,34,34,0,24,0,34,0,0,0,24,0,24,34,34,34,0,0,24,28,28,29,30,29,28,34,30,28,34,30,28,34,30,28,34,29,30,28,34,29,30,29,29,29,28,29,30,28,29,30,29,29,29,30,29,28,34,30,28,34,30,28,34,30,28,34,30,29,29,28,34,29,30,28,34,29,30,30,0,28,34,29,30,28,34,30,29,28,29,30,28,28,29,29,30,30,28,34,29,30,29,29,28,34,29,30,28,28,34,34,29,29,30,30,28,28,34,34,29,29,30,30,30,30,30,30,30,28,34,30,29,30,29,30,29,29,28,34,29,30,29,28,34,29,30,28,34,29,30,28,34,29,30,29,29,29,29,29,29,30,30,30,30,30,30,30,29,29,29,29,29,29,29,29,29,29,29,29,29,30,29,30,28,34,30,29,29,29,0,29,28,34,30,28,29,30,29,29,29,29,28,34,29,30,28,34,29,30,28,34,30,28,34,30,28,34,30,28,34,29,30,28,34,30,28,34,29,30,28,34,29,30,29,29,30,28,34,29,30,29,34,29,29,30,52,53,54,54,55,52,56,54,57,58,59,58,58,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68,60,61,62,63,64,65,66,67,68],"f":[0,0,0,[1],[1],0,[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5,5]]],[[6,[5,5]]]],[[[7,[5,5]]],[[7,[5,5]]]],[[]],[[]],[[],8],[9,[[12,[[6,[10,10]],11]]]],[9,[[12,[[7,[10,10]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[],[[6,[14,14]]]],[[],[[7,[14,14]]]],[15],[15],[15],[15],[15],[15],[[[6,[16,16]],[0,[17,18]]]],[[[7,[16,16]],[0,[17,18]]]],[[[6,[19,19]],20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],8],[[],8],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],0,[[],8],[[],8],[[[6,[16,16]]],15],[[[7,[16,16]]],15],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],22],[[],22],[[],23],[[],23],[[]],[[]],[[]],[[]],[[],8],[[]],[[]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[26,[[25,[24]]]]]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[[28,[24]]],[[28,[24]]]],[29,29],[[[30,[24]]],[[30,[24]]]],[[]],[[]],[[]],[[],15],[[],31],[[[32,[24]],[25,[24]]],33],0,[[]],[9,[[12,[[28,[24]],11]]]],[9,[[12,[34,11]]]],[9,[[12,[[30,[24]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[]],[[],[[12,[35]]]],[15],[15],[15],[15],[15],[15],[15],[15],[[[30,[24]]],36],0,[15],[15],[15],[15],[[[28,[24]],[0,[17,18]]]],[[34,[0,[17,18]]]],[[[30,[24]],[0,[17,18]]]],[37,38],[[[28,[24]],[28,[24]]],27],[[29,29],27],[[[30,[24]],[30,[24]]],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[[28,[24]],20],21],[[[34,[24]],20],21],[[29,20],21],[[[30,[24]],20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[24]]],2],[[]],[[[30,[24]]],39],[[]],[[[30,[24]]],40],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[[32,[24]]],33],0,[[[32,[24]],[25,[24]]],33],0,[[],15],[[],[[4,[41]]]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,[[7,[[25,[24]]]]]],[[],43],[[]],[[],39],[[],39],[[[25,[24]]],[[30,[24]]]],[[],[[30,[24]]]],[[[25,[24]]],[[30,[24]]]],[[],[[30,[24]]]],[[[25,[24]],[25,[24]]],[[30,[24]]]],[[],[[30,[24]]]],[[],[[30,[24]]]],[[[25,[24]]]],[[],44],[[[25,[24]]]],[[]],[[[25,[24]],8],8],[[[25,[24]]],8],[[],8],[45,[[12,[35]]]],[[],38],[42],[[]],[[[25,[24]]],38],[[[32,[24]]],36],0,[[[32,[24]],[25,[24]],[25,[24]]],36],0,[[[28,[24]]],15],[34,15],[[[30,[24]]],15],[[]],[[]],[[],[[4,[46]]]],0,[[[6,[[25,[24]]]],[25,[24]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[[26,[[25,[24]]]]]],[47,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[24]]],33],0,[[]],[[]],[[]],[[]],[[],[[4,[48]]]],[8,[[50,[49]]]],[[[32,[24]]],33],[[37,47],[[12,[35]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[25,[24]]]],[[]],[[[25,[24]]]],[[]],[[[25,[24]],[25,[24]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[117],"p":[[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Clone"],[3,"Point"],[3,"LockedBalance"],[3,"Weight"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Type"],[8,"Config"],[6,"BlockNumberFor"],[4,"Option"],[15,"bool"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[6,"OriginFor"],[6,"DispatchResult"],[4,"Error"],[4,"DispatchError"],[6,"DispatchResultWithPostInfo"],[3,"WithdrawReasons"],[6,"DispatchResult"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[8,"EncodeLike"],[4,"SignedImbalance"],[3,"StorageVersion"],[4,"BalanceStatus"],[3,"StorageInfo"],[4,"ExistenceRequirement"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"create_lock"],[13,"increase_amount"],[13,"set_account_limit"],[13,"update_user_stake"],[13,"increase_unlock_height"],[13,"set_account_block"],[13,"Deposit"],[13,"Withdraw"],[3,"Reserved"],[3,"Locked"],[3,"Epoch"],[3,"PointHistory"],[3,"UserPointHistory"],[3,"UserPointEpoch"],[3,"SlopeChanges"],[3,"Limits"],[3,"Blocks"]]},\
"escrow_rpc":{"doc":"RPC interface for the Escrow Module.","t":"DIIIKLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLL","n":["Escrow","EscrowApiClient","EscrowApiServer","EscrowRuntimeApi","balance_at","balance_at","balance_at","balance_at","borrow","borrow_mut","deref","deref_mut","drop","free_stakable","free_stakable","free_stakable","free_stakable","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","into_rpc","new","total_supply","total_supply","total_supply","total_supply","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"escrow_rpc"]],"d":["A struct that implements the [<code>EscrowApi</code>].","Client implementation for the <code>EscrowApi</code> RPC API.","Server trait implementation for the <code>EscrowApi</code> RPC API.","","vkint/vintr balance","Get a given user’s escrowed balance","","vkint/vintr balance","","","","","","amount of kint/intr that use can lock, taking into …","amount of kint/intr that use can lock, taking into …","","amount of kint/intr that use can lock, taking into …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Collects all the methods and subscriptions defined in the …","Create new <code>Escrow</code> with the given reference to the client.","","Get the total voting supply in the system","","","","","","","",""],"i":[0,0,0,0,22,23,11,24,11,11,11,11,11,22,23,11,24,11,11,11,11,11,11,11,11,11,22,11,22,23,11,24,11,11,11,11,11,11],"f":[0,0,0,0,[[1,1],[[3,[2]]]],[1,[[5,[2,4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,[1,[12]],1],[[3,[[2,[[0,[12,13,14]]]]]]]],[[7,1,1],[[17,[[16,[15]]]]]],[[]],[[]],[18],[18],[18],[1,[[3,[2]]]],[[],[[5,[2,4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],12,1],[[3,[[2,[[0,[12,13,14]]]]]]]],[[7,1],[[17,[[16,[15]]]]]],[[]],[[]],[[]],[[]],[[]],[[],18],[[]],[[]],[[]],[[],19],[20,11],[[1,1],[[3,[2]]]],[1,[[5,[2,4]]]],[[[11,[[0,[6,7,[9,[8]],[10,[8]]]],8]],[1,[12]],1],[[3,[[2,[[0,[12,13,14]]]]]]]],[[7,1,1],[[17,[[16,[15]]]]]],[[],5],[[],5],[[],21],[[]],[[]],[[]]],"c":[],"p":[[4,"Option"],[3,"BalanceWrapper"],[6,"RpcResult"],[4,"ApiError"],[4,"Result"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Escrow"],[8,"Codec"],[8,"MaybeDisplay"],[8,"MaybeFromStr"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[8,"EscrowApiServer"],[8,"EscrowRuntimeApi"],[8,"EscrowApiClient"]]},\
"escrow_rpc_runtime_api":{"doc":"Runtime API definition for the Escrow Module.","t":"ILLL","n":["EscrowApi","balance_at","free_stakable","total_supply"],"q":[[0,"escrow_rpc_runtime_api"]],"d":["","Get a given user’s escrowed balance","amount of kint/intr that use can lock, taking into …","Get the total voting supply in the system"],"i":[0,5,5,5],"f":[0,[1,[[4,[2,3]]]],[[],[[4,[2,3]]]],[1,[[4,[2,3]]]]],"c":[],"p":[[4,"Option"],[3,"BalanceWrapper"],[4,"ApiError"],[4,"Result"],[8,"EscrowApi"]]},\
"farming":{"doc":"Farming Module","t":"DILLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKAMMKLLLLLLLLLLLLLLKLKNEIEEQNGQDNNQQNGQQQLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLNMMMMMMMMMMMMMMMMMMMMMMMMFFFFFDLLLLLLLLLLLLLLLLLLLL","n":["RewardSchedule","WeightInfo","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","claim","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deposit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","is_clear","max_encoded_len","on_initialize","pallet","per_period","period_count","remove_reward_schedule","size_hint","take","to_keyed_vec","to_owned","total","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","update_reward_schedule","vzip","withdraw","BadRewardLength","Call","Config","Error","Event","FarmingPalletId","InsufficientStake","Module","MultiCurrency","Pallet","RewardClaimed","RewardDistributed","RewardPeriod","RewardPools","RewardScheduleUpdated","RewardSchedules","RuntimeEvent","TreasuryAccountId","WeightInfo","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","claim","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit","deposit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_claim","new_call_variant_deposit","new_call_variant_remove_reward_schedule","new_call_variant_update_reward_schedule","new_call_variant_withdraw","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","pool_account_id","remove_reward_schedule","remove_reward_schedule","reward_schedules","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_rewards","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_reward_schedule","update_reward_schedule","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw","withdraw","amount","amount","length_rewards","length_rewards","period_count","pool_currency_id","pool_currency_id","pool_currency_id","pool_currency_id","pool_currency_id","reward_currency_id","reward_currency_id","reward_currency_id","account_id","amount","amount","per_period","period_count","pool_currency_id","pool_currency_id","pool_currency_id","reward_currency_id","reward_currency_id","reward_currency_id","claim","deposit","remove_reward_schedule","update_reward_schedule","withdraw","RewardSchedules","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"farming"],[60,"farming::pallet"],[274,"farming::pallet::Call"],[287,"farming::pallet::Event"],[298,"farming::pallet::dispatchables"],[303,"farming::pallet::storage_types"]],"d":["","Weight functions needed for farming.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Amount of tokens to release","Number of periods remaining","","","Take the next reward and decrement the period count","","","Returns total amount to distribute, <code>None</code> if calculation …","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","The farming pallet id, used for deriving pool accounts.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Currency handler to transfer tokens.","The <code>Pallet</code> struct, the main type that implements traits …","","","The period to accrue rewards.","Reward pools to track stake.","","Storage type is <code>StorageDoubleMap</code> with key1 type …","The overarching event type.","The treasury account id for funding pools.","Weight information for the extrinsics.","","","","","","","","","","","","","","","","","","","","","Withdraw any accrued rewards from the reward pool","See <code>Pallet::claim</code>.","","","","","","","","","","","","","","","","","","","","","","Stake all pool tokens in the reward pool","See <code>Pallet::deposit</code>.","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant <code>claim</code>.","Create a call with the variant <code>deposit</code>.","Create a call with the variant <code>remove_reward_schedule</code>.","Create a call with the variant <code>update_reward_schedule</code>.","Create a call with the variant <code>withdraw</code>.","","","","","","","","","","Explicitly remove a reward schedule and transfer any …","See <code>Pallet::remove_reward_schedule</code>.","An auto-generated getter for <code>RewardSchedules</code>.","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create or overwrite the reward schedule, if a reward …","See <code>Pallet::update_reward_schedule</code>.","","","","","","","Unstake the pool tokens from the reward pool","See <code>Pallet::withdraw</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Withdraw any accrued rewards from the reward pool","Stake all pool tokens in the reward pool","Explicitly remove a reward schedule and transfer any …","Create or overwrite the reward schedule, if a reward …","Unstake the pool tokens from the reward pool","Warning: Doc-Only","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,8,8,8,8,8,8,47,8,8,8,8,8,8,8,8,47,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,47,0,8,8,47,8,8,8,8,8,8,8,8,8,8,8,8,8,8,47,8,47,35,0,0,0,0,28,35,0,28,0,31,31,28,28,31,0,28,28,28,31,32,33,31,35,33,31,35,33,31,35,33,31,35,32,33,31,35,32,33,32,33,31,32,33,31,32,33,32,32,32,31,35,33,31,35,33,31,35,33,31,35,33,32,33,31,35,32,33,31,35,32,33,33,0,31,35,32,33,31,35,33,31,32,33,31,31,32,32,33,33,31,35,32,33,31,35,32,33,31,31,35,35,32,32,33,33,31,31,35,35,32,32,33,33,33,33,33,33,33,31,35,33,32,32,31,35,32,33,32,31,35,32,33,31,35,32,33,31,35,32,33,32,32,33,33,33,33,33,32,32,32,32,32,32,32,32,32,32,33,32,31,35,33,32,0,31,35,33,31,32,33,32,31,35,32,33,31,35,32,33,31,35,33,31,35,33,31,35,33,31,35,32,33,31,35,33,31,35,32,33,31,35,32,33,32,33,31,35,32,33,32,35,32,33,48,49,50,49,48,48,51,50,49,52,48,51,52,53,54,53,55,55,55,54,53,55,54,53,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":[0,0,[1],[[]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[],5],[[]],[[[8,[[0,[6,7]]]]],[[8,[[0,[6,7]]]]]],[[]],[9,[[12,[[8,[[0,[10,7]]]],11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[[13,9],[[12,[11]]]],[[],[[8,[[0,[14,7]]]]]],[13,5],[15],[15],[15],[[[8,[[0,[10,7]]]],[0,[16,17]]]],[[[8,[[0,[18,7]]]],[8,[[0,[18,7]]]]],19],[[],19],[[],19],[[[8,[[0,[20,7]]]],21],22],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],15],[[]],[[]],[[]],[[],19],[[],15],[13,5],0,0,0,[[],5],[[[8,[[0,[10,7]]]]],15],[[[8,[[0,[23,7,24]]]]],[[25,[[0,[23,7,24]]]]]],[[],[[4,[2,3]]]],[[]],[[[8,[[0,[23,7,24]]]]],[[25,[[0,[23,7,24]]]]]],[[],12],[[],12],[[]],[[]],[[],[[4,[2,3]]]],[[],26],[[],27],[[]],[[]],[[],5],[[]],[13,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[28]]],30],0,[[[31,[28]]],[[31,[28]]]],[32,32],[[[33,[28]]],[[33,[28]]]],[[]],[[]],[[]],[[],15],[[],34],[[]],[9,[[12,[[31,[28]],11]]]],[9,[[12,[35,11]]]],[9,[[12,[[33,[28]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[13,[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[13,9],[[12,[11]]]],[[[29,[28]],13],30],0,[15],[15],[15],[15],[15],[15],[15],[15],[[[33,[28]]],36],0,[15],[15],[15],[15],[[[31,[28]],[0,[16,17]]]],[[35,[0,[16,17]]]],[[[33,[28]],[0,[16,17]]]],[[[31,[28]],[31,[28]]],19],[[32,32],19],[[[33,[28]],[33,[28]]],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[[31,[28]],21],22],[[[35,[28]],21],22],[[32,21],22],[[[33,[28]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[28]]],2],[[]],[[[33,[28]]],37],[[]],[[[33,[28]]],38],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],15],[[],[[4,[39]]]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],[[33,[28]]]],[13,[[33,[28]]]],[[],[[33,[28]]]],[13,[[33,[28]]]],[13,[[33,[28]]]],[[[40,[28]]]],[[],41],[[[40,[28]]]],[[]],[[[40,[28]],5],5],[[[40,[28]]],5],[[[40,[28]]],5],[[],5],[[]],[[[29,[28]]],36],0,[[42,42],8],[[[31,[28]]],15],[35,15],[[[33,[28]]],15],[[],[[4,[43]]]],0,[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[28]],13],30],0,[[]],[[]],[[]],[[]],[[],[[4,[44]]]],[5,[[46,[45]]]],[[[29,[28]],13],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[13],[[]],[13],[13],0,[[]],[[]],[15],[15],[15],[[]],[[]],[[]],[[]],[[]],[[],15],[[]],[[]],[[]],[[],12],[[],12],[[],26],[[]],[[]],[[]]],"c":[67],"p":[[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Weight"],[8,"Clone"],[8,"MaxEncodedLen"],[3,"RewardSchedule"],[8,"Input"],[8,"HasCompact"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"AtLeast32Bit"],[8,"Copy"],[4,"Option"],[3,"TypeId"],[3,"Type"],[8,"Config"],[6,"OriginFor"],[6,"DispatchResult"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[8,"EncodeLike"],[3,"StorageInfo"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"update_reward_schedule"],[13,"withdraw"],[13,"deposit"],[13,"remove_reward_schedule"],[13,"claim"],[13,"RewardClaimed"],[13,"RewardDistributed"],[13,"RewardScheduleUpdated"],[3,"RewardSchedules"]]},\
"fee":{"doc":"Fee Module","t":"IAKKKKKKKAKNEQIEQDGGQGQQDGGGGQQNQQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLMLLMLMLMLLNLNLNLNLNLNLNLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNMMMMMMMMMMFFFFFFFFDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["WeightInfo","pallet","set_commission","set_issue_fee","set_issue_griefing_collateral","set_premium_redeem_fee","set_punishment_fee","set_redeem_fee","set_replace_griefing_collateral","types","withdraw_rewards","AboveMaxExpectedValue","Call","CapacityRewards","Config","Error","FeePalletId","GenesisConfig","IssueFee","IssueGriefingCollateral","MaxExpectedValue","Module","NominationApi","OnSweep","Pallet","PremiumRedeemFee","PunishmentFee","RedeemFee","ReplaceGriefingCollateral","SignedFixedPoint","SignedInner","TryIntoIntError","VaultRewards","VaultStaking","WeightInfo","__clone_box","__clone_box","assimilate_storage","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","compute_vault_rewards","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","distribute_all_vault_rewards","distribute_rewards","distribute_vault_rewards","drop","drop","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","fee_pool_account_id","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_issue_fee","get_issue_griefing_collateral","get_max_expected_value","get_premium_redeem_fee","get_punishment_fee","get_redeem_fee","get_redeem_fee_value","get_replace_griefing_collateral","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","issue_fee","issue_fee","issue_griefing_collateral","issue_griefing_collateral","module_name","name","new_call_variant_set_commission","new_call_variant_set_issue_fee","new_call_variant_set_issue_griefing_collateral","new_call_variant_set_premium_redeem_fee","new_call_variant_set_punishment_fee","new_call_variant_set_redeem_fee","new_call_variant_set_replace_griefing_collateral","new_call_variant_withdraw_rewards","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","premium_redeem_fee","premium_redeem_fee","premium_redeem_reward_rate","punishment_fee","punishment_fee","redeem_fee","redeem_fee","replace_griefing_collateral","replace_griefing_collateral","serialize","set_commission","set_commission","set_issue_fee","set_issue_fee","set_issue_griefing_collateral","set_issue_griefing_collateral","set_premium_redeem_fee","set_premium_redeem_fee","set_punishment_fee","set_punishment_fee","set_redeem_fee","set_redeem_fee","set_replace_griefing_collateral","set_replace_griefing_collateral","size_hint","size_hint","storage_info","storage_types","storage_version","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_rewards","withdraw_rewards","commission","currencies","fee","fee","fee","fee","griefing_collateral","griefing_collateral","index","vault_id","set_commission","set_issue_fee","set_issue_griefing_collateral","set_premium_redeem_fee","set_punishment_fee","set_redeem_fee","set_replace_griefing_collateral","withdraw_rewards","Commission","IssueFee","IssueGriefingCollateral","PremiumRedeemFee","PunishmentFee","RedeemFee","ReplaceGriefingCollateral","StorageVersion","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","UnsignedFixedPoint","V0","Version","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","max_encoded_len","size_hint","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"fee"],[11,"fee::pallet"],[244,"fee::pallet::Call"],[254,"fee::pallet::dispatchables"],[262,"fee::pallet::storage_types"],[430,"fee::types"]],"d":["Weight functions needed for fee.","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","Value exceeds the expected upper bound for storage fields …","Contains a variant per dispatchable extrinsic that this …","Capacity reward pool.","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The fee module id, used for deriving its sovereign account …","Can be used to configure the genesis state of this pallet.","Issue","Default griefing collateral (e.g. DOT/KSM) as a percentage …","Maximum expected value to set the storage fields to.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Api of the nomination pallet; used to make sure that …","Handler to transfer undistributed rewards.","The <code>Pallet</code> struct, the main type that implements traits …","Vault Registry","Fee that a Vault has to pay if it fails to execute redeem …","Redeem","Replace","Signed fixed point type.","The <code>Inner</code> type of the <code>SignedFixedPoint</code>.","Unable to convert value.","Vault reward pool.","Vault staking pool.","Weight information for the extrinsics in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","Distribute rewards to participants.","","","","","","","","","","","","","","The account ID of the fee pool.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calculate the required issue fee in tokens.","Calculate the required issue griefing collateral.","","Calculate the premium redeem fee in collateral for a user …","Calculate punishment fee for a Vault that fails to execute …","Calculate the required redeem fee in tokens. Upon …","Get the fee share that users need to pay to redeem tokens.","Calculate the required replace griefing collateral.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","An auto-generated getter for <code>IssueFee</code>.","","An auto-generated getter for <code>IssueGriefingCollateral</code>.","","","","Create a call with the variant <code>set_commission</code>.","Create a call with the variant <code>set_issue_fee</code>.","Create a call with the variant …","Create a call with the variant <code>set_premium_redeem_fee</code>.","Create a call with the variant <code>set_punishment_fee</code>.","Create a call with the variant <code>set_redeem_fee</code>.","Create a call with the variant …","Create a call with the variant <code>withdraw_rewards</code>.","","","","","","","","An auto-generated getter for <code>PremiumRedeemFee</code>.","","Get the premium redeem reward rate.","An auto-generated getter for <code>PunishmentFee</code>.","","An auto-generated getter for <code>RedeemFee</code>.","","An auto-generated getter for <code>ReplaceGriefingCollateral</code>.","","","todo: proper weight","See <code>Pallet::set_commission</code>.","Changes the issue fee percentage (only executable by the …","See <code>Pallet::set_issue_fee</code>.","Changes the issue griefing collateral percentage (only …","See <code>Pallet::set_issue_griefing_collateral</code>.","Changes the premium redeem fee percentage (only executable …","See <code>Pallet::set_premium_redeem_fee</code>.","Changes the punishment fee percentage (only executable by …","See <code>Pallet::set_punishment_fee</code>.","Changes the redeem fee percentage (only executable by the …","See <code>Pallet::set_redeem_fee</code>.","Changes the replace griefing collateral percentage (only …","See <code>Pallet::set_replace_griefing_collateral</code>.","","","","Auto-generated docs-only module listing all (public and …","“ Build storage at V1 (requires default 0).“","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Withdraw all rewards from the <code>origin</code> account in the …","See <code>Pallet::withdraw_rewards</code>.","","","","","","","","","","","todo: proper weight","Changes the issue fee percentage (only executable by the …","Changes the issue griefing collateral percentage (only …","Changes the premium redeem fee percentage (only executable …","Changes the punishment fee percentage (only executable by …","Changes the redeem fee percentage (only executable by the …","Changes the replace griefing collateral percentage (only …","Withdraw all rewards from the <code>origin</code> account in the …","The fraction up rewards going straight to the vault …","Issue","Default griefing collateral (e.g. DOT/KSM) as a percentage …","Vault Registry","Fee that a Vault has to pay if it fails to execute redeem …","Redeem","Replace","Build storage at V1 (requires default 0).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initial version.","Storage version.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,48,48,48,48,48,48,48,0,48,20,0,3,0,0,3,0,0,0,3,0,3,3,0,0,0,0,0,3,3,20,3,3,3,11,12,4,20,12,20,12,20,12,20,4,11,12,20,4,11,12,4,11,12,11,12,11,11,11,11,20,12,20,12,20,12,20,12,4,20,4,11,12,20,4,11,12,4,12,0,11,11,11,20,4,11,12,20,12,11,12,11,11,12,12,11,20,11,12,20,4,11,12,20,20,4,4,11,11,12,12,20,20,4,4,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,20,12,11,11,20,4,11,12,11,20,4,11,12,20,4,11,12,20,4,11,12,11,4,11,4,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,4,11,11,4,11,4,11,4,4,11,12,11,12,11,12,11,12,11,12,11,12,11,12,20,12,11,0,11,20,12,11,12,20,4,11,12,20,4,11,12,20,12,20,12,20,12,20,4,11,12,20,12,20,4,11,12,20,4,11,12,20,4,11,12,11,20,11,12,49,49,50,51,52,53,54,55,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,0,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42],"f":[0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[[[4,[3]],5],[[7,[6]]]],[[]],[[]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]]],[11,11],[[[12,[3]]],[[12,[3]]]],[[]],[[]],[[[14,[[13,[3]]]],[13,[3]]],[[7,[[15,[3]],16]]]],[[],17],[[],18],[[]],[19,[[7,[20,21]]]],[19,[[7,[[12,[3]],21]]]],[[],[[7,[21]]]],[[],[[7,[21]]]],[22,[[7,[21]]]],[22,[[7,[21]]]],[[22,19],[[7,[21]]]],[[22,19],[[7,[21]]]],[[],[[4,[3]]]],[17],[17],[17],[17],[17],[17],[17],[17],[23,[[7,[[4,[3]]]]]],[[[12,[3]]],24],0,[[[14,[[13,[3]]]]],25],[[[15,[3]]],25],[[[14,[[13,[3]]]],[13,[3]]],25],[17],[17],[17],[17],[[20,[0,[26,27]]]],[[[12,[3]],[0,[26,27]]]],[[11,11],28],[[[12,[3]],[12,[3]]],28],[[],28],[[],28],[[],28],[[],28],[[]],[[[20,[3]],29],30],[[11,29],30],[[[12,[3]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[3]]],8],[[]],[[[12,[3]]],31],[[]],[[[12,[3]]],32],[[[15,[3]]],[[7,[[15,[3]],16]]]],[[[15,[3]]],[[7,[[15,[3]],16]]]],[[],[[33,[3]]]],[[[15,[3]]],[[7,[[15,[3]],16]]]],[[[15,[3]]],[[7,[[15,[3]],16]]]],[[[15,[3]]],[[7,[[15,[3]],16]]]],[[],[[33,[3]]]],[[[15,[3]]],[[7,[[15,[3]],16]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],17],[[],[[10,[34]]]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[33,[3]]]],0,[[],[[33,[3]]]],0,[[],31],[[],31],[[[35,[[13,[3]]]],[33,[3]]],[[12,[3]]]],[[[33,[3]]],[[12,[3]]]],[[[33,[3]]],[[12,[3]]]],[[[33,[3]]],[[12,[3]]]],[[[33,[3]]],[[12,[3]]]],[[[33,[3]]],[[12,[3]]]],[[[33,[3]]],[[12,[3]]]],[[[14,[[13,[3]]]],36],[[12,[3]]]],[[[37,[3]]]],[[],38],[[[37,[3]]]],[[]],[[[37,[3]],1],1],[[[37,[3]]],1],[[],1],[[],[[33,[3]]]],0,[[],[[33,[3]]]],[[],[[33,[3]]]],0,[[],[[33,[3]]]],0,[[],[[33,[3]]]],0,[[[4,[3]],39],7],[[[40,[3]],[35,[[13,[3]]]],[33,[3]]],24],0,[[[40,[3]],[33,[3]]],24],0,[[[40,[3]],[33,[3]]],24],0,[[[40,[3]],[33,[3]]],24],0,[[[40,[3]],[33,[3]]],24],0,[[[40,[3]],[33,[3]]],24],0,[[[40,[3]],[33,[3]]],24],0,[20,17],[[[12,[3]]],17],[[],[[10,[41]]]],0,[[],42],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],43],[[],43],[[],43],[[],43],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[45]]]],[1,[[47,[46]]]],[[[40,[3]],[14,[[13,[3]]]],36],24],0,0,0,0,0,0,0,0,0,0,0,[[[35,[[13,[3]]]],[33,[3]]]],[[[33,[3]]]],[[[33,[3]]]],[[[33,[3]]]],[[[33,[3]]]],[[[33,[3]]]],[[[33,[3]]]],[[[14,[[13,[3]]]],36]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[],[[10,[8,9]]]],[[]],[[]],[[]],[19,[[7,[42,21]]]],[[],[[7,[21]]]],[22,[[7,[21]]]],[[22,19],[[7,[21]]]],[17],[17],[17],[[42,[0,[26,27]]]],[[42,42],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[],[[10,[8,9]]]],[[],17],[[]],[[]],[[]],[[],17],[42,17],[[],[[10,[8,9]]]],[[],7],[[],7],[[]],[[]],[[],[[10,[8,9]]]],[[],43],[[],44],[[]],[[]],[[]]],"c":[21],"p":[[3,"Weight"],[3,"Private"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Call"],[6,"CurrencyId"],[3,"VaultId"],[3,"Amount"],[4,"DispatchError"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[4,"Error"],[3,"Error"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[6,"DispatchResult"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[6,"UnsignedFixedPoint"],[3,"PalletInfoData"],[3,"VaultCurrencyPair"],[4,"Option"],[6,"BlockNumberFor"],[3,"StorageVersion"],[8,"Serializer"],[6,"OriginFor"],[3,"StorageInfo"],[4,"Version"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"set_commission"],[13,"set_issue_fee"],[13,"set_redeem_fee"],[13,"set_premium_redeem_fee"],[13,"set_punishment_fee"],[13,"set_issue_griefing_collateral"],[13,"set_replace_griefing_collateral"],[13,"withdraw_rewards"],[3,"IssueFee"],[3,"IssueGriefingCollateral"],[3,"RedeemFee"],[3,"PremiumRedeemFee"],[3,"PunishmentFee"],[3,"ReplaceGriefingCollateral"],[3,"StorageVersion"],[3,"Commission"]]},\
"interbtc_parachain":{"doc":"","t":"AAGDDCCCCCCRLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLAMMMMLLAALLLLLLLLLLLLLLLLLLLLLLLGGDRLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLGGDRLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLFFFFIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLL","n":["chain_spec","service","DummyChainSpec","Extensions","ExtensionsFork","InterlayChainSpec","InterlayDevChainSpec","InterlayDevGenesisExt","KintsugiChainSpec","KintsugiDevChainSpec","KintsugiDevGenesisExt","REVERT_BYTECODE","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","combine_with","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","endowed_evm_accounts","eq","eq","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","get","get","get_any","get_any","get_any","get_any","get_any_mut","get_any_mut","get_any_mut","get_any_mut","init","init","interlay","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","kintsugi","para_id","para_id","relay_chain","relay_chain","serialize","serialize","testnet_interlay","testnet_kintsugi","to_base","to_fork","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_get","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","InterlayChainSpec","InterlayDevChainSpec","InterlayDevGenesisExt","PARA_ID","as_any","as_any_mut","assimilate_storage","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","from_mut","from_mut","from_ref","from_ref","from_subset","init","interlay_dev_config","interlay_genesis","interlay_mainnet_config","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_in_subset","serialize","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","KintsugiChainSpec","KintsugiDevChainSpec","KintsugiDevGenesisExt","PARA_ID","as_any","as_any_mut","assimilate_storage","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","from_mut","from_mut","from_ref","from_ref","from_subset","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_in_subset","kintsugi_dev_config","kintsugi_genesis","kintsugi_mainnet_config","kintsugi_properties","serialize","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","staging_mainnet_config","development_config","local_config","staging_mainnet_config","BaseRuntimeApiCollection","InterlayRuntimeExecutor","KintsugiRuntimeExecutor","RuntimeApiCollection","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","dispatch","dispatch","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","native_version","native_version","new_partial","start_instant","start_node","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"interbtc_parachain"],[2,"interbtc_parachain::chain_spec"],[117,"interbtc_parachain::chain_spec::interlay"],[160,"interbtc_parachain::chain_spec::kintsugi"],[204,"interbtc_parachain::chain_spec::testnet_interlay"],[205,"interbtc_parachain::chain_spec::testnet_kintsugi"],[208,"interbtc_parachain::service"]],"d":["","","","The extensions for the [<code>ChainSpec</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The id of the Parachain.","","The relay chain of the Parachain.","","","","","","","","","","","","","","","Try to get the extension from the given <code>ChainSpec</code>.","","","","","","","","","","","","","Specialized <code>ChainSpec</code> for the interlay parachain runtime.","Specialized <code>ChainSpec</code> for interlay development.","Extension for the dev genesis config to support a custom …","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Specialized <code>ChainSpec</code> for the kintsugi parachain runtime.","Specialized <code>ChainSpec</code> for kintsugi development.","Extension for the dev genesis config to support a custom …","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of APIs that every runtime must implement.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Starts a <code>ServiceBuilder</code> for a full service.","","Start a normal parachain node.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,4,3,4,3,4,0,3,4,3,4,3,4,3,3,4,4,3,3,4,4,3,4,3,4,3,3,4,4,3,3,4,4,3,4,0,3,4,3,3,4,4,3,3,4,4,3,3,4,4,3,4,3,4,3,4,0,3,4,3,4,3,4,0,0,3,4,3,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,54,55,55,54,54,55,55,54,55,54,55,54,55,54,54,55,55,54,54,55,55,54,54,55,55,54,55,54,55,54,55,54,55,0,0,0,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[[3,3]],[5],[5],[5],[5],[6,[[7,[3]]]],[6,[[7,[4]]]],[5],[5],[[],8],[[3,3],9],[[4,4],9],[[3,10],11],[[4,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,12],[4,12],[13,2],[[3,13],2],[13,2],[[4,13],2],[[3,13],2],[13,2],[13,2],[[4,13],2],[[],5],[[],5],0,[[]],[[]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],0,0,0,0,0,[[3,18],7],[[4,18],7],0,0,[3,12],[4],[[]],[[]],[[],12],[[],12],[[]],[[]],[[],7],[[],7],[19,[[12,[4]]]],[[],7],[[],7],[[],13],[[],13],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],2],[[],2],[[21,22],[[7,[23]]]],[[]],[[]],[5],[5],[6,[[7,[21]]]],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[9,24],[[8,8,[8,[25]],8,[12,[25]],26,27,9],28],[[],29],[[]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[[]],[[]],[[],9],[[21,18],7],[[],12],[[]],[[],7],[[],7],[[],13],[[],20],[[]],[[]],[[]],0,0,0,0,[[],2],[[],2],[[30,22],[[7,[23]]]],[[]],[[]],[5],[5],[6,[[7,[30]]]],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[[]],[[]],[[],9],[9,31],[[8,8,[8,[25]],8,[12,[25]],26,27,9],32],[[],33],[[],[[35,[23,34]]]],[[30,18],7],[[],12],[[]],[[],7],[[],7],[[],13],[[],20],[[]],[[]],[[]],[9,29],[[26,9],31],[26,33],[9,33],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[20,[[12,[[8,[36]]]]]],[20,[[12,[[8,[36]]]]]],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[[[15,[14]]],[[15,[2,14]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[17,[[17,[2]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],37],[[],37],0,0,0,[[],12],[[],12],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],13],[[],13],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"ExtensionsFork"],[3,"Extensions"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"Vec"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"TypeId"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Serializer"],[8,"ChainSpec"],[15,"str"],[3,"InterlayDevGenesisExt"],[3,"Storage"],[3,"String"],[6,"InterlayDevChainSpec"],[6,"AccountId"],[3,"Id"],[15,"u32"],[3,"RuntimeGenesisConfig"],[6,"InterlayChainSpec"],[3,"KintsugiDevGenesisExt"],[6,"KintsugiDevChainSpec"],[3,"RuntimeGenesisConfig"],[6,"KintsugiChainSpec"],[4,"Value"],[3,"Map"],[15,"u8"],[3,"NativeVersion"],[3,"Configuration"],[6,"Block"],[3,"NativeElseWasmExecutor"],[6,"TFullClient"],[8,"ConstructRuntimeApi"],[8,"Send"],[8,"Sync"],[8,"NativeExecutionDispatch"],[6,"TFullBackend"],[3,"LongestChain"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[4,"Error"],[6,"Result"],[3,"CollatorOptions"],[3,"InterlayRuntimeExecutor"],[3,"KintsugiRuntimeExecutor"]]},\
"interbtc_primitives":{"doc":"","t":"GRRRGIDGGEIDNRNNGDGGNRNRGNRNRNRNGGENGGGGGGRGGGGGNNGGNNEIGGDDLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLKLLLALLLLLAALLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLNNDENLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLMLLNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDENNLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMLLLLMLLLLMLLLLLLLLLLLLMLLNNNDELLMMLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLLL","n":["AccountId","BITCOIN_MAINNET","BITCOIN_REGTEST","BITCOIN_TESTNET","Balance","BalanceToFixedPoint","BalanceWrapper","Block","BlockNumber","CurrencyId","CurrencyInfo","CustomMetadata","DOT","DOT","ForeignAsset","ForeignAsset","ForeignAssetId","H256Le","Hash","Header","IBTC","IBTC","INTR","INTR","Index","KBTC","KBTC","KINT","KINT","KSM","KSM","LendToken","LendTokenId","Liquidity","LpToken","LpToken","Moment","Nonce","Price","PriceDetail","Rate","Ratio","SECONDS_PER_YEAR","Shortfall","Signature","SignedBalance","SignedFixedPoint","SignedInner","StableLpToken","StableLpToken","StablePoolId","Timestamp","Token","Token","TokenSymbol","TruncateFixedPointToInt","UnsignedFixedPoint","UnsignedInner","VaultCurrencyPair","VaultId","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_id","amount","as_u256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","coingecko_id","collateral","collateral_currency","currencies","decimals","decimals","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_as_type","decode_as_type","decode_as_type","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode_as_type_to","encode_as_type_to","encode_as_type_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee_per_second","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes_be","from_bytes_le","from_hex_be","from_hex_le","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_pair","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","get_hash","get_hash","get_info","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_visitor","into_visitor","into_visitor","is_clear","is_clear","is_lend_token","is_lp_token","is_zero","issue","join_lp_token","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","name","name","new","one","oracle","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","redeem","replace","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sha256d","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort","symbol","symbol","to_bytes_be","to_bytes_le","to_fixed","to_fixed","to_hex_be","to_hex_le","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_to_inner","truncate_to_inner","truncate_to_inner","try_format","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapped","wrapped_currency","zero","Cancelled","Completed","IssueRequest","IssueRequestStatus","Pending","__clone_box","__clone_box","amount","borrow","borrow","borrow_mut","borrow_mut","btc_address","btc_height","btc_public_key","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","fee","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","griefing_collateral","griefing_currency","init","init","into","into","max_encoded_len","max_encoded_len","opentime","period","requester","serialize","serialize","size_hint","size_hint","status","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vault","vzip","vzip","ExchangeRate","FeeEstimation","Key","__clone_box","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","deserialize","drop","encode_to","eq","equivalent","equivalent","fmt","from","from_mut","from_ref","init","into","max_encoded_len","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Completed","Pending","RedeemRequest","RedeemRequestStatus","Reimbursed","Retried","__clone_box","__clone_box","amount_btc","borrow","borrow","borrow_mut","borrow_mut","btc_address","btc_height","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fee","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","is_clear","max_encoded_len","max_encoded_len","opentime","period","premium","redeemer","serialize","serialize","size_hint","size_hint","status","to_keyed_vec","to_keyed_vec","to_owned","to_owned","transfer_fee_btc","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vault","vzip","vzip","Cancelled","Completed","Pending","ReplaceRequest","ReplaceRequestStatus","__clone_box","__clone_box","accept_time","amount","borrow","borrow","borrow_mut","borrow_mut","btc_address","btc_height","clear","clone","clone","clone_into","clone_into","collateral","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","griefing_collateral","init","init","into","into","is_clear","max_encoded_len","max_encoded_len","new_vault","old_vault","period","serialize","serialize","size_hint","size_hint","status","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"interbtc_primitives"],[432,"interbtc_primitives::issue"],[516,"interbtc_primitives::oracle"],[554,"interbtc_primitives::redeem"],[642,"interbtc_primitives::replace"]],"d":["Some way of identifying an account on the chain. We …","","","","Balance of an account.","","a wrapper around a balance, used in RPC to workaround a …","Opaque block type.","An index to a block.","","","","","","","","","Represents a bitcoin 32 bytes hash digest encoded in …","A hash of some data used by the chain.","Opaque block header type.","","","","","Index of a transaction in the chain.","","","","","","","","","Loans pallet types","","","An instant or duration in time.","Index of a transaction in the chain. 32-bit should be …","Loans pallet types","Loans pallet types","Loans pallet types","Loans pallet types","Loans pallet types","Loans pallet types","Alias to 512-bit hash when used in the context of a …","Signed version of Balance","The signed fixed point type.","The <code>Inner</code> type of the <code>SignedFixedPoint</code>.","","","","Loans pallet types","","","","","The unsigned fixed point type.","The <code>Inner</code> type of the <code>UnsignedFixedPoint</code>.","","","","","","","","","","","","Returns the value as a U256","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a H256Le from big endian bytes","Creates a H256Le from little endian bytes","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hashes the value a single time using sha256","","","","","","","","","","","","Returns the content of the H256Le encoded in big endian","Returns the content of the H256Le encoded in little endian","","","Returns the content of the H256Le encoded in big endian hex","Returns the content of the H256Le encoded in little endian …","","","","","","","","","","","","","","","","","take a fixed point number and turns it into the truncated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new H256Le hash equals to zero","payment was not received, vault may receive griefing …","payment was received","","","opened, but not yet executed or cancelled","","","the number of tokens that will be transferred to the user …","","","","","the vault’s Bitcoin deposit address","the highest recorded height in the BTC-Relay (at time of …","the vault’s Bitcoin public key (when this request was …","","","","","","","","","","","","","","","","","","","","","","","","","","the number of tokens that will be transferred to the fee …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","the collateral held for spam prevention","The currency used for the griefing collateral","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","the <em>active</em> block height when this request was opened","the issue period when this request was opened","the account issuing tokens","","","","","the status of this issue request","","","","","","","","","","","","","","","","","the vault associated with this issue request","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","successfully executed with a valid payment from the vault","opened, but not yet executed or cancelled","","","bool=true indicates that the vault minted tokens for the …","user received compensation, but is retrying the redeem …","","","total amount of BTC for the vault to send","","","","","the user’s Bitcoin address for payment verification","the highest recorded height in the BTC-Relay (at time of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","total redeem fees - taken from request amount","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","the <em>active</em> block height when this request was opened","the redeem period when this request was opened","premium redeem amount in collateral","the account redeeming tokens (for BTC)","","","","","the status of this redeem request","","","","","amount the vault should spend on the bitcoin inclusion fee …","","","","","","","","","","","","","the vault associated with this redeem request","","","payment was not received, new vault may receive griefing …","successfully executed with a valid payment from the old …","accepted, but not yet executed or cancelled","","","","","the <em>active</em> block height when this request was opened","the amount of tokens to be replaced","","","","","the Bitcoin address of the new vault","the highest recorded height in the BTC-Relay (at time of …","","","","","","additional collateral to cover replacement","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","the collateral held for spam prevention","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","the vault which is replacing the old vault","the vault which has requested to be replaced","the replace period when this request was opened","","","","","the status of this replace request","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,8,0,9,10,0,0,0,0,8,0,8,0,0,8,0,8,0,8,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,9,10,0,0,9,10,0,0,0,0,0,0,6,7,2,8,9,10,11,7,19,2,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,19,2,6,7,2,8,9,10,11,6,7,2,8,9,10,11,6,7,8,9,10,11,6,7,7,73,8,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,8,9,10,6,7,19,2,8,9,10,11,19,2,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,6,7,19,2,8,9,10,11,19,2,8,9,10,6,7,19,2,8,9,10,11,6,7,19,2,2,8,9,10,11,6,6,7,7,19,19,2,2,8,8,9,9,10,10,11,11,11,6,7,2,2,2,8,9,10,11,6,7,7,19,2,2,2,2,2,2,2,2,2,8,9,10,11,2,2,2,2,6,7,19,2,8,9,10,11,7,6,7,19,2,8,9,10,11,6,7,8,9,10,8,6,7,8,9,10,6,7,19,2,8,9,10,11,6,7,19,2,8,8,9,9,10,11,8,9,10,19,2,10,10,2,0,10,6,7,2,8,9,10,73,8,7,8,0,6,7,8,9,10,0,0,6,7,19,2,8,9,10,2,6,7,19,2,8,9,10,11,10,73,8,2,2,74,52,2,2,6,7,19,2,8,9,10,11,6,7,2,8,9,10,11,2,75,57,59,2,6,7,19,2,8,8,8,9,10,11,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,6,7,19,2,8,9,10,11,19,2,6,7,19,2,8,9,10,11,6,7,2,66,66,0,0,66,66,67,67,66,67,66,67,67,67,67,66,67,66,67,66,67,66,67,66,67,66,67,66,66,67,66,67,66,67,66,67,66,67,66,67,67,66,67,66,67,66,67,66,67,67,67,66,67,66,67,66,67,67,67,67,66,67,66,67,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,67,66,67,68,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,0,0,69,69,69,70,70,69,70,69,70,70,70,69,69,70,69,70,69,70,69,70,69,70,69,70,69,69,70,69,70,69,70,69,70,69,70,69,70,69,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,69,70,70,70,70,70,69,70,69,70,70,69,70,69,70,70,69,70,69,70,69,70,69,70,69,70,69,70,70,69,70,71,71,71,0,0,71,72,72,72,71,72,71,72,72,72,71,71,72,71,72,72,71,72,71,72,71,72,71,72,71,71,72,71,72,71,72,71,72,71,72,71,72,71,71,72,72,71,72,71,72,71,72,71,72,72,71,72,71,72,71,71,72,72,72,72,71,72,71,72,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],0,0,[2,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[[0,[4,5]]]]],[[6,[[0,[4,5]]]]]],[[[7,[4,[0,[4,5]]]]],[[7,[4,[0,[4,5]]]]]],[2,2],[8,8],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[[0,[12,5]]]],[6,[[0,[12,5]]]]],13],[[[7,[12,[0,[12,5]]]],[7,[12,[0,[12,5]]]]],13],[[8,8],13],[[9,9],13],[[10,10],13],0,0,[[[7,[5]]],5],0,[[],14],[8,14],[15,[[18,[[6,[[0,[16,5]]]],17]]]],[15,[[18,[[7,[16,5]],17]]]],[15,[[18,[[19,[16]],17]]]],[15,[[18,[2,17]]]],[15,[[18,[8,17]]]],[15,[[18,[9,17]]]],[15,[[18,[10,17]]]],[15,[[18,[11,17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[[20,21],[[18,[22]]]],[[20,21],[[18,[22]]]],[[20,21],[[18,[22]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[],[[19,[23]]]],[[],2],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[25,[[18,[[6,[[0,[26,5]]]]]]]],[25,[[18,[[7,[26,[0,[26,5]]]]]]]],[25,[[18,[[19,[27]]]]]],[25,[[18,[2]]]],[25,[[18,[8]]]],[25,[[18,[9]]]],[25,[[18,[10]]]],[24],[24],[24],[24],[24],[24],[24],[24],[[[19,[28]]],[[29,[14]]]],[2,[[29,[14,30]]]],[[8,20,21,[29,[14]]],[[18,[31]]]],[[9,20,21,[29,[14]]],[[18,[31]]]],[[10,20,21,[29,[14]]],[[18,[31]]]],[[[6,[[0,[28,5]]]],[0,[32,33]]]],[[[7,[28,5]],[0,[32,33]]]],[[[19,[28]],[0,[32,33]]]],[[2,[0,[32,33]]]],[[8,[0,[32,33]]]],[[9,[0,[32,33]]]],[[10,[0,[32,33]]]],[[11,[0,[32,33]]]],[[[6,[[0,[34,5]]]],[6,[[0,[34,5]]]]],35],[[[7,[34,[0,[34,5]]]],[7,[34,[0,[34,5]]]]],35],[[[19,[34]],[19,[34]]],35],[[2,2],35],[[2,36],35],[[8,8],35],[[9,9],35],[[10,10],35],[[11,11],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,[[[6,[[0,[37,5]]]],38],39],[[[7,[37,[0,[37,5]]]],38],39],[[2,38],[[18,[40]]]],[[2,38],[[18,[40]]]],[[2,38],[[18,[40]]]],[[8,38],39],[[9,38],39],[[10,38],39],[[11,38],39],[[]],[[]],[[],[[7,[5]]]],[[]],[14,2],[41,2],[42,2],[43,2],[44,2],[20,2],[[]],[45,2],[46,2],[[]],[[]],[[]],[[]],[[],2],[[],2],[47,2],[47,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[7,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[48,33]],49],46],[[[0,[48,33]],49],46],[[[0,[48,33]],49],46],[[[0,[48,33]],49],46],[[[0,[48,33]],49],46],[[],29],[[[6,[[0,[48,5]]]],50]],[[[7,[48,[0,[48,5]]]],50]],[[8,50]],[[9,50]],[[10,50]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[8,14],[[]],[[]],[9,10],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[10,35],[10,35],[2,35],0,[[10,10],[[51,[10]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],47],[8,47],[[5,5],[[7,[5]]]],[8,52],0,[[[6,[[0,[53,5]]]],[6,[[0,[53,5]]]]],[[51,[13]]]],[[[7,[53,[0,[53,5]]]],[7,[53,[0,[53,5]]]]],[[51,[13]]]],[[8,8],[[51,[13]]]],[[9,9],[[51,[13]]]],[[10,10],[[51,[13]]]],0,0,[[[6,[[0,[54,5]]]],55],18],[[[7,[54,[0,[54,5]]]],55],18],[[[19,[56]],55],18],[[2,55],18],[[8,55],18],[[9,55],18],[[10,55],18],[2,2],[[[6,[[0,[28,5]]]]],24],[[[7,[28,5]]],24],[[[19,[28]]],24],[2,24],[8,24],[9,24],[10,24],[11,24],[10],[[],47],[8,47],[2],[2],[[],51],[52,[[51,[57]]]],[2,58],[2,58],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],58],[[],51],[57,51],[59,51],[[2,60],[[18,[61]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[14,[[18,[8]]]],[[[29,[14]]],[[18,[8]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],63],[[],63],[[],63],[[],[[63,[64]]]],[[],63],[[],63],[[],63],[[],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[28]],65]],[[2,65]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[7,[5]]],5],[[],2],0,0,0,0,0,[1],[1],0,[[]],[[]],[[]],[[]],0,0,0,[66,66],[[[67,[4,4,4,[0,[4,5]]]]],[[67,[4,4,4,[0,[4,5]]]]]],[[]],[[]],[15,[[18,[66,17]]]],[15,[[18,[[67,[16,16,16,[0,[16,5]]]],17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[],66],[24],[24],[24],[24],[25,[[18,[66]]]],[25,[[18,[[67,[26,26,27,[0,[26,5]]]]]]]],[24],[24],[[66,[0,[32,33]]]],[[[67,[28,28,28,[0,[28,5]]]],[0,[32,33]]]],[[66,66],35],[[[67,[34,34,34,[0,[34,5]]]],[67,[34,34,34,[0,[34,5]]]]],35],0,[[66,38],39],[[[67,[37,37,37,[0,[37,5]]]],38],39],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],24],[[],24],[[]],[[]],[[],24],[[],24],0,0,0,[[66,55],18],[[[67,[54,54,56,[0,[54,5]]]],55],18],[66,24],[[[67,[28,28,28,[0,[28,5]]]]],24],0,[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],62],[[],62],[[],63],[[],63],[[]],[[]],[[]],[[]],0,[[]],[[]],0,0,0,[1],[[]],[[]],[68,68],[[]],[15,[[18,[68,17]]]],[[],[[18,[17]]]],[20,[[18,[17]]]],[[20,15],[[18,[17]]]],[24],[24],[25,[[18,[68]]]],[24],[[68,[0,[32,33]]]],[[68,68],35],[[],35],[[],35],[[68,38],39],[[]],[[]],[[]],[[],24],[[]],[[],24],[[68,55],18],[68,24],[[],[[29,[14,30]]]],[[]],[[],18],[[],18],[[],62],[[],63],[[]],[[]],[[]],0,0,0,0,0,0,[1],[1],0,[[]],[[]],[[]],[[]],0,0,[[]],[69,69],[[[70,[4,4,4,[0,[4,5]]]]],[[70,[4,4,4,[0,[4,5]]]]]],[[]],[[]],[15,[[18,[69,17]]]],[15,[[18,[[70,[16,16,16,5]],17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[],69],[24],[24],[24],[24],[25,[[18,[69]]]],[25,[[18,[[70,[26,26,27,[0,[26,5]]]]]]]],[24],[24],[[69,[0,[32,33]]]],[[[70,[28,28,28,5]],[0,[32,33]]]],[[69,69],35],[[[70,[34,34,34,[0,[34,5]]]],[70,[34,34,34,[0,[34,5]]]]],35],[[],35],[[],35],0,[[69,38],39],[[[70,[37,37,37,[0,[37,5]]]],38],39],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[]],[[]],[[],35],[[],24],[[],24],0,0,0,0,[[69,55],18],[[[70,[54,54,56,[0,[54,5]]]],55],18],[69,24],[[[70,[28,28,28,5]]],24],0,[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],62],[[],62],[[],63],[[],63],[[]],[[]],[[]],[[]],0,[[]],[[]],0,0,0,0,0,[1],[1],0,0,[[]],[[]],[[]],[[]],0,0,[[]],[71,71],[[[72,[4,4,4,[0,[4,5]]]]],[[72,[4,4,4,[0,[4,5]]]]]],[[]],[[]],0,[15,[[18,[71,17]]]],[15,[[18,[[72,[16,16,5]],17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[[20,15],[[18,[17]]]],[[20,15],[[18,[17]]]],[[],71],[24],[24],[24],[24],[25,[[18,[71]]]],[25,[[18,[[72,[26,26,27,[0,[26,5]]]]]]]],[24],[24],[[71,[0,[32,33]]]],[[[72,[28,28,5]],[0,[32,33]]]],[[71,71],35],[[[72,[34,34,34,[0,[34,5]]]],[72,[34,34,34,[0,[34,5]]]]],35],[[],35],[[],35],[[],35],[[],35],[[71,38],39],[[[72,[37,37,37,[0,[37,5]]]],38],39],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],24],[[],24],[[]],[[]],[[],35],[[],24],[[],24],0,0,0,[[71,55],18],[[[72,[54,54,56,[0,[54,5]]]],55],18],[71,24],[[[72,[28,28,5]]],24],0,[[],[[29,[14,30]]]],[[],[[29,[14,30]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],62],[[],62],[[],63],[[],63],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[3,"H256Le"],[3,"U256"],[8,"Clone"],[8,"Copy"],[3,"VaultCurrencyPair"],[3,"VaultId"],[4,"TokenSymbol"],[4,"LpToken"],[4,"CurrencyId"],[3,"CustomMetadata"],[8,"Ord"],[4,"Ordering"],[15,"u8"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[3,"BalanceWrapper"],[15,"u32"],[3,"PortableRegistry"],[3,"Error"],[8,"Default"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"FromStr"],[8,"Encode"],[3,"Vec"],[3,"Global"],[3,"Error"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[3,"H256"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u16"],[15,"i32"],[15,"i8"],[15,"i64"],[15,"i16"],[15,"u64"],[15,"str"],[8,"Hash"],[8,"BuildHasher"],[8,"Hasher"],[4,"Option"],[6,"Balance"],[8,"PartialOrd"],[8,"Serialize"],[8,"Serializer"],[8,"Display"],[6,"SignedFixedPoint"],[3,"String"],[6,"UnsignedFixedPoint"],[8,"Writer"],[4,"Error"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[8,"FnOnce"],[4,"IssueRequestStatus"],[3,"IssueRequest"],[4,"Key"],[4,"RedeemRequestStatus"],[3,"RedeemRequest"],[4,"ReplaceRequestStatus"],[3,"ReplaceRequest"],[8,"CurrencyInfo"],[8,"BalanceToFixedPoint"],[8,"TruncateFixedPointToInt"]]},\
"interbtc_rpc":{"doc":"A collection of node-specific RPC methods. Substrate …","t":"DECDNGNLLLLLLLLMLLMCFMLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLQDIDGGGDQIDLLKMLLLLLLLLMLLLLLMFKLKKLLLLLLLLLLLLLKMMMMMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKMMLLMFMMLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DefaultEthConfig","DenyUnsafe","EthDeps","FullDeps","No","RpcExtension","Yes","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","command_sink","create_eth","create_full","deny_unsafe","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eth","eth","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","overrides_handle","pool","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","EstimateGasAdapter","EthBlockDataCacheTask","EthConfig","EthDeps","FeeHistoryCache","FeeHistoryCacheLimit","FilterPool","OverrideHandle","RuntimeStorageOverride","StorageOverride","TxPool","__clone_box","__clone_box","account_code_at","block_data_cache","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","content","converter","create_eth","current_block","current_block","current_receipts","current_transaction_statuses","current_transaction_statuses","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","elasticity","enable_dev_signer","execute_gas_limit_multiplier","fallback","fee_history_cache","fee_history_cache_limit","filter_pool","forced_parent_hashes","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","frontier_backend","graph","init","init","init","init","inspect","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_authority","is_eip1559","max_past_logs","network","new","new","overrides","overrides_handle","pool","schemas","status","storage_at","sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"interbtc_rpc"],[94,"interbtc_rpc::eth"]],"d":["","Signifies whether a potentially unsafe RPC should be …","","Full client dependencies.","Allows calling every RPCs.","A type representing all RPC extensions.","Denies only potentially unsafe RPCs.","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Manual seal command sink","","Instantiate all full RPC extensions.","Whether to deny unsafe calls","","","","","","","","","","","Ethereum-compatibility specific dependencies.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","","","","","","","","","","Manage LRU caches for block data and their transaction …","","Extra dependencies for Ethereum compatibility.","","Maximum fee history cache size.","On-memory stored filters created through the <code>eth_newFilter</code> …","","","Something that can fetch Ethereum-related data. This trait …","","","","For a given account address, returns …","Cache for Ethereum block data.","","","","","","","","","The client instance to use.","","","","","","Ethereum transaction converter.","Instantiate Ethereum-compatible RPC extensions.","Return the current block.","Cache for <code>handler.current_block</code>.","Return the current receipt.","Return the current transaction status.","Cache for <code>handler.current_transaction_statuses</code>.","","","","","","","","","","","","","Return the base fee at the given height.","Whether to enable dev signer","Maximum allowed gas limit will be …","","Fee history cache.","Maximum fee history cache size.","EthFilterApi pool.","Mandated parent hashes for a given block hash.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Frontier Backend.","Graph pool instance.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The Node authority flag","Return <code>true</code> if the request BlockId is post-eip1559.","Maximum number of logs in a query.","Network service","","","Ethereum data access overrides.","","Transaction pool instance.","","","For a given account address and index, returns …","Chain syncing service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,2,0,2,2,18,64,2,18,64,2,2,18,2,2,18,0,0,18,18,64,2,18,64,2,18,64,2,0,18,2,18,64,2,18,18,64,64,2,2,18,18,64,64,2,2,18,64,2,18,64,2,18,64,2,18,64,2,18,64,2,18,64,2,18,64,2,0,18,2,18,64,2,18,64,2,18,64,2,18,64,2,18,64,2,18,64,2,18,64,2,65,0,0,0,0,0,0,0,65,0,0,41,42,66,41,41,52,33,42,41,52,33,42,41,41,42,41,42,42,41,0,66,52,66,66,52,41,52,33,42,41,52,33,42,41,52,33,42,66,41,41,33,41,41,41,41,41,52,33,42,41,41,52,52,33,33,42,42,41,41,52,52,33,33,42,42,41,41,41,52,33,42,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42,41,66,41,41,52,42,41,0,41,33,42,66,41,41,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42,41,52,33,42],"f":[0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[4,[3]]]],0,[2,2],[[]],0,0,[[[18,[[0,[[6,[5]],[7,[5]],[8,[5]],[9,[5]],[10,[5]],[12,[5,[11,[5]]]],13,14]],15,16,[0,[17,13,14]]]],19,[22,[[21,[[20,[5]]]]]]],[[4,[23,[25,[24]]]]]],0,[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,[[2,27],[[4,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[[25,[29]]],[[25,[30,29]]]],[[[25,[29]]],[[25,[30,29]]]],[[[25,[29]]],[[25,[30,29]]]],[22,[[22,[30]]]],[22,[[22,[30]]]],[22,[[22,[30]]]],[31,[[31,[30]]]],[31,[[31,[30]]]],[31,[[31,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[[0,[[7,[32]],[9,[32]],[12,[32,[11,[32]]]]]]]]],[[22,[[33,[32]]]]]],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],34],[[],34],[[],34],[[],35],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[36,[[39,[[38,[37,29]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[41,[16,40,32]]],[[41,[16,40,32]]]],[[[42,[16]]],[[42,[16]]]],[[]],[[]],[[[42,[32,[0,[[7,[32]],[9,[32]]]],16]]],[[4,[[47,[[46,[36,[46,[43,44,45]],45]]]],48]]]],0,[[49,[41,[[0,[[6,[32]],[7,[32]],[8,[32]],[9,[32]],[10,[32]],[12,[32,[11,[32]]]]]],15,16,[0,[17,13,14]],32]],19,[22,[[21,[[20,[32]]]]]]],[[4,[49,[25,[24]]]]]],[[],[[39,[[51,[50]]]]]],[[[52,[32]],53],54],[[],[[39,[[38,[55,29]]]]]],[[],[[39,[[38,[56,29]]]]]],[[[52,[32]],53],54],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[[],[[39,[57]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],26],[[],26],[[],26],[[],26],[[[42,[32,[0,[[7,[32]],[9,[32]]]],16]]],[[4,[[47,[[46,[36,[46,[43,58,45]],45]]]],48]]]],[[]],[[]],[[]],[[]],[[[25,[29]]],[[25,[30,29]]]],[[[25,[29]]],[[25,[30,29]]]],[[[25,[29]]],[[25,[30,29]]]],[[[25,[29]]],[[25,[30,29]]]],[22,[[22,[30]]]],[22,[[22,[30]]]],[22,[[22,[30]]]],[22,[[22,[30]]]],[31,[[31,[30]]]],[31,[[31,[30]]]],[31,[[31,[30]]]],[31,[[31,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],59],0,0,[[60,[22,[[33,[32]]]],26,26,[39,[61]]],[[52,[32]]]],[[22,[22,[[62,[16]]]]],[[42,[16]]]],0,[[[22,[[0,[[7,[32]],[9,[32]],[12,[32,[11,[32]]]]]]]]],[[22,[[33,[32]]]]]],0,0,[[[42,[32,[0,[[7,[32]],[9,[32]]]],16]]],[[4,[[47,[43]],48]]]],[[36,43],[[39,[63]]]],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],34],[[],34],[[],34],[[],34],[[],35],[[],35],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[4,"Result"],[6,"Block"],[8,"CallApiAt"],[8,"ProvideRuntimeApi"],[8,"BlockchainEvents"],[8,"HeaderBackend"],[8,"HeaderMetadata"],[8,"Backend"],[8,"StorageProvider"],[8,"Send"],[8,"Sync"],[8,"TransactionPool"],[8,"ChainApi"],[8,"ConvertTransaction"],[3,"FullDeps"],[6,"SubscriptionTaskExecutor"],[3,"EthereumBlockNotification"],[6,"EthereumBlockNotificationSinks"],[3,"Arc"],[6,"RpcExtension"],[8,"Error"],[3,"Box"],[15,"usize"],[3,"Formatter"],[3,"Error"],[3,"Global"],[8,"Any"],[3,"Rc"],[8,"Block"],[3,"OverrideHandle"],[3,"TypeId"],[15,"str"],[3,"H160"],[15,"u8"],[3,"Vec"],[4,"Option"],[8,"Clone"],[3,"EthDeps"],[3,"TxPool"],[3,"U256"],[3,"TxPoolTransaction"],[3,"RandomState"],[3,"HashMap"],[3,"TxPoolResult"],[4,"Error"],[3,"RpcModule"],[4,"TransactionV2"],[3,"Block"],[3,"EthBlockDataCacheTask"],[4,"EthereumStorageSchema"],[8,"Future"],[4,"ReceiptV3"],[3,"TransactionStatus"],[3,"Permill"],[3,"Summary"],[15,"bool"],[3,"SpawnTaskHandle"],[3,"Registry"],[3,"Pool"],[3,"H256"],[3,"DefaultEthConfig"],[8,"EthConfig"],[8,"StorageOverride"]]},\
"interlay_runtime_parachain":{"doc":"The interlay runtime. This can be compiled with <code>#[no_std]</code>, …","t":"GDGGGGGGDDNDDGNNNGGGGGGGGNNNGGDDGNNGDGDGGDEIGGNNNDGNNNDGGGNNNNGNDIDDGNNNGNGNNNGNNNGNNNEGNNNDGNNNGGGDDDDGNNNGNNNDGDDGNNGGNNNNGEGDDGNNNDDGNNDGNNDGDDDCGIDDDDDDGGQGNNNDDGNNNGDIDDCGGNNNDGDGSRNDDDDDDDDDDDDDDDDDDDDDDDDGGNNGNNNGNNNGENNGNEDNDGNNNGGEDDGGGNNNGDDDDGNNNNGGNNNDDQGNNNDDEQGGGNNNGDGNNNGDDDDDDDDDDEEEEDEEDEDGNNNGNNNGNNNGDDGGGGGGGDGIDGNNNGGNNNDGDGNNNGRDGNNNNGGDDDGNNNGGNECGNNNGDDDGNDDGNNNGGNNGGGNNNRGNNNDGDDGNNGGNNNDGDGNNGGNNDGNNNGNDRRRDNGNNNGNNNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLMMMLMLLLLLALKLLLMKLMMMLLLMCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLAOLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMLLMKLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLMFLLLLLMMLLLLMLLLLLLLMMMMMOLLLLLLLLLLMMMMLLLLLMCLLLLKKLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLNLLLLLLLLMMKMMNKLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLALLLLLLLMMMMMMMMMMMMMFAAGRERRNRRNNRRRRNCNRRLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRGDDDDDIDDDDDDIDIILMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLGDDDDDDDIDDGDDRDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGDDDDDDGGDDDDDDDDDDDDGDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLC","n":["AccountId","AdjustmentVariable","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","AnnouncementDepositBase","AnnouncementDepositFactor","Any","AssetAuthority","AssetMetadata","AssetRegistry","AssetRegistry","AssetRegistry","AssetRegistry","AssetRegistryConfig","Aura","AuraConfig","AuraExt","AuraExtConfig","AuraId","Authorship","BTCRelay","BTCRelay","BTCRelay","BTCRelay","BTCRelayConfig","Balance","BalanceWrapper","BaseCallFilter","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BasicDeposit","Block","BlockHashCount","BlockId","BlockNumber","BlockNumberToBalance","BtcRelayCall","BuildStorage","CheckedExtrinsic","ClientsInfo","ClientsInfo","ClientsInfo","ClientsInfo","CollatorPotId","CollatorSelection","CollatorSelection","CollatorSelection","CollatorSelection","CollatorSelectionAccount","CollatorSelectionConfig","CollatorSelectionUpdateOrigin","CumulusXcm","CumulusXcm","CumulusXcm","CumulusXcm","CumulusXcm","Currency","Currency","CurrencyHooks","CurrencyInfo","DealWithFees","DealWithRewards","Democracy","Democracy","Democracy","Democracy","DemocracyConfig","DepositCollateral","DexGeneral","DexGeneral","DexGeneral","DexGeneral","DexStable","DexStable","DexStable","DexStable","DexSwapRouter","DexSwapRouter","DexSwapRouter","DexSwapRouter","DispatchClass","DmpQueue","DmpQueue","DmpQueue","DmpQueue","DustRemovalWhitelist","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EmissionPeriod","EnableManualSeal","EnactmentPeriod","EnsureKintsugiLabs","Escrow","Escrow","Escrow","Escrow","EscrowAnnuity","EscrowAnnuity","EscrowAnnuity","EscrowAnnuity","EscrowAnnuityAccount","EscrowAnnuityInstance","EscrowAnnuityPalletId","EscrowBlockRewardProvider","EscrowRewards","EscrowRewards","EscrowRewards","EscrowRewardsInstance","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Everything","Executive","ExecutiveBody","ExistentialDeposits","Farming","Farming","Farming","Farming","FarmingAccount","FarmingPalletId","FarmingRewards","FarmingRewards","FarmingRewards","FastTrackVotingPeriod","Fee","Fee","Fee","FeeAccount","FeeConfig","FeePalletId","FieldDeposit","FixedU128","ForeignAsset","GenesisConfig","Get","GetDepositBase","GetDepositFactor","GetMaxSignatories","GetNativeCurrencyId","GetRelayChainCurrencyId","GetWrappedCurrencyId","Hash","Header","IdentificationTuple","Identity","Identity","Identity","Identity","IdentityFee","InflationPeriod","Issue","Issue","Issue","Issue","IssueConfig","IssueRequest","KeyOwnerProofSystem","KintsugiLabsAccounts","LaunchPeriod","LendToken","Liquidity","Loans","Loans","Loans","Loans","LoansAccount","LoansConfig","LoansPalletId","LockIdentifier","MAX","MAXIMUM_BLOCK_WEIGHT","Mandatory","MaxAdditionalFields","MaxAuthorities","MaxCandidates","MaxExpectedValue","MaxInvulnerables","MaxLocks","MaxNameLen","MaxPending","MaxPeriod","MaxProposalWeight","MaxProposals","MaxProxies","MaxRegistrars","MaxScheduledPerBlock","MaxSubAccounts","MaxVestingSchedules","MaxVotes","MaximumMultiplier","MaximumSchedulerWeight","MinCandidates","MinVestedTransfer","MinimumDeposit","MinimumMultiplier","MinimumPeriod","Moment","MultiTransactionPayment","MultiTransactionPayment","MultiTransactionPayment","Multisig","Multisig","Multisig","Multisig","Nomination","Nomination","Nomination","Nomination","NominationConfig","NominationEvent","NominationOptIn","NominationOptOut","Nonce","Normal","Nothing","Offset","Operational","OperationalFeeMultiplier","Oracle","Oracle","Oracle","Oracle","OracleConfig","OracleName","OriginCaller","PalletInfo","ParachainBlocksPerBitcoinBlock","ParachainInfo","ParachainInfoConfig","ParachainSystem","ParachainSystem","ParachainSystem","ParachainSystem","ParachainSystemConfig","PauseTooLongNames","Perbill","Period","Permill","PolkadotXcm","PolkadotXcm","PolkadotXcm","PolkadotXcm","PolkadotXcm","PolkadotXcmConfig","Preimage","Preimage","Preimage","Preimage","PreimageBaseDepositz","PreimageByteDepositz","Proof","Proxy","Proxy","Proxy","Proxy","ProxyDepositBase","ProxyDepositFactor","ProxyType","Query","Rate","Ratio","Redeem","Redeem","Redeem","Redeem","RedeemConfig","RedeemRequest","Replace","Replace","Replace","Replace","ReplaceConfig","ReplaceRequest","ReservedDmpWeight","ReservedXcmpWeight","RewardPeriod","RocksDbWeight","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SS58Prefix","Scheduler","Scheduler","Scheduler","Scheduler","Security","Security","Security","Security","Session","Session","Session","Session","SessionConfig","SessionKeys","SessionLength","Shortfall","Signature","SignedBlock","SignedExtra","SignedFixedPoint","SignedInner","SlowAdjustingFeeUpdate","Span","StablePoolId","StorageValue","SubAccountDeposit","Sudo","Sudo","Sudo","Sudo","SudoConfig","Supply","Supply","Supply","Supply","SupplyAccount","SupplyConfig","SupplyPalletId","System","System","System","System","SystemConfig","TARGET_SPACING","TargetBlockFullness","TechnicalCommittee","TechnicalCommittee","TechnicalCommittee","TechnicalCommittee","TechnicalCommittee","TechnicalCommitteeConfig","TechnicalCommitteeInstance","TechnicalCommitteeMaxMembers","TechnicalCommitteeMaxProposals","TechnicalCommitteeMotionDuration","TechnicalMembership","TechnicalMembership","TechnicalMembership","TechnicalMembership","TechnicalMembershipConfig","Timestamp","Timestamp","TimestampCall","Token","Tokens","Tokens","Tokens","Tokens","TokensConfig","TotalWrapped","TransactionByteFee","TransactionConverter","TransactionPayment","TransactionPayment","TreasuryAccount","TreasuryPalletId","TxPause","TxPause","TxPause","TxPause","UncheckedExtrinsic","UnknownTokens","UnknownTokens","UnknownTokens","UnsignedFixedPoint","UnsignedInner","Utility","Utility","Utility","Utility","VERSION","VaultAnnuity","VaultAnnuity","VaultAnnuity","VaultAnnuity","VaultAnnuityAccount","VaultAnnuityInstance","VaultAnnuityPalletId","VaultBlockRewardProvider","VaultCapacity","VaultCapacity","VaultCapacity","VaultCapacityInstance","VaultRegistry","VaultRegistry","VaultRegistry","VaultRegistry","VaultRegistryAccount","VaultRegistryConfig","VaultRegistryPalletId","VaultRewards","VaultRewards","VaultRewards","VaultRewardsInstance","VaultStaking","VaultStaking","VaultStaking","Version","Vesting","Vesting","Vesting","Vesting","VestingConfig","Void","VotingPeriod","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_REF_TIME_PER_SECOND","Weight","WithdrawCollateral","XTokens","XTokens","XTokens","XTokens","XcmpQueue","XcmpQueue","XcmpQueue","XcmpQueue","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accept_time","account_basic","account_code_at","account_nonce","add","add","add","add","add","add_assign","add_filter","add_proof_size","add_ref_time","additional","all","all_gt","all_gte","all_lt","all_lte","amount","amount","amount","amount","amount","amount_btc","amount_btc","any_eq","any_gt","any_gte","any_lt","any_lte","api","api_version","append","apply_extrinsic","apply_self_contained","as_system_ref","asset_registry","assimilate_storage","assimilate_storage","aura","aura","aura_ext","author","authorities","balance_at","base_fee","bitcoin","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_address","btc_address","btc_address","btc_height","btc_height","btc_height","btc_public_key","btc_relay","build","build_storage","calculate_currency_amount","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity_one_currency","calculate_swap","call","caller","chain_id","check_inherents","check_proof","check_self_contained","checked_accrue","checked_add","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div_per_component","checked_mul","checked_mul","checked_mul","checked_mul","checked_reduce","checked_rounding_div","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","classify_dispatch","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collateral","collateral","collateral_to_wrapped","collator_selection","collect_collation_info","compare","compare","compare","compare","compare","compare","compare","compare","compute_escrow_reward","compute_farming_reward","compute_vault_reward","const_checked_div","const_checked_mul","const_checked_mul_with_rounding","constants","construct_runtime","construct_runtime_api","contains","contains","contains","contains","contains","contains","contains","contains","convert","convert_transaction","convert_transaction","convert_transaction","crate_version","create","current_all","current_block","current_receipts","current_transaction_statuses","decimals","decimals","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_from","decode_into_raw_public_keys","decode_len","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","democracy","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dex","dispatch","dispatch","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","distribute_block_reward","distribute_block_reward","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","encode","encode","encode","encode","encode","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_escrow_reward_rate","estimate_farming_reward","estimate_vault_reward_rate","ethereum","evm","evm","evm_chain_id","execute_block","execute_in_transaction","existential_deposit","exists","extract_proof","extrinsic_filter","fee","fee","fee","fee","fee","filter","filter","filter","filter","filter","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_stakable","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_all","from_dispatch_error","from_float","from_float","from_float","from_float","from_float","from_inner","from_inner","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_parts","from_perbill","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_u32","gas_limit_multiplier_support","gas_price","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_a","get_a_precise","get_account_liquidity","get_admin_balances","get_all_module_accounts","get_amount_in_price","get_amount_out_price","get_call_index","get_call_index","get_call_indices","get_call_indices","get_call_metadata","get_call_name","get_call_name","get_call_names","get_call_names","get_call_names","get_collateralization_from_vault","get_collateralization_from_vault_and_collateral","get_currencies","get_currency","get_currency_balances","get_currency_precision_multipliers","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_estimate_lptoken","get_issuable_tokens_from_vault","get_issue_requests","get_liquidation_threshold_liquidity","get_lp_currency","get_market_status","get_module_names","get_new_vault_replace_requests","get_number_of_currencies","get_old_vault_replace_requests","get_pair_by_asset_id","get_premium_redeem_vaults","get_raw","get_redeem_requests","get_required_collateral_for_vault","get_required_collateral_for_wrapped","get_vault_collateral","get_vault_issue_requests","get_vault_redeem_requests","get_vault_total_collateral","get_vaults_by_account_id","get_vaults_with_issuable_tokens","get_vaults_with_redeemable_tokens","get_virtual_price","griefing_collateral","griefing_collateral","griefing_collateral","griefing_collateral","griefing_currency","has_api","has_api_with","hashed_key","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize_block","int_div","int_div","int_mul","int_mul","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_caller","into_clamped_perthing","into_inner","into_inner","into_iter","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_perbill","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_one","is_one","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_superset","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","issue","key","key_ids","kill","loans","location","max","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","mutate","mutate_exists","name","name","name","native_version","neg","neg","new_call_variant_initialize","new_call_variant_set","new_call_variant_store_block_header","new_vault","nomination","non_mandatory","none","none","offchain_worker","old_vault","on_inflation","on_unbalanceds","one","one","one","one","one","opentime","opentime","oracle","parachain_info","parachain_system","parameter_types","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pays_fee","pending_block","period","period","period","polkadot_xcm","pow","pow","pre_dispatch","pre_dispatch_self_contained","premium","premium","primitives","print","proof_recorder","proof_size","proof_size_mut","prove","put","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","redeem","redeemer","ref_time","ref_time_mut","register_extension","replace","requester","reset_filter","root","root","saturating_accrue","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reduce","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session","set","set","set","set_call_context","set_caller_from","set_proof_size","set_ref_time","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_duration","sqrt","square","square","status","status","status","storage_at","store_block_header","sub","sub","sub","sub","sub","sub_assign","sub_proof_size","sub_ref_time","sudo","supply","symbol","symbol","system","system","take","tcmp","tcmp","tcmp","technical_committee","technical_membership","to_float","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token_distribution","tokens","total_supply","transfer_fee_btc","transfer_fee_btc","translate","truncate_to_inner","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_perthing","try_mutate","try_mutate_exists","try_origin","try_origin","try_sqrt","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_self_contained","validate_transaction","validate_unsigned","vault","vault","vault_registry","verify_block_header_inclusion","version","vesting","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weigh_data","weight_to_fee","weights","withdraw_reward","withdraw_reward","wrapped_to_collateral","xcm_config","zero","zero","zero","zero","zero","zero","zero","block_header","block_header","block_height","fork_bound","amount","amount","nominator_id","nominator_id","vault_id","vault_id","vault_id","vault_id","now","dispatch","currency","time","Balance","CENTS","CurrencyId","DOLLARS","DOT","ForeignAsset","IBTC","INTR","LendToken","LpToken","MILLICENTS","NATIVE_CURRENCY_ID","NATIVE_TOKEN_ID","PARENT_CURRENCY_ID","StableLpToken","Token","Token","UNITS","WRAPPED_CURRENCY_ID","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","cmp","compare","decode","decode_all","decode_all_with_depth_limit","decode_as_type","decode_with_depth_limit","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deposit","deref","deref_mut","deserialize","drop","encode_as","encode_as_type_to","encode_to","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","get_hash","hash","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","into_visitor","is_lend_token","is_lp_token","join_lp_token","max_encoded_len","partial_cmp","serialize","size_hint","sort","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","type_name","unchecked_into","unique_saturated_into","vzip","BITCOIN_BLOCK_SPACING","BITCOIN_SPACING_MS","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","SLOT_DURATION","WEEKS","YEARS","AssetBalance","CurrencyLimit","DexGeneralPalletId","DexGeneralVerifyPairAsset","DexStablePalletId","DexStableVerifyPoolAsset","GenerateLpAssetId","MaxBootstrapLimits","MaxBootstrapRewards","PairInfo","PairLpIdentity","PoolLpGenerate","SetLoansExchangeRates","StablePoolLpCurrencyIdGenerate","StringLimit","ValidateAsset","ValidateCurrency","__clone_box","account","asset_0","asset_1","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_as","encode_to","eq","equivalent","equivalent","equivalent","equivalent","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_by_pool_id","generate_by_pool_id","generate_lp_asset_id","generate_lp_asset_id","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","holding_liquidity","identity","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","lp_asset_id","on_runtime_upgrade","partial_cmp","reserve_0","reserve_1","serialize","size_hint","status","to_keyed_vec","to_owned","total_liquidity","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_asset","validate_asset","validate_pool_lp_currency","validate_pool_lp_currency","validate_pooled_currency","validate_pooled_currency","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccountConverter","BaseFeeThreshold","BlockGasLimit","DefaultBaseFeePerGas","DefaultElasticity","EnableCreate","FindAuthorTruncated","GasLimitPovSizeRatio","GetTransactionAction","InterBtcPrecompiles","PostBlockAndTxnHashes","Precompiles","PrecompilesValue","SetEvmChainId","WEIGHT_PER_GAS","WeightPerGas","action","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","find_author","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","ideal","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_precompile","key","lower","new","on_runtime_upgrade","set","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upper","used_addresses","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ESCROW_INFLATION_REWARDS","INITIAL_ALLOCATION","TREASURY_INFLATION_REWARDS","VAULT_INFLATION_REWARDS","annuity_escrow_annuity","annuity_vault_annuity","block_weights","btc_relay","clients_info","collator_selection","cumulus_pallet_xcmp_queue","democracy","dex_general","dex_stable","dex_swap_router","escrow","extrinsic_weights","farming","fee","frame_system","issue","loans","nomination","oracle","orml_asset_registry","orml_tokens","orml_vesting","pallet_collective","pallet_identity","pallet_membership","pallet_multisig","pallet_preimage","pallet_proxy","pallet_scheduler","pallet_timestamp","pallet_utility","pallet_xcm","pallet_xcm_benchmarks_fungible","pallet_xcm_benchmarks_generic","redeem","replace","security","supply","tx_pause","vault_registry","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize","set_reward_per_wrapped","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_rewards","vzip","withdraw_rewards","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize","set_reward_per_wrapped","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_rewards","vzip","withdraw_rewards","BlockExecutionWeight","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get","get","get","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","initialize","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","store_block_header","store_block_header_new_fork_sorted","store_block_header_new_fork_unsorted","store_block_header_reorganize_chains","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","set_current_client_release","set_pending_client_release","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","leave_intent","new_session","note_author","register_as_candidate","set_candidacy_bond","set_desired_candidates","set_invulnerables","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","set_config_with_u32","set_config_with_weight","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","cancel_proposal","cancel_referendum","clear_public_proposals","deref","deref_mut","drop","fast_track","fast_track_referendum","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize_base","on_initialize_base_with_launch_period","on_initialize_public","propose","remove_vote","second","spend_from_treasury","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vote_existing","vote_new","vzip","WeightInfo","add_liquidity","bootstrap_charge_reward","bootstrap_claim","bootstrap_contribute","bootstrap_create","bootstrap_end","bootstrap_refund","bootstrap_update","bootstrap_withdraw_reward","borrow","borrow_mut","create_pair","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","remove_liquidity","set_fee_point","set_fee_receiver","swap_assets_for_exact_assets","swap_exact_assets_for_assets","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","add_liquidity","add_pool_and_base_pool_liquidity","borrow","borrow_mut","create_base_pool","create_meta_pool","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","ramp_a","remove_liquidity","remove_liquidity_imbalance","remove_liquidity_one_currency","remove_pool_and_base_pool_liquidity","remove_pool_and_base_pool_liquidity_one_currency","set_admin_fee","set_swap_fee","stop_ramp_a","swap","swap_meta_pool_underlying","swap_pool_from_base","swap_pool_to_base","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_fee_receiver","vzip","withdraw_admin_fee","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","validate_routes","vzip","WeightInfo","borrow","borrow_mut","create_lock","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","increase_amount","increase_unlock_height","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","set_account_block","set_account_limit","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_user_stake","vzip","withdraw","ExtrinsicBaseWeight","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get","get","get","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","claim","deposit","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize","remove_reward_schedule","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_reward_schedule","vzip","withdraw","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","set_commission","set_issue_fee","set_issue_griefing_collateral","set_premium_redeem_fee","set_punishment_fee","set_redeem_fee","set_replace_griefing_collateral","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_rewards","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","kill_prefix","kill_storage","remark","remark_with_event","set_code","set_heap_pages","set_storage","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","cancel_issue","deref","deref_mut","drop","execute_expired_issue_exact","execute_expired_issue_overpayment","execute_expired_issue_underpayment","execute_issue_exact","execute_issue_overpayment","execute_issue_underpayment","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","request_issue","set_issue_period","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","activate_market","add_market","add_reserves","add_reward","borrow","borrow","borrow_mut","claim_reward","claim_reward_for_market","deposit_all_collateral","deref","deref_mut","drop","force_update_market","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","liquidate_borrow","mint","redeem","redeem_all","reduce_incentive_reserves","reduce_reserves","repay_borrow","repay_borrow_all","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_market","update_market_reward_speed","update_rate_model","vzip","withdraw_all_collateral","WeightInfo","borrow","borrow_mut","deposit_collateral","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","opt_in_to_nomination","opt_out_of_nomination","set_nomination_enabled","set_nomination_limit","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_collateral","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","feed_values","from","from_mut","from_mut","from_ref","from_ref","init","insert_authorized_oracle","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize","remove_authorized_oracle","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","register_asset","set_asset_location","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_asset","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","force_transfer","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","set_balance","transfer","transfer_all","transfer_keep_alive","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","claim","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_vesting_schedules","vested_transfer","vzip","WeightInfo","borrow","borrow_mut","close_approved","close_disapproved","close_early_approved","close_early_disapproved","deref","deref_mut","disapprove_proposal","drop","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","propose_execute","propose_proposed","set_members","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vote","vzip","WeightInfo","add_registrar","add_sub","borrow","borrow_mut","cancel_request","clear_identity","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","kill_identity","provide_judgement","quit_sub","remove_sub","rename_sub","request_judgement","set_account_id","set_fee","set_fields","set_identity","set_subs_new","set_subs_old","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","add_member","borrow","borrow_mut","change_key","clear_prime","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","remove_member","reset_member","set_prime","swap_member","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","approve_as_multi_approve","approve_as_multi_create","as_multi_approve","as_multi_complete","as_multi_create","as_multi_threshold_1","borrow","borrow_mut","cancel_as_multi","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","note_no_deposit_preimage","note_preimage","note_requested_preimage","request_no_deposit_preimage","request_preimage","request_requested_preimage","request_unnoted_preimage","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unnote_no_deposit_preimage","unnote_preimage","unrequest_multi_referenced_preimage","unrequest_preimage","unrequest_unnoted_preimage","vzip","WeightInfo","add_proxy","announce","borrow","borrow_mut","create_pure","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","kill_pure","proxy","proxy_announced","reject_announcement","remove_announcement","remove_proxies","remove_proxy","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","cancel","cancel_named","deref","deref_mut","drop","execute_dispatch_signed","execute_dispatch_unsigned","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","schedule","schedule_named","service_agenda_base","service_agendas_base","service_task_base","service_task_fetched","service_task_named","service_task_periodic","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_finalize","set","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_derivative","batch","batch_all","borrow","borrow_mut","deref","deref_mut","dispatch_as","drop","force_batch","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","already_notified_target","borrow","borrow_mut","deref","deref_mut","drop","execute","force_default_xcm_version","force_subscribe_version_notify","force_suspension","force_unsubscribe_version_notify","force_xcm_version","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","migrate_and_notify_old_targets","migrate_supported_version","migrate_version_notifiers","migrate_version_notify_targets","notify_current_targets","notify_target_migration_fail","reserve_transfer_assets","send","teleport_assets","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deposit_asset","deposit_reserve_asset","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","initiate_teleport","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","transfer_asset","transfer_reserve_asset","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_asset","WeightInfo","borrow","borrow_mut","burn_asset","buy_execution","claim_asset","clear_error","clear_origin","clear_topic","clear_transact_status","deref","deref_mut","descend_origin","drop","expect_asset","expect_error","expect_origin","expect_pallet","expect_transact_status","from","from_mut","from_mut","from_ref","from_ref","init","initiate_reserve_withdraw","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","query_pallet","query_response","refund_surplus","report_error","report_holding","report_transact_status","set_appendix","set_error_handler","set_fees_mode","set_topic","subscribe_version","transact","trap","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unpaid_execution","unsubscribe_version","vzip","WeightInfo","borrow","borrow_mut","cancel_redeem_reimburse","cancel_redeem_retry","deref","deref_mut","drop","execute_redeem","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","liquidation_redeem","request_redeem","self_redeem","set_redeem_period","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","accept_replace","borrow","borrow_mut","cancel_replace","deref","deref_mut","drop","execute_cancelled_replace","execute_pending_replace","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","request_replace","set_replace_period","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_replace","WeightInfo","activate_counter","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_initialize","set_start_height_and_inflation","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","pause","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unpause","vzip","WeightInfo","accept_new_issues","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","recover_vault_id","register_public_key","register_vault","report_undercollateralized_vault","set_custom_secure_threshold","set_liquidation_collateral_threshold","set_minimum_collateral","set_premium_redeem_threshold","set_secure_collateral_threshold","set_system_collateral_ceiling","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","AccountIdToMultiLocation","Ancestry","Barrier","CanonicalizedIbtcPerSecond","CanonicalizedIntrPerSecond","CurrencyIdConvert","DotPerSecond","IbtcPerSecond","IntrPerSecond","LocalAssetTransactor","LocalOriginToLocation","MaxAssetsForTransfer","MaxAssetsIntoHolding","MaxInstructions","MyFixedConversionRateProvider","ParachainMinFee","ParentLocation","ParentNetwork","RelayChainOrigin","RelayNetwork","SafeCallFilter","SelfLocation","ToAuthor","Trader","UnitWeightCost","UniversalLocation","XcmConfig","XcmOriginToTransactDispatchOrigin","XcmRouter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_currency_location","contains","convert","convert","convert","convert","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dot_per_second","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","filter","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_fee_per_second","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","non_canonical_currency_location","take_revenue","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","xcm_executor"],"q":[[0,"interlay_runtime_parachain"],[5469,"interlay_runtime_parachain::BtcRelayCall"],[5473,"interlay_runtime_parachain::NominationEvent"],[5481,"interlay_runtime_parachain::TimestampCall"],[5482,"interlay_runtime_parachain::api"],[5483,"interlay_runtime_parachain::constants"],[5485,"interlay_runtime_parachain::constants::currency"],[5574,"interlay_runtime_parachain::constants::time"],[5583,"interlay_runtime_parachain::dex"],[5960,"interlay_runtime_parachain::evm"],[6300,"interlay_runtime_parachain::token_distribution"],[6304,"interlay_runtime_parachain::weights"],[6345,"interlay_runtime_parachain::weights::annuity_escrow_annuity"],[6374,"interlay_runtime_parachain::weights::annuity_vault_annuity"],[6403,"interlay_runtime_parachain::weights::block_weights"],[6431,"interlay_runtime_parachain::weights::btc_relay"],[6461,"interlay_runtime_parachain::weights::clients_info"],[6488,"interlay_runtime_parachain::weights::collator_selection"],[6520,"interlay_runtime_parachain::weights::cumulus_pallet_xcmp_queue"],[6547,"interlay_runtime_parachain::weights::democracy"],[6586,"interlay_runtime_parachain::weights::dex_general"],[6626,"interlay_runtime_parachain::weights::dex_stable"],[6670,"interlay_runtime_parachain::weights::dex_swap_router"],[6696,"interlay_runtime_parachain::weights::escrow"],[6728,"interlay_runtime_parachain::weights::extrinsic_weights"],[6756,"interlay_runtime_parachain::weights::farming"],[6787,"interlay_runtime_parachain::weights::fee"],[6820,"interlay_runtime_parachain::weights::frame_system"],[6852,"interlay_runtime_parachain::weights::issue"],[6886,"interlay_runtime_parachain::weights::loans"],[6932,"interlay_runtime_parachain::weights::nomination"],[6963,"interlay_runtime_parachain::weights::oracle"],[6992,"interlay_runtime_parachain::weights::orml_asset_registry"],[7020,"interlay_runtime_parachain::weights::orml_tokens"],[7050,"interlay_runtime_parachain::weights::orml_vesting"],[7078,"interlay_runtime_parachain::weights::pallet_collective"],[7113,"interlay_runtime_parachain::weights::pallet_identity"],[7154,"interlay_runtime_parachain::weights::pallet_membership"],[7186,"interlay_runtime_parachain::weights::pallet_multisig"],[7218,"interlay_runtime_parachain::weights::pallet_preimage"],[7255,"interlay_runtime_parachain::weights::pallet_proxy"],[7290,"interlay_runtime_parachain::weights::pallet_scheduler"],[7327,"interlay_runtime_parachain::weights::pallet_timestamp"],[7354,"interlay_runtime_parachain::weights::pallet_utility"],[7384,"interlay_runtime_parachain::weights::pallet_xcm"],[7425,"interlay_runtime_parachain::weights::pallet_xcm_benchmarks_fungible"],[7456,"interlay_runtime_parachain::weights::pallet_xcm_benchmarks_generic"],[7510,"interlay_runtime_parachain::weights::redeem"],[7542,"interlay_runtime_parachain::weights::replace"],[7574,"interlay_runtime_parachain::weights::security"],[7601,"interlay_runtime_parachain::weights::supply"],[7628,"interlay_runtime_parachain::weights::tx_pause"],[7655,"interlay_runtime_parachain::weights::vault_registry"],[7691,"interlay_runtime_parachain::xcm_config"]],"d":["Some way of identifying an account on the chain. We …","The adjustment variable of the runtime. Higher values will …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","","","Data describing the asset properties.","","","","","","","","","","An Aura authority identifier using S/R 25519 as its crypto.","","","","","","","Balance of an account.","a wrapper around a balance, used in RPC to workaround a …","","","","","","","Block type as expected by this runtime.","","BlockId type as expected by this runtime.","An index to a block.","","Contains a variant per dispatchable extrinsic that this …","Complex storage builder stuff.","Extrinsic type that has already been checked.","","","","","","","","","","","","We allow root and the Relay Chain council to execute …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generalized group of dispatch types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>Contains</code> implementation that contains every value.","Executive: handles dispatch to the various modules.","","","","","","","","","","","","","","","","","","","","A fixed point number representation in the range. <em>Fixed </em>…","","","A trait for querying a single value from a type.","","","","","","","A hash of some data used by the chain.","Block header type as expected by this runtime.","The full identification of a key owner and the stash …","","","","","Implementor of <code>WeightToFee</code> that maps one unit of weight to …","","","","","","","","Something which can compute and check proofs of a …","","","","","","","","","","","","An identifier for a lock. Used for disambiguating …","The maximal weight in all dimensions.","We allow for 0.5 seconds of compute with a 12 second …","A mandatory dispatch. These kinds of dispatch are always …","","","","","","","","","","","","","","","","","","","","","","","Minimum amount of the multiplier. This value cannot be too …","","An instant or duration in time.","","","","","","","","","","","","","The <code>Event</code> enum of this pallet","","","Index of a transaction in the chain. 32-bit should be …","A normal dispatch.","A <code>Contains</code> implementation that contains no value.","","An operational dispatch.","This value increases the priority of <code>Operational</code> …","","","","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","","","","","","A fixed point representation of a number in the range [0, 1…","","A fixed point representation of a number in the range [0, 1…","","","","","","","","","","","","","The proof of membership itself.","","","","","","","The type used to represent the kinds of proxying allowed.","The type that get/take return.","","","","","","","","","","","","","","","","","","By default, Substrate uses RocksDB, so this will be the …","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","","","","","","","","","","","","","","","","","","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","The signed fixed point type.","The <code>Inner</code> type of the <code>SignedFixedPoint</code>.","","","","A trait for working with macro-generated storage values …","","","","","","","","","","","","","","","","","","","Target Spacing: 10 minutes (600 seconds)","The portion of the <code>NORMAL_DISPATCH_RATIO</code> that we adjust …","","","","","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","The unsigned fixed point type.","The <code>Inner</code> type of the <code>UnsignedFixedPoint</code>.","","","","","This runtime version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the <em>active</em> block height when this request was opened","","","","","","Add a value and return the result.","","","","","Constant version of Add for <code>proof_size</code> component with u64.","Constant version of Add for <code>ref_time</code> component with u64.","","Returns an array containing all dispatch classes.","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","","","the number of tokens that will be transferred to the user …","","the amount of tokens to be replaced","","total amount of BTC for the vault to send","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","","","Append the given item to the value in the storage.","","","","","Assimilate the storage for this module into pre-existing …the vault’s Bitcoin deposit address","the user’s Bitcoin address for payment verification","the Bitcoin address of the new vault","the highest recorded height in the BTC-Relay (at time of …","the highest recorded height in the BTC-Relay (at time of …","the highest recorded height in the BTC-Relay (at time of …","the vault’s Bitcoin public key (when this request was …","","","Build the storage out of this builder.","","","","","","","","","","Check a proof of membership on-chain. Return <code>Some</code> iff the …","","Try to increase <code>self</code> by <code>amount</code> via checked addition.","Checked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …","","","","","Checked <code>Weight</code> scalar division. Computes …","","Calculates how many <code>other</code> fit into <code>self</code>.","Checked <code>Weight</code> scalar multiplication. Computes …","","","","Try to reduce <code>self</code> by <code>amount</code> via checked subtraction.","Divide by another value with custom rounding, returning …","","Checked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","additional collateral to cover replacement","","","","","","","","","","","","","","","Divide by another value, returning <code>None</code> in the case of an …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value with custom rounding, returning …","A set of constant values used in the kintsugi runtime.","Construct a runtime, with the given name and the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","Read the length of the storage value without decoding the …","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thingonstant version of Div with u64.","","Divide by a value and return the resultoes the value (explicitly) exist in storage?","","","","","the number of tokens that will be transferred to the fee …","total redeem fees - taken from request amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Convert to runtime origin with caller being system signed …","Convert to runtime origin using […","Convert to runtime origin using […","Convert to runtime origin using […","Returns the argument unchanged.","Convert to runtime origin using […","","Convert to runtime origin, using as filter: …","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct <code>Weight</code> from the same weight for all parts.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","Convert from a <code>float</code> value.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","","Create a new instance from the given <code>inner</code> value.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Construct <code>Weight</code> from weight parts, namely reference time …","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Convert from a <code>Perbill</code> value.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Calculate an approximation of a rational.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","Calculate an approximation of a rational with custom …","","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Creates self from a <code>u32</code>.","","","Generate a set of keys with optionally using the given …","","Return the current value.","Load the value from the provided storage instance.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the collateral held for spam prevention","the collateral held for spam prevention","The currency used for the griefing collateral","","","Get the storage key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::initialize</code>.","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codettempt to convert into a <code>PerThing</code>. This will always …","Return the instance’s inner value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into a <code>Perbill</code> value. Will saturate if above one …","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","Returns the key for this parameter type.","","Clear the storage value.","","","Get the aggressive max of <code>self</code> and <code>other</code> weight.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the conservative min of <code>self</code> and <code>other</code> weight.","","","","","","","","","","","Constant version of Mul with u64.","","Multiply by a value and return the result.","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","Mutate the value","Mutate the value. Deletes the item if mutated to a <code>None</code>.","","","","The version information used to identify this runtime when …","Negate the value.","","Create a call with the variant <code>initialize</code>.","Create a call with the variant <code>set</code>.","Create a call with the variant <code>store_block_header</code>.","the vault which is replacing the old vault","","Returns an array of all dispatch classes except <code>Mandatory</code>.","Create with system none origin and …","","","the vault which has requested to be replaced","","","","","See <code>PerThing::one</code>","See <code>PerThing::one</code>","","the <em>active</em> block height when this request was opened","the <em>active</em> block height when this request was opened","","","","Create new implementations of the <code>Get</code> trait.","","","","","","","","","","","the issue period when this request was opened","the redeem period when this request was opened","the replace period when this request was opened","","","","","","","premium redeem amount in collateral","","","","Return the storage size part of the weight.","Return a mutable reference to the storage size part of the …","Prove membership of a key owner in the current block-state.","Store a value under this key into the provided storage …","","","","","","","the account redeeming tokens (for BTC)","Return the reference time part of the weight.","Return a mutable reference to the reference time part of …","","","the account issuing tokens","","Create with system root origin and …","","Increment <code>Weight</code> by <code>amount</code> via saturating addition.","Saturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating <code>Weight</code> scalar division. Computes …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating <code>Weight</code> scalar multiplication. Computes …","","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating <code>Weight</code> scalar exponentiation. Computes …","","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Reduce <code>Weight</code> by <code>amount</code> via saturating subtraction.","Saturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","","","Store a value under this key into the provided storage …","Set the value of this parameter type in the storage.","See <code>Pallet::set</code>.","","","Set the storage size part of the weight.","Set the reference time part of the weight.","Create with system signed origin and …","","","","","","","","","","","","","","","","","","","","","","Take the square root of a positive value.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","the status of this issue request","the status of this redeem request","the status of this replace request","","See <code>Pallet::store_block_header</code>.","","Subtract a value and return the result.","","","","","Constant version of Sub for <code>proof_size</code> component with u64.","Constant version of Sub for <code>ref_time</code> component with u64.","","","","","","","Take a value from storage, removing it afterwards.","","","","","","Convert into a <code>float</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","amount the vault should spend on the bitcoin inclusion fee …","Translate a value from some previous type (<code>O</code>) to the …","","Try to add some <code>other</code> weight while upholding the <code>limit</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to get the underlying value from the provided storage …ttempt to convert into a <code>PerThing</code>. This will succeed iff …","Mutate the value if closure returns <code>Ok</code>","Mutate the value if closure returns <code>Ok</code>. Deletes the item …","","","Compute the square root, rounding as desired. If it …the vault associated with this issue request","the vault associated with this redeem request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a <code>Weight</code> where all fields are zero.","","","","See <code>PerThing::zero</code>.","See <code>PerThing::zero</code>.","","","","","","","","","","","","","","","","Money matters.","Time and blocks.","Balance of an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeets the ideal block fullness to 50%. If the block weight …","","","","","","The amount of gas per pov, taken from Moonbeam: …","Get the “action” (call or create) of an Ethereum …","","","","","Set the EVM chain ID based on the parachain ID","Approximate ratio of the amount of Weight per Gas …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key for this parameter type.","","","","Set the value of this parameter type in the storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Autogenerated weights for annuity","Autogenerated weights for annuity","THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK …","Autogenerated weights for btc_relay","Autogenerated weights for clients_info","Autogenerated weights for collator_selection","Autogenerated weights for cumulus_pallet_xcmp_queue","Autogenerated weights for democracy","Autogenerated weights for dex_general","Autogenerated weights for dex_stable","Autogenerated weights for dex_swap_router","Autogenerated weights for escrow","THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK …","Autogenerated weights for farming","Autogenerated weights for fee","Autogenerated weights for frame_system","Autogenerated weights for issue","Autogenerated weights for loans","Autogenerated weights for nomination","Autogenerated weights for oracle","Autogenerated weights for orml_asset_registry","Autogenerated weights for orml_tokens","Autogenerated weights for orml_vesting","Autogenerated weights for pallet_collective","Autogenerated weights for pallet_identity","Autogenerated weights for pallet_membership","Autogenerated weights for pallet_multisig","Autogenerated weights for pallet_preimage","Autogenerated weights for pallet_proxy","Autogenerated weights for pallet_scheduler","Autogenerated weights for pallet_timestamp","Autogenerated weights for pallet_utility","Autogenerated weights for pallet_xcm","Autogenerated weights for pallet_xcm_benchmarks::fungible","Autogenerated weights for pallet_xcm_benchmarks::generic","Autogenerated weights for redeem","Autogenerated weights for replace","Autogenerated weights for security","Autogenerated weights for supply","Autogenerated weights for tx_pause","Autogenerated weights for vault_registry","Weights for annuity using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Storage: Tokens Accounts (r:1 w:0) Proof: Tokens Accounts …","","Storage: EscrowRewards Stake (r:1 w:0) Proof: …","Weights for annuity using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Storage: Tokens Accounts (r:1 w:0) Proof: Tokens Accounts …","","","Time to execute an empty block. Calculated by multiplying …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Weights for btc_relay using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Storage: BTCRelay BestBlock (r:1 w:1) Proof: BTCRelay …","Calls <code>U::from(self)</code>.","","","","","","Storage: BTCRelay ChainCounter (r:1 w:0) Proof: BTCRelay …","Storage: BTCRelay ChainCounter (r:1 w:1) Proof: BTCRelay …","Storage: BTCRelay ChainCounter (r:1 w:1) Proof: BTCRelay …","Storage: BTCRelay ChainCounter (r:1 w:0) Proof: BTCRelay …","","","","","","","","Weights for clients_info using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: ClientsInfo CurrentClientReleases (r:0 w:1) …","Storage: ClientsInfo PendingClientReleases (r:0 w:1) …","","","","","","","","Weights for collator_selection using the Substrate node …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: CollatorSelection Candidates (r:1 w:1) Proof: …","Storage: CollatorSelection Candidates (r:1 w:0) Proof: …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","Storage: CollatorSelection Candidates (r:1 w:1) Proof: …","Storage: CollatorSelection CandidacyBond (r:0 w:1) Proof: …","Storage: CollatorSelection DesiredCandidates (r:0 w:1) …","Storage: Session NextKeys (r:100 w:0) Proof Skipped: …","","","","","","","","Weights for cumulus_pallet_xcmp_queue using the Substrate …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: XcmpQueue QueueConfig (r:1 w:1) Proof Skipped: …","Storage: XcmpQueue QueueConfig (r:1 w:1) Proof Skipped: …","","","","","","","","Weights for democracy using the Substrate node and …","","","Storage: Democracy PublicProps (r:1 w:1) Proof: Democracy …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Storage: Democracy PublicProps (r:0 w:1) Proof: Democracy …","","","","Storage: Democracy PublicProps (r:1 w:1) Proof: Democracy …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: Democracy LowestUnbaked (r:1 w:0) Proof: …","Storage: Democracy LowestUnbaked (r:1 w:0) Proof: …","Storage: Democracy LowestUnbaked (r:1 w:0) Proof: …","Storage: Democracy PublicPropCount (r:1 w:1) Proof: …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Storage: Democracy DepositOf (r:1 w:1) Proof: Democracy …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","","","","","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","","Weights for dex_general using the Substrate node and …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral BootstrapRewards (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:0) Proof: …","Storage: DexGeneral BootstrapLimits (r:1 w:0) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral BootstrapRewards (r:1 w:1) Proof: …","","","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral FeeMeta (r:1 w:1) Proof: DexGeneral …","Storage: DexGeneral FeeMeta (r:1 w:1) Proof: DexGeneral …","Storage: Tokens Accounts (r:20 w:20) Proof: Tokens …","Storage: Tokens Accounts (r:20 w:20) Proof: Tokens …","","","","","","","","Weights for dex_stable using the Substrate node and …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","","","Storage: DexStable NextPoolId (r:1 w:1) Proof: DexStable …","Storage: DexStable LpCurrencies (r:2 w:1) Proof: DexStable …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Timestamp Now (r:1 w:0) Proof: Timestamp Now …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","","","","","","","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Weights for dex_swap_router using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The range of component <code>a</code> is <code>[2, 10]</code>.","","Weights for escrow using the Substrate node and …","","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","","Calls <code>U::from(self)</code>.","","","","","","Storage: Escrow Blocks (r:0 w:1) Proof: Escrow Blocks …","Storage: Escrow Limits (r:0 w:1) Proof: Escrow Limits …","","","","","","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","Time to execute a NO-OP extrinsic, for example …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Weights for farming using the Substrate node and …","","","Storage: FarmingRewards Stake (r:1 w:0) Proof: …","Storage: FarmingRewards RewardCurrencies (r:1 w:0) Proof: …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Farming RewardSchedules (r:5 w:0) Proof: Farming …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","","","","","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","Storage: FarmingRewards RewardCurrencies (r:1 w:0) Proof: …","Weights for fee using the Substrate node and recommended …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Nomination Vaults (r:1 w:0) Proof: Nomination …","Storage: Fee IssueFee (r:0 w:1) Proof: Fee IssueFee …","Storage: Fee IssueGriefingCollateral (r:0 w:1) Proof: Fee …","Storage: Fee PremiumRedeemFee (r:0 w:1) Proof: Fee …","Storage: Fee PunishmentFee (r:0 w:1) Proof: Fee …","Storage: Fee RedeemFee (r:0 w:1) Proof: Fee RedeemFee …","Storage: Fee ReplaceGriefingCollateral (r:0 w:1) Proof: …","","","","","","","","Storage: VaultCapacity Stake (r:1 w:0) Proof: …","Weights for frame_system using the Substrate node and …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","The range of component <code>b</code> is <code>[0, 3932160]</code>.","The range of component <code>b</code> is <code>[0, 3932160]</code>.","Storage: System Digest (r:1 w:1) Proof Skipped: System …","Storage: System Digest (r:1 w:1) Proof Skipped: System …","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","","","","","","","","Weights for issue using the Substrate node and recommended …","","","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","","","","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: BTCRelay StartBlockHeight (r:1 w:0) Proof: …","Storage: Issue IssuePeriod (r:0 w:1) Proof: Issue …","","","","","","","","Weights for loans using the Substrate node and recommended …","Storage: Loans Markets (r:1 w:1) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:1) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans RewardSupplyState (r:1 w:1) Proof: Loans …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","","","","Storage: Loans UnderlyingAssetId (r:1 w:1) Proof: Loans …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Timestamp Now (r:1 w:0) Proof: Timestamp Now …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","","","","","","","Storage: Loans Markets (r:1 w:1) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:1 w:1) Proof: Loans Markets …","","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Weights for nomination using the Substrate node and …","","","Storage: VaultStaking Nonce (r:1 w:0) Proof: VaultStaking …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Nomination NominationEnabled (r:1 w:0) Proof: …","Storage: Nomination Vaults (r:1 w:1) Proof: Nomination …","Storage: Nomination NominationEnabled (r:0 w:1) Proof: …","Storage: Nomination NominationLimit (r:0 w:1) Proof: …","","","","","","","","Storage: VaultStaking Nonce (r:1 w:0) Proof: VaultStaking …","Weights for oracle using the Substrate node and …","","","","","","Storage: Oracle AuthorizedOracles (r:1 w:0) Proof: Oracle …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Storage: Oracle AuthorizedOracles (r:0 w:1) Proof: Oracle …","Calls <code>U::from(self)</code>.","","","","","","Storage: Oracle RawValuesUpdated (r:1000 w:999) Proof: …","Storage: Oracle AuthorizedOracles (r:0 w:1) Proof: Oracle …","","","","","","","","Weights for orml_asset_registry using the Substrate node …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: AssetRegistry LastAssetId (r:1 w:1) Proof …","","","","","","","","Storage: AssetRegistry Metadata (r:1 w:1) Proof Skipped: …","","Weights for orml_tokens using the Substrate node and …","","","","","","Storage: Loans UnderlyingAssetId (r:1 w:0) Proof: Loans …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","Storage: Loans UnderlyingAssetId (r:1 w:0) Proof: Loans …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","Storage: Loans UnderlyingAssetId (r:1 w:0) Proof: Loans …","","","","","","","","Weights for orml_vesting using the Substrate node and …","","","Storage: Vesting VestingSchedules (r:1 w:1) Proof: Vesting …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","Storage: Vesting VestingSchedules (r:1 w:1) Proof: Vesting …","","Weights for pallet_collective using the Substrate node and …","","","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","","","Storage: TechnicalCommittee Proposals (r:1 w:1) Proof …","","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","Storage: TechnicalCommittee Members (r:1 w:1) Proof …","","","","","","","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","","Weights for pallet_identity using the Substrate node and …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","","","Storage: Identity IdentityOf (r:1 w:1) Proof: Identity …","Storage: Identity SubsOf (r:1 w:1) Proof: Identity SubsOf …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: Identity SubsOf (r:1 w:1) Proof: Identity SubsOf …","Storage: Identity Registrars (r:1 w:0) Proof: Identity …","Storage: Identity SuperOf (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","Storage: Identity Registrars (r:1 w:0) Proof: Identity …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","","","","","","","","Weights for pallet_membership using the Substrate node and …","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","","","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","Storage: TechnicalMembership Prime (r:0 w:1) Proof: …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","Storage: TechnicalMembership Members (r:1 w:0) Proof: …","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","","","","","","","","Weights for pallet_multisig using the Substrate node and …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","The range of component <code>z</code> is <code>[0, 10000]</code>.","","","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Weights for pallet_preimage using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","","","","","","","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","","Weights for pallet_proxy using the Substrate node and …","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:0) Proof: Proxy Proxies …","","","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:0) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:0) Proof: Proxy Proxies …","Storage: Proxy Announcements (r:1 w:1) Proof: Proxy …","Storage: Proxy Announcements (r:1 w:1) Proof: Proxy …","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","","","","","","","","Weights for pallet_scheduler using the Substrate node and …","","","Storage: Scheduler Agenda (r:1 w:1) Proof: Scheduler …","Storage: Scheduler Lookup (r:1 w:1) Proof: Scheduler …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Scheduler Agenda (r:1 w:1) Proof: Scheduler …","Storage: Scheduler Lookup (r:1 w:1) Proof: Scheduler …","Storage: Scheduler Agenda (r:1 w:1) Proof: Scheduler …","Storage: Scheduler IncompleteSince (r:1 w:1) Proof: …","","Storage: Preimage PreimageFor (r:1 w:1) Proof: Preimage …","Storage: Scheduler Lookup (r:0 w:1) Proof: Scheduler …","","","","","","","","","Weights for pallet_timestamp using the Substrate node and …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","Storage: Timestamp Now (r:1 w:1) Proof: Timestamp Now …","","","","","","","","Weights for pallet_utility using the Substrate node and …","","The range of component <code>c</code> is <code>[0, 1000]</code>.","The range of component <code>c</code> is <code>[0, 1000]</code>.","","","","","","","The range of component <code>c</code> is <code>[0, 1000]</code>.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Weights for pallet_xcm using the Substrate node and …","Storage: PolkadotXcm VersionNotifyTargets (r:5 w:0) Proof …","","","","","","Storage: Benchmark Override (r:0 w:0) Proof Skipped: …","Storage: PolkadotXcm SafeXcmVersion (r:0 w:1) Proof …","Storage: PolkadotXcm VersionNotifiers (r:1 w:1) Proof …","Storage: PolkadotXcm XcmExecutionSuspended (r:0 w:1) Proof …","Storage: PolkadotXcm VersionNotifiers (r:1 w:1) Proof …","Storage: PolkadotXcm SupportedVersion (r:0 w:1) Proof …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: PolkadotXcm VersionNotifyTargets (r:4 w:2) Proof …","Storage: PolkadotXcm SupportedVersion (r:4 w:2) Proof …","Storage: PolkadotXcm VersionNotifiers (r:4 w:2) Proof …","Storage: PolkadotXcm VersionNotifyTargets (r:4 w:2) Proof …","Storage: PolkadotXcm VersionNotifyTargets (r:2 w:1) Proof …","Storage: PolkadotXcm VersionNotifyTargets (r:3 w:0) Proof …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: PolkadotXcm SupportedVersion (r:1 w:0) Proof …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","","","","","","","","Weights for pallet_xcm_benchmarks::fungible using the …","","","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Calls <code>U::from(self)</code>.","","","","","","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","","","","","","Storage: UnknownTokens ConcreteFungibleBalances (r:1 w:0) …","Weights for pallet_xcm_benchmarks::generic using the …","","","","","Storage: PolkadotXcm AssetTraps (r:1 w:1) Proof Skipped: …","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Calls <code>U::from(self)</code>.","","","","","","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: PolkadotXcm Queries (r:1 w:0) Proof Skipped: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","","","","","Storage: PolkadotXcm VersionNotifyTargets (r:1 w:1) Proof …","","","","","","","","","","Storage: PolkadotXcm VersionNotifyTargets (r:0 w:1) Proof …","","Weights for redeem using the Substrate node and …","","","Storage: <code>Redeem::RedeemRequests</code> (r:1 w:1) Proof: …","Storage: <code>Redeem::RedeemRequests</code> (r:1 w:1) Proof: …","","","","Storage: <code>Redeem::RedeemRequests</code> (r:1 w:1) Proof: …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: <code>Tokens::Accounts</code> (r:3 w:3) Proof: <code>Tokens::Accounts</code>…","Storage: <code>Tokens::Accounts</code> (r:2 w:1) Proof: <code>Tokens::Accounts</code>…","Storage: <code>VaultRegistry::Vaults</code> (r:1 w:1) Proof: …","Storage: <code>Redeem::RedeemPeriod</code> (r:0 w:1) Proof: …","","","","","","","","Weights for replace using the Substrate node and …","Storage: VaultRegistry Vaults (r:2 w:2) Proof: …","","","Storage: Replace ReplaceRequests (r:1 w:1) Proof: Replace …","","","","Storage: Replace ReplaceRequests (r:1 w:1) Proof: Replace …","Storage: Replace ReplaceRequests (r:1 w:1) Proof: Replace …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Storage: Replace ReplacePeriod (r:0 w:1) Proof: Replace …","","","","","","","","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Weights for security using the Substrate node and …","Storage: Security IsDeactivated (r:0 w:1) Proof: Security …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Security IsDeactivated (r:1 w:0) Proof: Security …","","","","","","","","Weights for supply using the Substrate node and …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: Tokens TotalIssuance (r:1 w:1) Proof: Tokens …","Storage: Supply Inflation (r:0 w:1) Proof: Supply …","","","","","","","","Weights for tx_pause using the Substrate node and …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Storage: TxPause PausedCalls (r:2 w:1) Proof: TxPause …","","","","","","","Storage: TxPause PausedCalls (r:2 w:1) Proof: TxPause …","","Weights for vault_registry using the Substrate node and …","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Storage: VaultRegistry VaultBitcoinPublicKey (r:1 w:1) …","Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0) …","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0) …","Storage: VaultRegistry LiquidationCollateralThreshold (r:0 …","Storage: VaultRegistry MinimumCollateralVault (r:0 w:1) …","Storage: VaultRegistry PremiumRedeemThreshold (r:0 w:1) …","Storage: VaultRegistry SecureCollateralThreshold (r:0 w:1) …","Storage: VaultRegistry SystemCollateralCeiling (r:0 w:1) …","","","","","","","","","","","","","","","","","","No local origins on this chain are allowed to dispatch XCM …","","","","","","","","","","A call filter for the XCM Transact instruction. This is a …","","","","","","","This is the type we use to convert an (incoming) XCM …","The means for routing XCM messages which are not for local …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,71,0,0,0,73,96,33,0,0,0,0,0,0,0,0,73,96,33,0,0,0,0,0,73,33,0,0,0,0,0,0,0,0,0,0,0,73,96,33,0,0,73,96,33,0,0,0,0,73,96,36,33,0,96,0,0,0,0,0,73,96,33,0,61,0,73,96,33,0,73,96,33,0,73,96,33,0,0,73,96,33,0,0,73,96,33,0,0,0,0,0,0,0,0,73,96,33,0,73,96,33,0,0,0,0,0,73,96,0,0,73,96,36,33,0,0,0,0,0,0,73,96,33,0,0,0,73,96,0,0,96,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,346,0,73,96,33,0,0,0,73,96,33,0,0,0,0,0,0,0,0,73,96,33,0,0,0,0,8,0,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,33,0,73,96,33,0,73,96,33,0,0,61,61,0,57,0,0,57,0,0,73,96,33,0,0,0,0,0,0,0,0,73,96,33,0,0,0,0,0,0,73,96,36,33,0,0,73,96,33,0,0,346,0,73,96,33,0,0,0,347,0,0,0,73,96,33,0,0,0,73,96,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,96,33,0,73,96,33,0,73,96,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,96,33,0,0,73,96,33,0,0,0,0,73,96,33,0,0,0,0,73,96,36,33,0,0,0,0,0,0,73,96,33,0,0,33,0,0,0,73,96,33,0,0,0,0,0,73,0,0,0,73,96,33,0,0,73,96,0,0,0,73,96,33,0,0,73,96,33,0,0,0,0,0,73,96,0,0,73,96,33,0,0,0,0,73,96,0,0,73,96,0,0,73,96,33,0,36,0,0,0,0,0,61,0,73,96,33,0,73,96,33,8,59,61,66,16,69,9,21,19,10,11,70,71,72,73,12,36,33,74,75,76,77,78,57,19,72,72,72,8,9,9,10,11,8,12,8,8,66,57,8,8,8,8,16,19,16,44,19,21,21,8,8,8,8,8,0,25,347,72,33,36,40,348,40,70,40,40,72,72,72,40,0,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,16,21,19,16,21,19,16,40,40,348,72,72,72,72,72,72,12,72,72,346,33,8,8,8,9,10,11,8,9,8,8,9,10,11,8,9,8,8,9,10,11,8,8,44,9,10,11,71,57,8,59,61,66,16,69,9,21,19,10,11,70,71,72,73,12,36,33,74,75,76,77,78,57,8,59,61,66,16,69,9,21,19,10,11,70,71,72,73,12,36,33,74,75,76,77,78,57,9,10,11,71,74,75,76,77,19,19,72,40,72,9,10,11,71,74,75,76,77,72,72,72,9,9,9,0,0,452,350,353,450,450,450,451,451,451,360,72,78,78,449,72,72,72,72,72,454,66,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,9,10,11,70,347,72,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,10,10,11,11,8,44,9,10,11,71,40,78,57,9,10,11,71,74,75,76,77,9,10,11,71,74,75,76,77,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,71,74,75,76,77,9,10,11,71,74,75,76,77,40,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,8,16,44,9,21,19,10,11,70,40,57,0,33,33,59,69,33,358,359,8,8,9,9,10,10,11,11,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,72,44,9,10,11,70,8,59,61,66,16,44,69,9,9,21,19,10,10,11,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,57,72,8,59,61,66,16,44,69,9,21,19,10,11,70,71,72,73,36,33,74,75,76,77,57,8,8,8,8,59,59,59,59,61,61,61,61,66,66,66,66,44,44,44,44,69,69,69,69,9,9,9,9,19,19,19,19,10,10,10,10,11,11,11,11,70,70,70,70,71,71,71,71,72,72,72,72,73,73,73,73,36,36,36,36,33,33,33,33,74,74,74,74,75,75,75,75,76,76,76,76,77,77,77,77,57,57,57,57,72,72,72,40,0,40,40,72,25,66,347,25,72,16,21,16,21,40,350,353,71,450,451,12,72,8,8,59,61,66,16,69,9,9,21,19,10,11,70,71,72,73,96,12,36,33,74,75,76,77,57,72,349,8,8,8,59,61,66,16,44,69,9,9,9,9,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,10,11,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,450,451,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,12,12,12,12,12,12,12,12,36,36,36,36,36,36,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,40,74,75,76,77,78,452,25,57,453,8,96,9,10,10,11,11,9,9,349,349,8,8,59,59,61,61,66,66,16,16,44,44,69,69,9,9,21,21,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,19,19,360,360,10,10,11,11,70,70,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,71,71,446,446,447,447,448,448,449,449,72,72,73,73,450,450,451,451,96,96,12,12,36,36,33,33,40,40,74,74,75,75,76,76,77,77,78,78,452,452,25,25,57,57,453,453,8,10,10,11,11,9,10,11,10,11,9,10,11,10,11,9,10,11,349,349,8,8,59,59,61,61,66,66,16,16,44,44,69,69,9,9,21,21,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,19,19,360,360,10,10,11,11,70,70,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,71,71,446,446,447,447,448,448,449,449,72,72,73,73,450,450,451,451,96,96,12,12,36,36,33,33,40,40,74,74,75,75,76,76,77,77,78,78,452,452,25,25,57,57,453,453,9,9,72,72,70,72,455,347,357,361,361,361,362,362,362,363,363,363,364,364,364,365,365,365,366,366,366,367,367,367,368,368,368,369,369,369,370,370,370,371,371,371,372,372,372,373,373,373,374,374,374,375,375,375,376,376,376,377,377,377,378,378,378,379,379,379,380,380,380,381,381,381,382,382,382,383,383,383,384,384,384,385,385,385,386,386,386,387,387,387,388,388,388,389,389,389,390,390,390,391,391,391,392,392,392,393,393,393,394,394,394,395,395,395,396,396,396,397,397,397,398,398,398,399,399,399,400,400,400,401,401,401,402,402,402,403,403,403,404,404,404,405,405,405,406,406,406,407,407,407,408,408,408,409,409,409,410,410,410,411,411,411,412,412,412,413,413,413,414,414,414,415,415,415,416,416,416,417,417,417,418,418,418,419,419,419,420,420,420,421,421,421,422,422,422,423,423,423,424,424,424,425,425,425,426,426,426,427,427,427,428,429,429,429,430,430,430,431,431,431,432,432,432,433,433,433,434,434,434,435,435,435,436,436,436,437,437,437,438,438,438,439,439,439,440,440,440,441,441,441,442,442,442,443,443,443,444,444,444,445,445,445,446,446,446,447,447,447,448,448,448,453,453,453,72,72,72,72,0,72,72,59,69,59,69,33,59,69,59,69,33,72,72,72,72,72,72,59,69,33,72,72,72,72,72,72,33,72,72,72,72,72,70,72,72,72,72,72,72,72,72,72,72,72,16,19,16,19,16,25,25,347,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,449,72,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,69,72,10,11,10,11,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,36,33,40,74,75,76,77,78,452,25,57,453,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,12,9,9,9,57,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,9,70,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,25,36,8,44,9,10,11,71,57,10,11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,71,8,9,10,10,11,11,40,375,70,347,40,66,8,8,16,9,21,19,10,11,71,36,74,75,76,77,8,8,9,9,10,10,11,11,72,72,72,72,72,72,8,8,8,9,9,10,10,11,11,449,8,8,9,9,10,10,10,11,11,11,10,11,10,11,347,347,454,449,66,0,9,9,69,59,69,19,40,57,12,12,72,19,356,351,9,10,10,11,11,16,21,40,40,40,0,9,10,11,71,74,75,76,77,8,72,16,21,19,40,10,11,72,33,21,21,0,8,25,8,8,346,347,72,72,72,72,25,40,21,8,8,25,40,16,12,12,12,8,8,9,10,10,11,11,8,10,11,8,9,10,11,8,9,10,11,10,11,10,11,10,11,8,8,9,10,10,11,11,8,16,44,9,21,19,10,11,70,40,57,40,347,375,59,25,12,8,8,12,12,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,57,72,9,10,11,16,21,19,72,69,8,9,9,10,11,8,8,8,40,40,454,66,40,36,347,9,10,11,40,40,9,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,69,9,21,19,10,11,70,71,72,73,12,36,33,74,75,76,77,78,57,8,9,0,40,72,21,21,347,9,8,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,347,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,450,451,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,12,36,33,40,74,75,76,77,78,452,25,57,453,9,347,347,352,355,9,12,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,8,59,61,66,16,44,69,9,21,19,10,11,70,71,73,96,36,33,74,75,76,77,57,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,8,59,61,66,16,44,69,9,21,19,10,11,70,71,72,73,96,36,33,74,75,76,77,57,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,8,9,10,11,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,44,9,10,11,70,33,72,72,16,21,40,72,72,40,349,8,59,61,66,16,44,69,9,21,350,351,352,353,354,355,356,357,358,359,19,360,10,11,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,71,446,447,448,449,72,73,450,451,96,12,36,33,40,74,75,76,77,78,452,25,57,453,8,349,0,358,359,72,0,8,8,9,10,10,11,11,456,457,456,457,458,459,458,459,460,461,458,459,462,0,0,0,0,0,0,0,0,47,0,0,47,47,0,0,0,0,47,0,47,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,294,294,294,294,294,294,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,294,294,294,294,294,294,294,294,294,294,294,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,294,463,464,465,466,467,468,469,470,471,472,473,294,294,294,294,294,294,294,294,463,464,465,466,467,468,469,470,471,472,473,294,294,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,472,472,473,473,294,294,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,472,472,473,473,474,465,475,463,468,468,468,469,469,469,470,470,470,471,471,471,472,472,472,473,473,473,294,294,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,467,294,294,294,294,294,294,294,294,294,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,294,294,294,463,464,465,466,467,468,469,470,471,472,473,294,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,294,463,464,465,466,467,468,469,470,471,472,473,476,464,477,466,477,466,294,463,464,465,466,467,468,469,470,471,472,473,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,478,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,481,337,479,480,481,482,483,484,485,486,487,488,489,337,337,479,479,480,480,481,481,482,482,483,483,484,484,485,485,486,486,487,487,488,488,489,489,337,337,479,479,480,480,481,481,482,482,483,483,484,484,485,485,486,486,487,487,488,488,489,489,482,482,482,483,483,483,484,484,484,485,485,485,486,486,486,487,487,487,488,488,488,489,489,489,479,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,485,479,337,480,485,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,337,479,480,481,482,483,484,485,486,487,488,489,479,337,337,479,480,481,482,483,484,485,486,487,488,489,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,0,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,0,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,0,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,0,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,0,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,0,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,0,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,0,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,0,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,0,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,0,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,0,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,0,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,0,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,0,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,0,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,0,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,0,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,0,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,0,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,0,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,0,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,0,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,0,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,0,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,0,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,0,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,0,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,0,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,0,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,0,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,0,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,0,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,0,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,0,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,0,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,0,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,0,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,0,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,0,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,0,534,535,535,535,536,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,0,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,534,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,531,532,532,533,533,534,534,535,535,536,536,537,537,538,538,539,539,540,540,541,541,542,542,543,543,544,544,545,545,546,546,547,547,548,548,549,549,550,550,551,551,552,552,553,553,531,531,532,532,533,533,534,534,535,535,536,536,537,537,538,538,539,539,540,540,541,541,542,542,543,543,544,544,545,545,546,546,547,547,548,548,549,549,550,550,551,551,552,552,553,553,537,537,537,538,538,538,539,539,539,540,540,540,541,541,541,542,542,542,543,543,543,544,544,544,545,545,545,546,546,546,547,547,547,548,548,548,549,549,549,550,550,550,551,551,551,552,552,552,553,533,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,0,532,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,0],"fc":[2,3,5,7,148,2384,2385],"p":[[3,"Private"],[3,"H160"],[3,"Basic"],[15,"u8"],[3,"Vec"],[6,"AccountId"],[6,"Nonce"],[3,"Weight"],[3,"FixedU128"],[3,"Permill"],[3,"Perbill"],[3,"RuntimeOrigin"],[8,"Fn"],[15,"u64"],[15,"bool"],[3,"IssueRequest"],[8,"Config"],[3,"Amount"],[3,"ReplaceRequest"],[8,"Config"],[3,"RedeemRequest"],[8,"Config"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[8,"Encode"],[8,"EncodeLike"],[6,"ApplyExtrinsicResult"],[4,"RuntimeCall"],[6,"PostDispatchInfoOf"],[6,"DispatchResultWithInfo"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"Storage"],[3,"String"],[3,"RuntimeGenesisConfig"],[6,"AuraId"],[6,"BlockNumber"],[6,"Balance"],[3,"BalanceWrapper"],[3,"Global"],[6,"StablePoolId"],[4,"CurrencyId"],[6,"AssetBalance"],[3,"U256"],[6,"CallInfo"],[4,"DispatchError"],[6,"Block"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"TransactionValidityError"],[4,"SignedRounding"],[4,"DispatchClass"],[8,"Config"],[4,"TimestampCall"],[8,"Config"],[4,"NominationEvent"],[8,"Clone"],[8,"Parameter"],[8,"Member"],[8,"TypeInfo"],[3,"AssetMetadata"],[8,"Copy"],[8,"Config"],[4,"BtcRelayCall"],[3,"SessionKeys"],[4,"ProxyType"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[3,"TransactionConverter"],[4,"Ordering"],[3,"CollationInfo"],[3,"VaultId"],[3,"ApiRef"],[3,"MultiAsset"],[3,"MultiLocation"],[4,"TransactionV2"],[6,"UncheckedExtrinsic"],[3,"OpaqueExtrinsic"],[3,"CrateVersion"],[6,"CreateInfo"],[6,"BlockV2"],[4,"ReceiptV3"],[3,"TransactionStatus"],[8,"Input"],[3,"Error"],[8,"Decode"],[4,"RuntimeError"],[15,"u128"],[15,"usize"],[8,"Default"],[8,"Deserializer"],[8,"Deserialize"],[8,"FromStr"],[6,"DispatchResultWithPostInfo"],[3,"DispatchErrorWithPostInfo"],[3,"PostDispatchInfo"],[6,"DispatchResult"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[6,"UnsignedFixedPoint"],[8,"FnOnce"],[3,"StorageProof"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[6,"Result"],[8,"PerThing"],[3,"Compact"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"Instance1"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Origin"],[6,"Origin"],[6,"Origin"],[4,"Origin"],[6,"Origin"],[6,"ParachainSystem"],[6,"CallableCallFor"],[6,"Ethereum"],[6,"System"],[6,"Timestamp"],[6,"Farming"],[6,"XTokens"],[6,"TxPause"],[6,"XcmpQueue"],[6,"Nomination"],[6,"EscrowAnnuity"],[6,"Fee"],[6,"DexGeneral"],[6,"AssetRegistry"],[6,"TechnicalMembership"],[6,"BTCRelay"],[6,"DexStable"],[6,"Utility"],[6,"Redeem"],[6,"Democracy"],[6,"Tokens"],[6,"Identity"],[6,"Preimage"],[6,"Security"],[6,"Escrow"],[6,"DexSwapRouter"],[6,"DmpQueue"],[6,"Loans"],[6,"Replace"],[6,"MultiTransactionPayment"],[6,"VaultRegistry"],[6,"Scheduler"],[6,"EVM"],[6,"CumulusXcm"],[6,"TechnicalCommittee"],[6,"Sudo"],[6,"Multisig"],[6,"ClientsInfo"],[6,"VaultAnnuity"],[6,"Proxy"],[6,"CollatorSelection"],[6,"PolkadotXcm"],[6,"Oracle"],[6,"Issue"],[6,"Vesting"],[6,"Session"],[6,"Supply"],[6,"BaseFee"],[15,"f64"],[8,"RationalArg"],[8,"TryInto"],[4,"Rounding"],[8,"Ord"],[8,"Div"],[8,"Rem"],[8,"Add"],[8,"AddAssign"],[8,"Unsigned"],[8,"Zero"],[8,"One"],[8,"MultiplyRational"],[15,"str"],[8,"From"],[3,"RuntimeVersion"],[3,"BlockLength"],[3,"BlockWeights"],[15,"u16"],[4,"BodyId"],[3,"Perquintill"],[6,"Multiplier"],[3,"PalletId"],[3,"RuntimeDbWeight"],[3,"CallMetadata"],[3,"DispatchInfo"],[3,"H256"],[3,"PairInfo"],[3,"KeyTypeId"],[3,"Box"],[8,"Any"],[3,"Arc"],[3,"Rc"],[6,"StorageChanges"],[3,"RuntimeMetadataPrefixed"],[3,"OpaqueMetadata"],[8,"Mul"],[8,"UniqueSaturatedInto"],[8,"MultiplyArg"],[3,"NativeVersion"],[3,"BlockHeader"],[8,"Iterator"],[4,"Pays"],[6,"DispatchInfoOf"],[6,"ProofRecorder"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Extension"],[8,"ReciprocalArg"],[8,"Serializer"],[8,"Serialize"],[8,"Display"],[4,"CallContext"],[8,"Into"],[3,"SlotDuration"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[6,"TransactionValidity"],[4,"TransactionSource"],[3,"H256Le"],[3,"PortableRegistry"],[3,"Error"],[3,"Error"],[8,"Hash"],[8,"BuildHasher"],[8,"Hasher"],[8,"PartialOrd"],[4,"TransactionAction"],[8,"Config"],[3,"InterBtcPrecompiles"],[8,"PrecompileHandle"],[3,"PrecompileOutput"],[4,"PrecompileFailure"],[8,"IntoIterator"],[4,"PostLogContent"],[4,"IsPrecompileResult"],[4,"NetworkId"],[6,"InteriorMultiLocation"],[8,"KeyOwnerProofSystem"],[8,"StorageValue"],[8,"BuildStorage"],[3,"IdentityFee"],[3,"BaseCallFilter"],[3,"DealWithFees"],[3,"EnsureKintsugiLabs"],[3,"DustRemovalWhitelist"],[3,"CurrencyHooks"],[3,"AssetAuthority"],[3,"DealWithRewards"],[3,"TotalWrapped"],[3,"EscrowBlockRewardProvider"],[3,"VaultBlockRewardProvider"],[3,"BlockNumberToBalance"],[3,"BlockHashCount"],[3,"Version"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"SS58Prefix"],[3,"Period"],[3,"Offset"],[3,"MaxAuthorities"],[3,"MaxCandidates"],[3,"MinCandidates"],[3,"SessionLength"],[3,"MaxInvulnerables"],[3,"ExecutiveBody"],[3,"MinimumPeriod"],[3,"EnableManualSeal"],[3,"TransactionByteFee"],[3,"OperationalFeeMultiplier"],[3,"TargetBlockFullness"],[3,"AdjustmentVariable"],[3,"MinimumMultiplier"],[3,"MaximumMultiplier"],[3,"MinVestedTransfer"],[3,"MaxVestingSchedules"],[3,"KintsugiLabsAccounts"],[3,"MaximumSchedulerWeight"],[3,"MaxScheduledPerBlock"],[3,"PreimageBaseDepositz"],[3,"PreimageByteDepositz"],[3,"LaunchPeriod"],[3,"VotingPeriod"],[3,"FastTrackVotingPeriod"],[3,"MinimumDeposit"],[3,"EnactmentPeriod"],[3,"MaxVotes"],[3,"MaxProposals"],[3,"GetDepositBase"],[3,"GetDepositFactor"],[3,"GetMaxSignatories"],[3,"TechnicalCommitteeMotionDuration"],[3,"TechnicalCommitteeMaxProposals"],[3,"TechnicalCommitteeMaxMembers"],[3,"MaxProposalWeight"],[3,"ReservedXcmpWeight"],[3,"ReservedDmpWeight"],[3,"ParachainBlocksPerBitcoinBlock"],[3,"GetNativeCurrencyId"],[3,"GetRelayChainCurrencyId"],[3,"GetWrappedCurrencyId"],[3,"FeePalletId"],[3,"SupplyPalletId"],[3,"EscrowAnnuityPalletId"],[3,"VaultAnnuityPalletId"],[3,"TreasuryPalletId"],[3,"CollatorPotId"],[3,"VaultRegistryPalletId"],[3,"LoansPalletId"],[3,"FarmingPalletId"],[3,"FeeAccount"],[3,"SupplyAccount"],[3,"EscrowAnnuityAccount"],[3,"VaultAnnuityAccount"],[3,"TreasuryAccount"],[3,"CollatorSelectionAccount"],[3,"VaultRegistryAccount"],[3,"LoansAccount"],[3,"FarmingAccount"],[3,"MaxLocks"],[3,"ExistentialDeposits"],[3,"InflationPeriod"],[3,"EmissionPeriod"],[3,"RewardPeriod"],[3,"Span"],[3,"MaxPeriod"],[3,"BasicDeposit"],[3,"FieldDeposit"],[3,"SubAccountDeposit"],[3,"MaxSubAccounts"],[3,"MaxAdditionalFields"],[3,"MaxRegistrars"],[3,"ProxyDepositBase"],[3,"ProxyDepositFactor"],[3,"MaxProxies"],[3,"MaxPending"],[3,"AnnouncementDepositBase"],[3,"AnnouncementDepositFactor"],[3,"MaxExpectedValue"],[3,"MaxNameLen"],[3,"PauseTooLongNames"],[3,"PalletInfo"],[4,"Everything"],[4,"Nothing"],[3,"RuntimeApi"],[3,"RocksDbWeight"],[8,"CurrencyInfo"],[8,"Get"],[13,"initialize"],[13,"store_block_header"],[13,"DepositCollateral"],[13,"WithdrawCollateral"],[13,"NominationOptIn"],[13,"NominationOptOut"],[13,"set"],[3,"PairLpIdentity"],[3,"DexGeneralVerifyPairAsset"],[3,"PoolLpGenerate"],[3,"DexStableVerifyPoolAsset"],[3,"SetLoansExchangeRates"],[3,"DexGeneralPalletId"],[3,"DexStablePalletId"],[3,"CurrencyLimit"],[3,"StringLimit"],[3,"MaxBootstrapRewards"],[3,"MaxBootstrapLimits"],[8,"StablePoolLpCurrencyIdGenerate"],[8,"GenerateLpAssetId"],[8,"ValidateAsset"],[8,"ValidateCurrency"],[8,"GetTransactionAction"],[3,"BaseFeeThreshold"],[3,"SetEvmChainId"],[3,"FindAuthorTruncated"],[3,"DefaultBaseFeePerGas"],[3,"DefaultElasticity"],[3,"PostBlockAndTxnHashes"],[3,"EnableCreate"],[3,"BlockGasLimit"],[3,"PrecompilesValue"],[3,"WeightPerGas"],[3,"GasLimitPovSizeRatio"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"BlockExecutionWeight"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"ExtrinsicBaseWeight"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"XcmConfig"],[3,"ToAuthor"],[3,"MyFixedConversionRateProvider"],[3,"SafeCallFilter"],[3,"CurrencyIdConvert"],[3,"AccountIdToMultiLocation"],[3,"ParentLocation"],[3,"ParentNetwork"],[3,"RelayChainOrigin"],[3,"Ancestry"],[3,"UnitWeightCost"],[3,"MaxInstructions"],[3,"DotPerSecond"],[3,"CanonicalizedIntrPerSecond"],[3,"CanonicalizedIbtcPerSecond"],[3,"IntrPerSecond"],[3,"IbtcPerSecond"],[3,"RelayNetwork"],[3,"UniversalLocation"],[3,"MaxAssetsIntoHolding"],[3,"SelfLocation"],[3,"MaxAssetsForTransfer"],[3,"ParachainMinFee"]]},\
"issue":{"doc":"Issue Pallet","t":"NNGDENILLLMLLLLLLLLLLMMMKLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKLMLLLLLLLLLLLLLMMLLLLLLLLLLLLAMAMKMLLKLLMLLLLLLLLLLLLLLLLLLALLLLMLLADLLLLLLLLLLLLLLLLLLLLLNQENNIEENDNNNNNNGDNQNQNNQLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLNLLNLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNGDIENNNNNNEKMLLLLLMMMLLLLLLLLLLLKMLLLLLKMMLLLLLLMMMLMLLLLLLLLLLML","n":["Cancelled","Completed","DefaultIssueRequest","IssueRequest","IssueRequestStatus","Pending","WeightInfo","__clone_box","__clone_box","amount","amount","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","btc_address","btc_height","btc_public_key","cancel_issue","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","execute_expired_issue_exact","execute_expired_issue_overpayment","execute_expired_issue_underpayment","execute_issue_exact","execute_issue_overpayment","execute_issue_underpayment","fee","fee","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","griefing_collateral","griefing_collateral","griefing_currency","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","max_encoded_len","max_encoded_len","migration","opentime","pallet","period","request_issue","requester","serialize","serialize","set_issue_period","size_hint","size_hint","status","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","types","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vault","vzip","vzip","v1","Migration","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","on_runtime_upgrade","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","AmountBelowDustAmount","BlockNumberToBalance","Call","CancelIssue","CommitPeriodExpired","Config","Error","Event","ExecuteIssue","GenesisConfig","InvalidExecutor","IssueAmountChange","IssueCancelled","IssueCompleted","IssueIdNotFound","IssuePeriodChange","Module","Pallet","RequestIssue","RuntimeEvent","TimeNotExpired","TreasuryPalletId","VaultNotAcceptingNewIssues","WaitingForRelayerInitialization","WeightInfo","__clone_box","__clone_box","__clone_box","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_issue","cancel_issue","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_issue","execute_issue","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_issue_request_from_id","get_issue_requests_for_account","get_issue_requests_for_vault","get_pending_issue","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","issue_btc_dust_value","issue_period","issue_period","issue_requests","module_name","name","new_call_variant_cancel_issue","new_call_variant_execute_issue","new_call_variant_request_issue","new_call_variant_set_issue_period","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","request_issue","request_issue","serialize","set_issue_period","set_issue_period","size_hint","size_hint","size_hint","storage_info","storage_types","storage_version","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","treasury_account_id","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","amount","griefing_currency","issue_id","issue_id","period","unchecked_transaction","vault_id","amount","amount","amount","confiscated_griefing_collateral","fee","fee","fee","griefing_collateral","griefing_collateral","griefing_currency","issue_id","issue_id","issue_id","issue_id","period","requester","requester","requester","vault_address","vault_id","vault_id","vault_public_key","cancel_issue","execute_issue","request_issue","set_issue_period","IssueBtcDustValue","IssuePeriod","IssueRequests","StorageVersion","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","Cancelled","Completed","DefaultIssueRequest","IssueRequest","IssueRequestExt","IssueRequestStatus","Pending","V0","V1","V2","V3","V4","Version","amount","amount","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","btc_address","btc_height","btc_public_key","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","fee","fee","from","from_mut","from_mut","from_ref","from_ref","griefing_collateral","griefing_collateral","griefing_currency","identity","init","into","into_mut","into_ref","max_encoded_len","opentime","period","requester","size_hint","status","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vault","vzip"],"q":[[0,"issue"],[123,"issue::migration"],[124,"issue::migration::v1"],[146,"issue::pallet"],[394,"issue::pallet::Call"],[401,"issue::pallet::Event"],[423,"issue::pallet::dispatchables"],[427,"issue::pallet::storage_types"],[511,"issue::types"]],"d":["payment was not received, vault may receive griefing …","payment was received","","","","opened, but not yet executed or cancelled","Weight functions needed for issue.","","","","the number of tokens that will be transferred to the user …","","","","","","","","","","","the vault’s Bitcoin deposit address","the highest recorded height in the BTC-Relay (at time of …","the vault’s Bitcoin public key (when this request was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the number of tokens that will be transferred to the fee …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","the collateral held for spam prevention","The currency used for the griefing collateral","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","the <em>active</em> block height when this request was opened","The <code>pallet</code> module in each FRAME pallet hosts the most …","the issue period when this request was opened","","the account issuing tokens","","","","","","the status of this issue request","","","","","","","","","","","","","","","","","","","","","","","","the vault associated with this issue request","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Issue amount is too small.","Convert the block number into a balance.","Contains a variant per dispatchable extrinsic that this …","","Issue request has expired.","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","","Can be used to configure the genesis state of this pallet.","Not expected origin.","","Issue request already cancelled.","Issue request already completed.","Issue request not found.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","The overarching event type.","Issue request has not expired.","The treasury pallet account for slashed griefing …","Vault is not active.","Relay is not initialized.","Weight information for the extrinsics in this module.","","","","","","","","","","","","","","","","","","","","","","","","","Cancel the issuance of tokens if expired","See <code>Pallet::cancel_issue</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","Finalize the issuance of tokens","See <code>Pallet::execute_issue</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Fetch all issue requests for the specified account.","Fetch all issue requests for the specified vault.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","“ The time difference in number of blocks between an …","","“ Users create issue requests to issue tokens. This …","","","Create a call with the variant <code>cancel_issue</code>.","Create a call with the variant <code>execute_issue</code>.","Create a call with the variant <code>request_issue</code>.","Create a call with the variant <code>set_issue_period</code>.","","","","","","","","Request the issuance of tokens","See <code>Pallet::request_issue</code>.","","Set the default issue period for tx verification.","See <code>Pallet::set_issue_period</code>.","","","","","Auto-generated docs-only module listing all (public and …","“ Build storage at V1 (requires default 0).“","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel the issuance of tokens if expired","Finalize the issuance of tokens","Request the issuance of tokens","Set the default issue period for tx verification.","The minimum amount of btc that is required for issue …","The time difference in number of blocks between an issue …","Users create issue requests to issue tokens. This mapping …","Build storage at V1 (requires default 0).","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","payment was not received, vault may receive griefing …","payment was received","","","","","opened, but not yet executed or cancelled","Initial version.","BtcAddress type with script format.","IssueRequestStatus","ActiveBlockNumber, btc_height","Removed refund","Storage version.","","the number of tokens that will be transferred to the user …","","","","","","the vault’s Bitcoin deposit address","the highest recorded height in the BTC-Relay (at time of …","the vault’s Bitcoin public key (when this request was …","","","","","","","","","","","","","the number of tokens that will be transferred to the fee …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","the collateral held for spam prevention","The currency used for the griefing collateral","","","Calls <code>U::from(self)</code>.","","","","the <em>active</em> block height when this request was opened","the issue period when this request was opened","the account issuing tokens","","the status of this issue request","","","","","","","","","","","the vault associated with this issue request",""],"i":[9,9,0,0,0,9,0,9,12,3,12,9,12,9,12,9,12,9,12,9,12,12,12,12,64,9,12,9,12,9,12,9,12,9,12,9,12,9,9,12,9,12,9,12,9,12,9,12,9,12,64,64,64,64,64,64,3,12,9,12,9,12,9,9,12,12,9,9,12,12,3,12,12,9,12,9,12,9,12,9,12,9,12,9,12,0,12,0,12,64,12,9,12,64,9,12,12,9,12,9,12,9,12,9,12,9,12,9,12,9,12,9,12,9,12,0,9,12,9,12,12,9,12,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,46,2,0,42,46,0,0,0,42,0,46,42,46,46,46,42,0,0,42,2,46,2,46,46,2,42,43,44,36,42,46,44,42,46,44,42,46,44,42,46,36,43,44,42,46,36,43,44,36,43,44,42,43,44,42,43,44,43,43,43,42,46,44,42,46,44,42,46,44,42,46,44,36,42,46,36,43,44,42,46,36,43,44,36,44,0,42,46,36,43,44,42,46,44,42,43,44,42,42,43,43,44,44,43,44,42,46,43,44,42,46,36,43,44,42,42,46,46,36,36,43,43,44,44,42,42,46,46,36,36,43,43,44,44,44,44,44,44,44,43,43,43,43,42,46,44,43,43,42,46,36,43,44,43,42,46,36,43,44,42,46,36,43,44,42,46,36,43,44,36,43,36,43,43,43,44,44,44,44,43,43,43,43,43,43,43,43,44,36,43,44,42,46,44,43,0,43,42,46,44,42,43,44,43,42,46,36,43,44,42,46,36,43,44,42,46,44,42,46,44,42,46,44,42,46,36,43,44,42,46,44,42,46,36,43,44,42,46,36,43,44,42,46,36,43,44,43,46,66,66,67,68,69,67,66,70,71,72,71,70,71,72,70,73,70,70,71,72,73,74,70,72,73,70,70,72,70,0,0,0,0,0,0,0,0,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,75,76,76,77,77,78,78,75,75,76,76,77,77,78,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,75,76,77,78,9,9,0,0,0,0,9,60,60,60,60,60,0,79,12,60,60,60,60,60,12,12,12,60,60,60,60,60,60,60,60,60,60,60,79,12,60,60,60,60,60,79,12,12,60,60,60,60,60,60,12,12,12,60,12,60,60,60,60,60,60,60,60,60,60,12,60],"f":[0,0,0,0,0,0,0,[1],[1],[[[3,[2]]],[[4,[2]]]],0,[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],8],[9,9],[[[12,[10,10,10,[0,[10,11]]]]],[[12,[10,10,10,[0,[10,11]]]]]],[[]],[[]],[13,[[15,[9,14]]]],[13,[[15,[[12,[16,16,16,[0,[11,16]]]],14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[17,[[15,[14]]]],[17,[[15,[14]]]],[[17,13],[[15,[14]]]],[[17,13],[[15,[14]]]],[[],9],[18],[18],[18],[18],[19,[[15,[9]]]],[19,[[15,[[12,[20,20,[0,[21,21,21]],[0,[11,20]]]]]]]],[18],[18],[[9,[0,[22,23]]]],[[[12,[24,24,24,[0,[11,24]]]],[0,[22,23]]]],[[9,9],25],[[[12,[[26,[[26,[[26,[26]]]]]],[26,[[26,[[26,[26]]]]]],[26,[[26,[[26,[26]]]]]],[0,[[26,[[0,[[26,[[0,[[26,[[0,[26,11]]]],11]]]],11]]]],11]]]],[12,[[26,[[26,[[26,[26]]]]]],[26,[[26,[[26,[26]]]]]],[26,[[26,[[26,[26]]]]]],[0,[[26,[[0,[[26,[[0,[[26,[[0,[26,11]]]],11]]]],11]]]],11]]]]],25],[[17,17,17,17],8],[[17,17,17,17],8],[[17,17,17,17],8],[[17,17,17,17],8],[[17,17,17,17],8],[[17,17,17,17],8],[[[3,[2]]],[[4,[2]]]],0,[[9,27],[[15,[28]]]],[[[12,[29,29,29,[0,[29,11]]]],27],[[15,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[4,[2]]]],0,0,[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],0,0,0,0,[[],8],0,[[9,30],15],[[[12,[31,31,[0,[32,32,32]],[0,[11,31]]]],30],15],[[],8],[9,18],[[[12,[24,24,24,[0,[11,24]]]]],18],0,[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],33],[[],33],[[],[[35,[34]]]],[[],[[35,[34]]]],0,[[]],[[]],[[]],[[]],0,[[]],[[]],0,0,[[]],[[]],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[],18],[[]],[[]],[[]],[[],8],[[],15],[[],15],[[],33],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[36,[2]],37],[[15,[38]]]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[2]]]],[[[39,[2]],40],41],0,[[[42,[2]]],[[42,[2]]]],[43,43],[[[44,[2]]],[[44,[2]]]],[[]],[[]],[[]],[[],18],[[],45],[[]],[13,[[15,[[42,[2]],14]]]],[13,[[15,[46,14]]]],[13,[[15,[[44,[2]],14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[17,[[15,[14]]]],[17,[[15,[14]]]],[17,[[15,[14]]]],[[17,13],[[15,[14]]]],[[17,13],[[15,[14]]]],[[17,13],[[15,[14]]]],[[],[[36,[2]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[19,[[15,[[36,[2]]]]]],[[[44,[2]]],41],0,[18],[18],[18],[18],[18],[[[42,[2]],[0,[22,23]]]],[[46,[0,[22,23]]]],[[[44,[2]],[0,[22,23]]]],[[[42,[2]],[42,[2]]],25],[[43,43],25],[[[44,[2]],[44,[2]]],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[[39,[2]],40,47],41],0,[[[42,[2]],27],48],[[[46,[2]],27],48],[[43,27],48],[[[44,[2]],27],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[2]]],5],[[]],[[[44,[2]]],49],[[]],[[[44,[2]]],50],[40,[[15,[[3,[2]],51]]]],[[],[[7,[40]]]],[[],[[7,[40]]]],[40,[[15,[[3,[2]],51]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],18],[[],[[7,[52]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[53,[2]]]],0,[[[54,[40]]],[[55,[[3,[2]]]]]],[[],49],[[],49],[40,[[44,[2]]]],[[40,47],[[44,[2]]]],[[[57,[[56,[2]]]],[56,[2]]],[[44,[2]]]],[[[53,[2]]],[[44,[2]]]],[[[53,[2]]]],[[],58],[[[53,[2]]]],[[]],[[[53,[2]],8],8],[[[53,[2]]],8],[[],8],[[[39,[2]],[57,[[56,[2]]]],[56,[2]]],41],0,[[[36,[2]],30],15],[[[39,[2]],[53,[2]]],41],0,[[[42,[2]]],18],[46,18],[[[44,[2]]],18],[[],[[7,[59]]]],0,[[],60],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],35],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[61]]]],[8,[[63,[62]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40],[[40,47]],[[[57,[[56,[2]]]],[56,[2]]]],[[[53,[2]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],0,[[]],[[],[[7,[5,6]]]],[[]],[[]],[[]],0,0,0,[13,[[15,[60,14]]]],[[],[[15,[14]]]],[17,[[15,[14]]]],[[17,13],[[15,[14]]]],[18],[18],[18],[[60,[0,[22,23]]]],[[60,60],25],[[],25],[[],25],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[],4],0,0,[[],[[7,[5,6]]]],[[],18],[[]],[[]],[[]],[[],18],0,0,0,[60,18],0,[[],[[7,[5,6]]]],[[],15],[[],15],[[]],[[]],[[],[[7,[5,6]]]],[[],33],[[],35],[[]],[[]],0,[[]]],"c":[162],"p":[[3,"Private"],[8,"Config"],[6,"DefaultIssueRequest"],[3,"Amount"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Weight"],[4,"IssueRequestStatus"],[8,"Clone"],[8,"Copy"],[3,"IssueRequest"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"FromStr"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[8,"Serializer"],[8,"Serialize"],[8,"Display"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[6,"OriginFor"],[3,"H256"],[6,"DispatchResultWithPostInfo"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[3,"FullTransactionProof"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[4,"DispatchError"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[8,"EncodeLike"],[4,"Option"],[6,"CurrencyId"],[3,"VaultId"],[3,"StorageVersion"],[3,"StorageInfo"],[4,"Version"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[3,"Migration"],[13,"request_issue"],[13,"execute_issue"],[13,"cancel_issue"],[13,"set_issue_period"],[13,"RequestIssue"],[13,"IssueAmountChange"],[13,"ExecuteIssue"],[13,"CancelIssue"],[13,"IssuePeriodChange"],[3,"IssueRequests"],[3,"IssuePeriod"],[3,"IssueBtcDustValue"],[3,"StorageVersion"],[8,"IssueRequestExt"]]},\
"issue_rpc":{"doc":"RPC interface for the Issue Module.","t":"DIIILLLLLLLLKLLLKLLLLLLLLLLLLL","n":["Issue","IssueApiClient","IssueApiServer","IssueRuntimeApi","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","get_issue_requests","get_issue_requests","get_issue_requests","get_issue_requests","get_vault_issue_requests","get_vault_issue_requests","get_vault_issue_requests","get_vault_issue_requests","init","into","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"issue_rpc"]],"d":["A struct that implements the [<code>IssueApi</code>].","Client implementation for the <code>IssueApi</code> RPC API.","Server trait implementation for the <code>IssueApi</code> RPC API.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get all issue requests for a particular account","","","","Get all issue requests for a particular vault","","","Calls <code>U::from(self)</code>.","Collects all the methods and subscriptions defined in the …","Create new <code>Issue</code> with the given reference to the client.","","","","","",""],"i":[0,0,0,0,10,10,10,10,10,10,10,10,21,10,22,23,21,10,22,23,10,10,21,10,10,10,10,10,10,10],"f":[0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[]],[[]],[2,[[4,[3]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,2],[[4,[[3,[11]]]]]],[[],[[14,[[3,[12]],13]]]],[[6,2],[[17,[[16,[15]]]]]],[2,[[4,[3]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,2],[[4,[[3,[11]]]]]],[[],[[14,[[3,[12]],13]]]],[[6,2],[[17,[[16,[15]]]]]],[[],1],[[]],[[],18],[19,10],[[],14],[[],14],[[],20],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[4,"Option"],[3,"Vec"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Issue"],[8,"Codec"],[3,"Global"],[4,"ApiError"],[4,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[8,"IssueApiServer"],[8,"IssueRuntimeApi"],[8,"IssueApiClient"]]},\
"issue_rpc_runtime_api":{"doc":"Runtime API definition for the Issue Module.","t":"ILL","n":["IssueApi","get_issue_requests","get_vault_issue_requests"],"q":[[0,"issue_rpc_runtime_api"]],"d":["","Get all issue requests for a particular account","Get all issue requests for a particular vault"],"i":[0,4,4],"f":[0,[[],[[3,[1,2]]]],[[],[[3,[1,2]]]]],"c":[],"p":[[3,"Vec"],[4,"ApiError"],[4,"Result"],[8,"IssueApi"]]},\
"kintsugi_runtime_parachain":{"doc":"The kintsugi runtime. This can be compiled with <code>#[no_std]</code>, …","t":"GDGGGGGGDDNDDGNNNGGGGGGGGNNNGGDDGNNGDGDGGDEIGGNNNDGNNNDGGDGNNNGNNNNGNDIDDGNNNGNGNNNGNNNGNNNEGNNNDGNNNGGGDDDDGNNNGNNNDGDDGNNGGNNNNGEGDDGNNNDDGNNDGNNDGDDDCGIDDDDDDGGQGNNNDDGNNNGDIDDCGGNNNDGDGSRNDDDDDDDDDDDDDDDDDDDDDDDDGGNNGNNNGNNNGENNGNEDNDGNNNGGEDDGGGNNNGDDDDGNNNNGGNNNDDQGNNNDDEQGGGNNNGDGNNNGDDDDDDDDDDEEEEDEEDEDGNNNGNNNGNNNGDDGGGGGGGDGIDGNNNGGNNNDGDGNNNGRDGNNNNGGDDDGNNNGGNECGNNNGDDDGNDDGNNNGGNNGGGNNNRGNNNDGDDGNNGGNNNDGDGNNGGNNDGNNNGNDRRRDNGNNNGNNNLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLMMMLMLLLLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLMMMLLLMCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLAOLLLLLLLLLALLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMLLMKLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLMFLLLLLMMLLLLMLLLLLLLMMMMMOLLLLLLLLLLMMMMLLLLLMCLLLLKKLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLNLLLLLLLLMMKMMNKLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLALLLLLLLMMMMMMMMMMMMMFAAGRENRRRRNNRRRRNCNRRLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDDDDIDDDDDIDIILMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLGDDDDDDDIDDGDDRDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGDDDDDDGGDDDDDDDDDDDDGDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId","AdjustmentVariable","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","AnnouncementDepositBase","AnnouncementDepositFactor","Any","AssetAuthority","AssetMetadata","AssetRegistry","AssetRegistry","AssetRegistry","AssetRegistry","AssetRegistryConfig","Aura","AuraConfig","AuraExt","AuraExtConfig","AuraId","Authorship","BTCRelay","BTCRelay","BTCRelay","BTCRelay","BTCRelayConfig","Balance","BalanceWrapper","BaseCallFilter","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BasicDeposit","Block","BlockHashCount","BlockId","BlockNumber","BlockNumberToBalance","BtcRelayCall","BuildStorage","CheckedExtrinsic","ClientsInfo","ClientsInfo","ClientsInfo","ClientsInfo","CollatorPotId","CollatorSelection","CollatorSelection","CollatorSelection","CollatorSelection","CollatorSelectionAccount","CollatorSelectionConfig","CollatorSelectionUpdateOrigin","ConstBool","Contracts","Contracts","Contracts","Contracts","CumulusXcm","CumulusXcm","CumulusXcm","CumulusXcm","CumulusXcm","Currency","Currency","CurrencyHooks","CurrencyInfo","DealWithFees","DealWithRewards","Democracy","Democracy","Democracy","Democracy","DemocracyConfig","DepositCollateral","DexGeneral","DexGeneral","DexGeneral","DexGeneral","DexStable","DexStable","DexStable","DexStable","DexSwapRouter","DexSwapRouter","DexSwapRouter","DexSwapRouter","DispatchClass","DmpQueue","DmpQueue","DmpQueue","DmpQueue","DustRemovalWhitelist","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EmissionPeriod","EnableManualSeal","EnactmentPeriod","EnsureKintsugiLabs","Escrow","Escrow","Escrow","Escrow","EscrowAnnuity","EscrowAnnuity","EscrowAnnuity","EscrowAnnuity","EscrowAnnuityAccount","EscrowAnnuityInstance","EscrowAnnuityPalletId","EscrowBlockRewardProvider","EscrowRewards","EscrowRewards","EscrowRewards","EscrowRewardsInstance","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Everything","Executive","ExecutiveBody","ExistentialDeposits","Farming","Farming","Farming","Farming","FarmingAccount","FarmingPalletId","FarmingRewards","FarmingRewards","FarmingRewards","FastTrackVotingPeriod","Fee","Fee","Fee","FeeAccount","FeeConfig","FeePalletId","FieldDeposit","FixedU128","ForeignAsset","GenesisConfig","Get","GetDepositBase","GetDepositFactor","GetMaxSignatories","GetNativeCurrencyId","GetRelayChainCurrencyId","GetWrappedCurrencyId","Hash","Header","IdentificationTuple","Identity","Identity","Identity","Identity","IdentityFee","InflationPeriod","Issue","Issue","Issue","Issue","IssueConfig","IssueRequest","KeyOwnerProofSystem","KintsugiLabsAccounts","LaunchPeriod","LendToken","Liquidity","Loans","Loans","Loans","Loans","LoansAccount","LoansConfig","LoansPalletId","LockIdentifier","MAX","MAXIMUM_BLOCK_WEIGHT","Mandatory","MaxAdditionalFields","MaxAuthorities","MaxCandidates","MaxExpectedValue","MaxInvulnerables","MaxLocks","MaxNameLen","MaxPending","MaxPeriod","MaxProposalWeight","MaxProposals","MaxProxies","MaxRegistrars","MaxScheduledPerBlock","MaxSubAccounts","MaxVestingSchedules","MaxVotes","MaximumMultiplier","MaximumSchedulerWeight","MinCandidates","MinVestedTransfer","MinimumDeposit","MinimumMultiplier","MinimumPeriod","Moment","MultiTransactionPayment","MultiTransactionPayment","MultiTransactionPayment","Multisig","Multisig","Multisig","Multisig","Nomination","Nomination","Nomination","Nomination","NominationConfig","NominationEvent","NominationOptIn","NominationOptOut","Nonce","Normal","Nothing","Offset","Operational","OperationalFeeMultiplier","Oracle","Oracle","Oracle","Oracle","OracleConfig","OracleName","OriginCaller","PalletInfo","ParachainBlocksPerBitcoinBlock","ParachainInfo","ParachainInfoConfig","ParachainSystem","ParachainSystem","ParachainSystem","ParachainSystem","ParachainSystemConfig","PauseTooLongNames","Perbill","Period","Permill","PolkadotXcm","PolkadotXcm","PolkadotXcm","PolkadotXcm","PolkadotXcm","PolkadotXcmConfig","Preimage","Preimage","Preimage","Preimage","PreimageBaseDepositz","PreimageByteDepositz","Proof","Proxy","Proxy","Proxy","Proxy","ProxyDepositBase","ProxyDepositFactor","ProxyType","Query","Rate","Ratio","Redeem","Redeem","Redeem","Redeem","RedeemConfig","RedeemRequest","Replace","Replace","Replace","Replace","ReplaceConfig","ReplaceRequest","ReservedDmpWeight","ReservedXcmpWeight","RewardPeriod","RocksDbWeight","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SS58Prefix","Scheduler","Scheduler","Scheduler","Scheduler","Security","Security","Security","Security","Session","Session","Session","Session","SessionConfig","SessionKeys","SessionLength","Shortfall","Signature","SignedBlock","SignedExtra","SignedFixedPoint","SignedInner","SlowAdjustingFeeUpdate","Span","StablePoolId","StorageValue","SubAccountDeposit","Sudo","Sudo","Sudo","Sudo","SudoConfig","Supply","Supply","Supply","Supply","SupplyAccount","SupplyConfig","SupplyPalletId","System","System","System","System","SystemConfig","TARGET_SPACING","TargetBlockFullness","TechnicalCommittee","TechnicalCommittee","TechnicalCommittee","TechnicalCommittee","TechnicalCommittee","TechnicalCommitteeConfig","TechnicalCommitteeInstance","TechnicalCommitteeMaxMembers","TechnicalCommitteeMaxProposals","TechnicalCommitteeMotionDuration","TechnicalMembership","TechnicalMembership","TechnicalMembership","TechnicalMembership","TechnicalMembershipConfig","Timestamp","Timestamp","TimestampCall","Token","Tokens","Tokens","Tokens","Tokens","TokensConfig","TotalWrapped","TransactionByteFee","TransactionConverter","TransactionPayment","TransactionPayment","TreasuryAccount","TreasuryPalletId","TxPause","TxPause","TxPause","TxPause","UncheckedExtrinsic","UnknownTokens","UnknownTokens","UnknownTokens","UnsignedFixedPoint","UnsignedInner","Utility","Utility","Utility","Utility","VERSION","VaultAnnuity","VaultAnnuity","VaultAnnuity","VaultAnnuity","VaultAnnuityAccount","VaultAnnuityInstance","VaultAnnuityPalletId","VaultBlockRewardProvider","VaultCapacity","VaultCapacity","VaultCapacity","VaultCapacityInstance","VaultRegistry","VaultRegistry","VaultRegistry","VaultRegistry","VaultRegistryAccount","VaultRegistryConfig","VaultRegistryPalletId","VaultRewards","VaultRewards","VaultRewards","VaultRewardsInstance","VaultStaking","VaultStaking","VaultStaking","Version","Vesting","Vesting","Vesting","Vesting","VestingConfig","Void","VotingPeriod","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_REF_TIME_PER_SECOND","Weight","WithdrawCollateral","XTokens","XTokens","XTokens","XTokens","XcmpQueue","XcmpQueue","XcmpQueue","XcmpQueue","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accept_time","account_basic","account_code_at","account_nonce","add","add","add","add","add","add_assign","add_filter","add_proof_size","add_ref_time","additional","all","all_gt","all_gte","all_lt","all_lte","amount","amount","amount","amount","amount","amount_btc","amount_btc","any_eq","any_gt","any_gte","any_lt","any_lte","api","api_version","append","apply_extrinsic","apply_self_contained","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_system_ref","asset_registry","assimilate_storage","assimilate_storage","aura","aura","aura_ext","author","authorities","balance_at","base_fee","bitcoin","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_address","btc_address","btc_address","btc_height","btc_height","btc_height","btc_public_key","btc_relay","build","build_storage","calculate_currency_amount","calculate_remove_liquidity","calculate_remove_liquidity","calculate_remove_liquidity_one_currency","calculate_swap","call","call","caller","chain_id","check_inherents","check_proof","check_self_contained","checked_accrue","checked_add","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div_per_component","checked_mul","checked_mul","checked_mul","checked_mul","checked_reduce","checked_rounding_div","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","classify_dispatch","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collateral","collateral","collateral_to_wrapped","collator_selection","collect_collation_info","compare","compare","compare","compare","compare","compare","compare","compare","compute_escrow_reward","compute_farming_reward","compute_vault_reward","const_checked_div","const_checked_mul","const_checked_mul_with_rounding","constants","construct_runtime","construct_runtime_api","contains","contains","contains","contains","contains","contains","contains","contains","contracts","convert","convert_transaction","convert_transaction","convert_transaction","crate_version","create","current_all","current_block","current_receipts","current_transaction_statuses","decimals","decimals","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_from","decode_into_raw_public_keys","decode_len","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","default","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","democracy","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dex","dispatch","dispatch","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","distribute_block_reward","distribute_block_reward","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","encode","encode","encode","encode","encode","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_escrow_reward_rate","estimate_farming_reward","estimate_vault_reward_rate","ethereum","evm","evm","evm_chain_id","execute_block","execute_in_transaction","existential_deposit","exists","extract_proof","extrinsic_filter","fee","fee","fee","fee","fee","filter","filter","filter","filter","filter","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_stakable","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_all","from_dispatch_error","from_float","from_float","from_float","from_float","from_float","from_inner","from_inner","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_parts","from_perbill","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_u32","gas_limit_multiplier_support","gas_price","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_a","get_a_precise","get_account_liquidity","get_admin_balances","get_all_module_accounts","get_amount_in_price","get_amount_out_price","get_call_index","get_call_index","get_call_indices","get_call_indices","get_call_metadata","get_call_name","get_call_name","get_call_names","get_call_names","get_call_names","get_collateralization_from_vault","get_collateralization_from_vault_and_collateral","get_currencies","get_currency","get_currency_balances","get_currency_precision_multipliers","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_estimate_lptoken","get_issuable_tokens_from_vault","get_issue_requests","get_liquidation_threshold_liquidity","get_lp_currency","get_market_status","get_module_names","get_new_vault_replace_requests","get_number_of_currencies","get_old_vault_replace_requests","get_pair_by_asset_id","get_premium_redeem_vaults","get_raw","get_redeem_requests","get_required_collateral_for_vault","get_required_collateral_for_wrapped","get_storage","get_vault_collateral","get_vault_issue_requests","get_vault_redeem_requests","get_vault_total_collateral","get_vaults_by_account_id","get_vaults_with_issuable_tokens","get_vaults_with_redeemable_tokens","get_virtual_price","griefing_collateral","griefing_collateral","griefing_collateral","griefing_collateral","griefing_currency","has_api","has_api_with","hashed_key","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize_block","instantiate","int_div","int_div","int_mul","int_mul","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_caller","into_clamped_perthing","into_inner","into_inner","into_iter","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_perbill","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_one","is_one","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_superset","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","issue","key","key_ids","kill","loans","location","max","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","mutate","mutate_exists","name","name","name","native_version","neg","neg","new_call_variant_initialize","new_call_variant_set","new_call_variant_store_block_header","new_vault","nomination","non_mandatory","none","none","offchain_worker","old_vault","on_inflation","on_unbalanceds","one","one","one","one","one","opentime","opentime","oracle","parachain_info","parachain_system","parameter_types","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pays_fee","pending_block","period","period","period","polkadot_xcm","pow","pow","pre_dispatch","pre_dispatch_self_contained","premium","premium","primitives","print","proof_recorder","proof_size","proof_size_mut","prove","put","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","redeem","redeemer","ref_time","ref_time_mut","register_extension","replace","requester","reset_filter","root","root","saturating_accrue","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reduce","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session","set","set","set","set_call_context","set_caller_from","set_proof_size","set_ref_time","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_duration","sqrt","square","square","status","status","status","storage_at","store_block_header","sub","sub","sub","sub","sub","sub_assign","sub_proof_size","sub_ref_time","sudo","supply","symbol","symbol","system","system","take","tcmp","tcmp","tcmp","technical_committee","technical_membership","to_float","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token_distribution","tokens","total_supply","transfer_fee_btc","transfer_fee_btc","translate","truncate_to_inner","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_perthing","try_mutate","try_mutate_exists","try_origin","try_origin","try_sqrt","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upload_code","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_self_contained","validate_transaction","validate_unsigned","vault","vault","vault_registry","verify_block_header_inclusion","version","vesting","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weigh_data","weight_to_fee","weights","withdraw_reward","withdraw_reward","wrapped_to_collateral","xcm_config","zero","zero","zero","zero","zero","zero","zero","block_header","block_header","block_height","fork_bound","amount","amount","nominator_id","nominator_id","vault_id","vault_id","vault_id","vault_id","now","dispatch","currency","time","Balance","CENTS","CurrencyId","ForeignAsset","GRAND","KBTC","KINT","KSM","LendToken","LpToken","MILLICENTS","NATIVE_CURRENCY_ID","NATIVE_TOKEN_ID","PARENT_CURRENCY_ID","StableLpToken","Token","Token","UNITS","WRAPPED_CURRENCY_ID","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","cmp","compare","decode","decode_all","decode_all_with_depth_limit","decode_as_type","decode_with_depth_limit","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deposit","deref","deref_mut","deserialize","drop","encode_as","encode_as_type_to","encode_to","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","get_hash","hash","identity","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","into_visitor","is_lend_token","is_lp_token","join_lp_token","max_encoded_len","partial_cmp","serialize","size_hint","sort","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","type_name","unchecked_into","unique_saturated_into","vzip","BITCOIN_BLOCK_SPACING","BITCOIN_SPACING_MS","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","SLOT_DURATION","WEEKS","YEARS","BtcRelayExtension","DefaultDepositLimit","DefaultSchedule","DeletionQueueDepth","DepositPerByte","DepositPerItem","DummyWeightPrice","EnableContracts","MaxCodeLen","MaxDebugBufferLen","MaxStorageKeyLen","NativeCurrencyWithEd","NoRandomness","UnsafeUnstableInterface","active_issuance","active_issuance","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","call","can_deposit","can_reserve","can_slash","can_withdraw","convert","deactivate","default","deposit_creating","deposit_into_existing","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enabled","ensure_can_withdraw","free_balance","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","issue","key","make_free_balance_be","minimum_balance","minimum_balance","pair","random","reactivate","reducible_balance","repatriate_reserved","reserve","reserved_balance","resolve_creating","resolve_into_existing","set","settle","slash","slash_reserved","total_balance","total_balance","total_issuance","total_issuance","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unreserve","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw","AssetBalance","CurrencyLimit","DexGeneralPalletId","DexGeneralVerifyPairAsset","DexStablePalletId","DexStableVerifyPoolAsset","GenerateLpAssetId","MaxBootstrapLimits","MaxBootstrapRewards","PairInfo","PairLpIdentity","PoolLpGenerate","StablePoolLpCurrencyIdGenerate","StringLimit","ValidateAsset","ValidateCurrency","__clone_box","account","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","asset_0","asset_1","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_as","encode_to","eq","equivalent","equivalent","equivalent","equivalent","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_by_pool_id","generate_by_pool_id","generate_lp_asset_id","generate_lp_asset_id","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","holding_liquidity","identity","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","lp_asset_id","partial_cmp","reserve_0","reserve_1","serialize","size_hint","status","to_keyed_vec","to_owned","total_liquidity","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_asset","validate_asset","validate_pool_lp_currency","validate_pool_lp_currency","validate_pooled_currency","validate_pooled_currency","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccountConverter","BaseFeeThreshold","BlockGasLimit","DefaultBaseFeePerGas","DefaultElasticity","EnableCreate","FindAuthorTruncated","GasLimitPovSizeRatio","GetTransactionAction","InterBtcPrecompiles","PostBlockAndTxnHashes","Precompiles","PrecompilesValue","SetEvmChainId","WEIGHT_PER_GAS","WeightPerGas","action","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","find_author","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","ideal","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_precompile","key","lower","new","on_runtime_upgrade","set","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upper","used_addresses","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ESCROW_INFLATION_REWARDS","INITIAL_ALLOCATION","TREASURY_INFLATION_REWARDS","VAULT_INFLATION_REWARDS","annuity_escrow_annuity","annuity_vault_annuity","block_weights","btc_relay","clients_info","collator_selection","cumulus_pallet_xcmp_queue","democracy","dex_general","dex_stable","dex_swap_router","escrow","extrinsic_weights","farming","fee","frame_system","issue","loans","nomination","oracle","orml_asset_registry","orml_tokens","orml_vesting","pallet_collective","pallet_identity","pallet_membership","pallet_multisig","pallet_preimage","pallet_proxy","pallet_scheduler","pallet_timestamp","pallet_utility","pallet_xcm","pallet_xcm_benchmarks_fungible","pallet_xcm_benchmarks_generic","redeem","replace","security","supply","tx_pause","vault_registry","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize","set_reward_per_wrapped","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_rewards","vzip","withdraw_rewards","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize","set_reward_per_wrapped","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_rewards","vzip","withdraw_rewards","BlockExecutionWeight","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get","get","get","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","initialize","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","store_block_header","store_block_header_new_fork_sorted","store_block_header_new_fork_unsorted","store_block_header_reorganize_chains","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","set_current_client_release","set_pending_client_release","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","leave_intent","new_session","note_author","register_as_candidate","set_candidacy_bond","set_desired_candidates","set_invulnerables","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","set_config_with_u32","set_config_with_weight","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","cancel_proposal","cancel_referendum","clear_public_proposals","deref","deref_mut","drop","fast_track","fast_track_referendum","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize_base","on_initialize_base_with_launch_period","on_initialize_public","propose","remove_vote","second","spend_from_treasury","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vote_existing","vote_new","vzip","WeightInfo","add_liquidity","as_any","as_any_mut","bootstrap_charge_reward","bootstrap_claim","bootstrap_contribute","bootstrap_create","bootstrap_end","bootstrap_refund","bootstrap_update","bootstrap_withdraw_reward","borrow","borrow_mut","create_pair","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","remove_liquidity","set_fee_point","set_fee_receiver","swap_assets_for_exact_assets","swap_exact_assets_for_assets","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","add_liquidity","add_pool_and_base_pool_liquidity","as_any","as_any_mut","borrow","borrow_mut","create_base_pool","create_meta_pool","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","ramp_a","remove_liquidity","remove_liquidity_imbalance","remove_liquidity_one_currency","remove_pool_and_base_pool_liquidity","remove_pool_and_base_pool_liquidity_one_currency","set_admin_fee","set_swap_fee","stop_ramp_a","swap","swap_meta_pool_underlying","swap_pool_from_base","swap_pool_to_base","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_fee_receiver","vzip","withdraw_admin_fee","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","validate_routes","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","create_lock","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","increase_amount","increase_unlock_height","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","set_account_block","set_account_limit","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_user_stake","vzip","withdraw","ExtrinsicBaseWeight","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get","get","get","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","claim","deposit","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize","remove_reward_schedule","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_reward_schedule","vzip","withdraw","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","set_commission","set_issue_fee","set_issue_griefing_collateral","set_premium_redeem_fee","set_punishment_fee","set_redeem_fee","set_replace_griefing_collateral","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_rewards","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","kill_prefix","kill_storage","remark","remark_with_event","set_code","set_heap_pages","set_storage","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","cancel_issue","deref","deref_mut","drop","execute_expired_issue_exact","execute_expired_issue_overpayment","execute_expired_issue_underpayment","execute_issue_exact","execute_issue_overpayment","execute_issue_underpayment","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","request_issue","set_issue_period","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","activate_market","add_market","add_reserves","add_reward","as_any","as_any_mut","borrow","borrow","borrow_mut","claim_reward","claim_reward_for_market","deposit_all_collateral","deref","deref_mut","drop","force_update_market","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","liquidate_borrow","mint","redeem","redeem_all","reduce_incentive_reserves","reduce_reserves","repay_borrow","repay_borrow_all","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_market","update_market_reward_speed","update_rate_model","vzip","withdraw_all_collateral","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deposit_collateral","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","opt_in_to_nomination","opt_out_of_nomination","set_nomination_enabled","set_nomination_limit","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_collateral","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","feed_values","from","from_mut","from_mut","from_ref","from_ref","init","insert_authorized_oracle","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize","remove_authorized_oracle","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","register_asset","set_asset_location","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_asset","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","force_transfer","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","set_balance","transfer","transfer_all","transfer_keep_alive","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","claim","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","update_vesting_schedules","vested_transfer","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","close_approved","close_disapproved","close_early_approved","close_early_disapproved","deref","deref_mut","disapprove_proposal","drop","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","propose_execute","propose_proposed","set_members","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vote","vzip","WeightInfo","add_registrar","add_sub","as_any","as_any_mut","borrow","borrow_mut","cancel_request","clear_identity","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","kill_identity","provide_judgement","quit_sub","remove_sub","rename_sub","request_judgement","set_account_id","set_fee","set_fields","set_identity","set_subs_new","set_subs_old","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","add_member","as_any","as_any_mut","borrow","borrow_mut","change_key","clear_prime","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","remove_member","reset_member","set_prime","swap_member","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","approve_as_multi_approve","approve_as_multi_create","as_any","as_any_mut","as_multi_approve","as_multi_complete","as_multi_create","as_multi_threshold_1","borrow","borrow_mut","cancel_as_multi","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","note_no_deposit_preimage","note_preimage","note_requested_preimage","request_no_deposit_preimage","request_preimage","request_requested_preimage","request_unnoted_preimage","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unnote_no_deposit_preimage","unnote_preimage","unrequest_multi_referenced_preimage","unrequest_preimage","unrequest_unnoted_preimage","vzip","WeightInfo","add_proxy","announce","as_any","as_any_mut","borrow","borrow_mut","create_pure","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","kill_pure","proxy","proxy_announced","reject_announcement","remove_announcement","remove_proxies","remove_proxy","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","cancel","cancel_named","deref","deref_mut","drop","execute_dispatch_signed","execute_dispatch_unsigned","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","schedule","schedule_named","service_agenda_base","service_agendas_base","service_task_base","service_task_fetched","service_task_named","service_task_periodic","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_finalize","set","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","as_derivative","batch","batch_all","borrow","borrow_mut","deref","deref_mut","dispatch_as","drop","force_batch","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","already_notified_target","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","execute","force_default_xcm_version","force_subscribe_version_notify","force_suspension","force_unsubscribe_version_notify","force_xcm_version","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","migrate_and_notify_old_targets","migrate_supported_version","migrate_version_notifiers","migrate_version_notify_targets","notify_current_targets","notify_target_migration_fail","reserve_transfer_assets","send","teleport_assets","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deposit_asset","deposit_reserve_asset","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","initiate_teleport","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","transfer_asset","transfer_reserve_asset","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_asset","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","burn_asset","buy_execution","claim_asset","clear_error","clear_origin","clear_topic","clear_transact_status","deref","deref_mut","descend_origin","drop","expect_asset","expect_error","expect_origin","expect_pallet","expect_transact_status","from","from_mut","from_mut","from_ref","from_ref","init","initiate_reserve_withdraw","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","query_pallet","query_response","refund_surplus","report_error","report_holding","report_transact_status","set_appendix","set_error_handler","set_fees_mode","set_topic","subscribe_version","transact","trap","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unpaid_execution","unsubscribe_version","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","cancel_redeem_reimburse","cancel_redeem_retry","deref","deref_mut","drop","execute_redeem","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","liquidation_redeem","request_redeem","self_redeem","set_redeem_period","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","accept_replace","as_any","as_any_mut","borrow","borrow_mut","cancel_replace","deref","deref_mut","drop","execute_cancelled_replace","execute_pending_replace","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","request_replace","set_replace_period","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","withdraw_replace","WeightInfo","activate_counter","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","on_initialize","set_start_height_and_inflation","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","pause","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","unpause","vzip","WeightInfo","accept_new_issues","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","recover_vault_id","register_public_key","register_vault","report_undercollateralized_vault","set_custom_secure_threshold","set_liquidation_collateral_threshold","set_minimum_collateral","set_premium_redeem_threshold","set_secure_collateral_threshold","set_system_collateral_ceiling","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","AccountIdToMultiLocation","Ancestry","Barrier","CanonicalizedKbtcPerSecond","CanonicalizedKintPerSecond","CurrencyIdConvert","KbtcPerSecond","KintPerSecond","KsmPerSecond","LocalAssetTransactor","LocalOriginToLocation","MaxAssetsForTransfer","MaxAssetsIntoHolding","MaxInstructions","MyFixedConversionRateProvider","ParachainMinFee","ParentLocation","ParentNetwork","RelayChainOrigin","RelayNetwork","SafeCallFilter","SelfLocation","ToTreasury","Trader","UnitWeightCost","UniversalLocation","XcmConfig","XcmOriginToTransactDispatchOrigin","XcmRouter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_currency_location","contains","convert","convert","convert","convert","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","filter","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_fee_per_second","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","kint_per_second","ksm_per_second","non_canonical_currency_location","take_revenue","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"kintsugi_runtime_parachain"],[6187,"kintsugi_runtime_parachain::BtcRelayCall"],[6191,"kintsugi_runtime_parachain::NominationEvent"],[6199,"kintsugi_runtime_parachain::TimestampCall"],[6200,"kintsugi_runtime_parachain::api"],[6201,"kintsugi_runtime_parachain::constants"],[6203,"kintsugi_runtime_parachain::constants::currency"],[6297,"kintsugi_runtime_parachain::constants::time"],[6306,"kintsugi_runtime_parachain::contracts"],[6796,"kintsugi_runtime_parachain::dex"],[7202,"kintsugi_runtime_parachain::evm"],[7602,"kintsugi_runtime_parachain::token_distribution"],[7606,"kintsugi_runtime_parachain::weights"],[7647,"kintsugi_runtime_parachain::weights::annuity_escrow_annuity"],[7681,"kintsugi_runtime_parachain::weights::annuity_vault_annuity"],[7715,"kintsugi_runtime_parachain::weights::block_weights"],[7748,"kintsugi_runtime_parachain::weights::btc_relay"],[7783,"kintsugi_runtime_parachain::weights::clients_info"],[7815,"kintsugi_runtime_parachain::weights::collator_selection"],[7852,"kintsugi_runtime_parachain::weights::cumulus_pallet_xcmp_queue"],[7884,"kintsugi_runtime_parachain::weights::democracy"],[7928,"kintsugi_runtime_parachain::weights::dex_general"],[7973,"kintsugi_runtime_parachain::weights::dex_stable"],[8022,"kintsugi_runtime_parachain::weights::dex_swap_router"],[8053,"kintsugi_runtime_parachain::weights::escrow"],[8090,"kintsugi_runtime_parachain::weights::extrinsic_weights"],[8123,"kintsugi_runtime_parachain::weights::farming"],[8159,"kintsugi_runtime_parachain::weights::fee"],[8197,"kintsugi_runtime_parachain::weights::frame_system"],[8234,"kintsugi_runtime_parachain::weights::issue"],[8273,"kintsugi_runtime_parachain::weights::loans"],[8324,"kintsugi_runtime_parachain::weights::nomination"],[8360,"kintsugi_runtime_parachain::weights::oracle"],[8394,"kintsugi_runtime_parachain::weights::orml_asset_registry"],[8427,"kintsugi_runtime_parachain::weights::orml_tokens"],[8462,"kintsugi_runtime_parachain::weights::orml_vesting"],[8495,"kintsugi_runtime_parachain::weights::pallet_collective"],[8535,"kintsugi_runtime_parachain::weights::pallet_identity"],[8581,"kintsugi_runtime_parachain::weights::pallet_membership"],[8618,"kintsugi_runtime_parachain::weights::pallet_multisig"],[8655,"kintsugi_runtime_parachain::weights::pallet_preimage"],[8697,"kintsugi_runtime_parachain::weights::pallet_proxy"],[8737,"kintsugi_runtime_parachain::weights::pallet_scheduler"],[8779,"kintsugi_runtime_parachain::weights::pallet_timestamp"],[8811,"kintsugi_runtime_parachain::weights::pallet_utility"],[8846,"kintsugi_runtime_parachain::weights::pallet_xcm"],[8892,"kintsugi_runtime_parachain::weights::pallet_xcm_benchmarks_fungible"],[8928,"kintsugi_runtime_parachain::weights::pallet_xcm_benchmarks_generic"],[8987,"kintsugi_runtime_parachain::weights::redeem"],[9024,"kintsugi_runtime_parachain::weights::replace"],[9061,"kintsugi_runtime_parachain::weights::security"],[9093,"kintsugi_runtime_parachain::weights::supply"],[9125,"kintsugi_runtime_parachain::weights::tx_pause"],[9157,"kintsugi_runtime_parachain::weights::vault_registry"],[9198,"kintsugi_runtime_parachain::xcm_config"]],"d":["Some way of identifying an account on the chain. We …","The adjustment variable of the runtime. Higher values will …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","","","Data describing the asset properties.","","","","","","","","","","An Aura authority identifier using S/R 25519 as its crypto.","","","","","","","Balance of an account.","a wrapper around a balance, used in RPC to workaround a …","","","","","","","Block type as expected by this runtime.","","BlockId type as expected by this runtime.","An index to a block.","","Contains a variant per dispatchable extrinsic that this …","Complex storage builder stuff.","Extrinsic type that has already been checked.","","","","","","","","","","","","We allow root and the Relay Chain council to execute …","Const getter for a basic type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generalized group of dispatch types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>Contains</code> implementation that contains every value.","Executive: handles dispatch to the various modules.","","","","","","","","","","","","","","","","","","","","A fixed point number representation in the range. <em>Fixed </em>…","","","A trait for querying a single value from a type.","","","","","","","A hash of some data used by the chain.","Block header type as expected by this runtime.","The full identification of a key owner and the stash …","","","","","Implementor of <code>WeightToFee</code> that maps one unit of weight to …","","","","","","","","Something which can compute and check proofs of a …","","","","","","","","","","","","An identifier for a lock. Used for disambiguating …","The maximal weight in all dimensions.","We allow for 0.5 seconds of compute with a 12 second …","A mandatory dispatch. These kinds of dispatch are always …","","","","","","","","","","","","","","","","","","","","","","","Minimum amount of the multiplier. This value cannot be too …","","An instant or duration in time.","","","","","","","","","","","","","The <code>Event</code> enum of this pallet","","","Index of a transaction in the chain. 32-bit should be …","A normal dispatch.","A <code>Contains</code> implementation that contains no value.","","An operational dispatch.","This value increases the priority of <code>Operational</code> …","","","","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","","","","","","A fixed point representation of a number in the range [0, 1…","","A fixed point representation of a number in the range [0, 1…","","","","","","","","","","","","","The proof of membership itself.","","","","","","","The type used to represent the kinds of proxying allowed.","The type that get/take return.","","","","","","","","","","","","","","","","","","By default, Substrate uses RocksDB, so this will be the …","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","","","","","","","","","","","","","","","","","","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","The signed fixed point type.","The <code>Inner</code> type of the <code>SignedFixedPoint</code>.","","","","A trait for working with macro-generated storage values …","","","","","","","","","","","","","","","","","","","Target Spacing: 10 minutes (600 seconds)","The portion of the <code>NORMAL_DISPATCH_RATIO</code> that we adjust …","","","","","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","The unsigned fixed point type.","The <code>Inner</code> type of the <code>UnsignedFixedPoint</code>.","","","","","This runtime version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the <em>active</em> block height when this request was opened","","","","","Add a value and return the result.","","","","","","Constant version of Add for <code>proof_size</code> component with u64.","Constant version of Add for <code>ref_time</code> component with u64.","","Returns an array containing all dispatch classes.","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","","","the number of tokens that will be transferred to the user …","","the amount of tokens to be replaced","","total amount of BTC for the vault to send","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","","","Append the given item to the value in the storagessimilate the storage for this module into pre-existing …the vault’s Bitcoin deposit address","the user’s Bitcoin address for payment verification","the Bitcoin address of the new vault","the highest recorded height in the BTC-Relay (at time of …","the highest recorded height in the BTC-Relay (at time of …","the highest recorded height in the BTC-Relay (at time of …","the vault’s Bitcoin public key (when this request was …","","","Build the storage out of this builder.","","","","","","","","","","","Check a proof of membership on-chain. Return <code>Some</code> iff the …","","Try to increase <code>self</code> by <code>amount</code> via checked addition.","Checked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …","","","","","Checked <code>Weight</code> scalar division. Computes …","","Calculates how many <code>other</code> fit into <code>self</code>.","Checked <code>Weight</code> scalar multiplication. Computes …","","","","Try to reduce <code>self</code> by <code>amount</code> via checked subtraction.","Divide by another value with custom rounding, returning …","Checked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","additional collateral to cover replacement","","","","","","","","","","","","","","","Divide by another value, returning <code>None</code> in the case of an …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value with custom rounding, returning …","A set of constant values used in the kintsugi runtime.","Construct a runtime, with the given name and the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","Read the length of the storage value without decoding the …","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thingonstant version of Div with u64.","","Divide by a value and return the resultoes the value (explicitly) exist in storage?","","","","","the number of tokens that will be transferred to the fee …","total redeem fees - taken from request amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Convert to runtime origin using […","Convert to runtime origin, using as filter: …","Convert to runtime origin with caller being system signed …","","Convert to runtime origin using […","Convert to runtime origin using […","Convert to runtime origin using […","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct <code>Weight</code> from the same weight for all parts.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","Convert from a <code>float</code> value.","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","","Create a new instance from the given <code>inner</code> value.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Construct <code>Weight</code> from weight parts, namely reference time …","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Convert from a <code>Perbill</code> value.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Calculate an approximation of a rational.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","Calculate an approximation of a rational with custom …","","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Creates self from a <code>u32</code>.","","","Generate a set of keys with optionally using the given …","","Return the current value.","Load the value from the provided storage instance.","","","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the collateral held for spam prevention","the collateral held for spam prevention","The currency used for the griefing collateral","","","Get the storage key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::initialize</code>.","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codettempt to convert into a <code>PerThing</code>. This will always …","","Return the instance’s inner value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into a <code>Perbill</code> value. Will saturate if above one …","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","","Returns the key for this parameter type.","","Clear the storage value.","","","Get the aggressive max of <code>self</code> and <code>other</code> weight.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the conservative min of <code>self</code> and <code>other</code> weight.","","","","","","","","","","Constant version of Mul with u64.","","","Multiply by a value and return the result.","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","Mutate the value","Mutate the value. Deletes the item if mutated to a <code>None</code>.","","","","The version information used to identify this runtime when …","","Negate the value.","Create a call with the variant <code>initialize</code>.","Create a call with the variant <code>set</code>.","Create a call with the variant <code>store_block_header</code>.","the vault which is replacing the old vault","","Returns an array of all dispatch classes except <code>Mandatory</code>.","Create with system none origin and …","","","the vault which has requested to be replaced","","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","the <em>active</em> block height when this request was opened","the <em>active</em> block height when this request was opened","","","","Create new implementations of the <code>Get</code> trait.","","","","","","","","","","","the issue period when this request was opened","the redeem period when this request was opened","the replace period when this request was opened","","","","","","","premium redeem amount in collateral","","","","Return the storage size part of the weight.","Return a mutable reference to the storage size part of the …","Prove membership of a key owner in the current block-state.","Store a value under this key into the provided storage …","","","","","","","the account redeeming tokens (for BTC)","Return the reference time part of the weight.","Return a mutable reference to the reference time part of …","","","the account issuing tokens","","Create with system root origin and …","","Increment <code>Weight</code> by <code>amount</code> via saturating addition.","Saturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating <code>Weight</code> scalar division. Computes …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating <code>Weight</code> scalar multiplication. Computes …","","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating <code>Weight</code> scalar exponentiation. Computes …","","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Reduce <code>Weight</code> by <code>amount</code> via saturating subtraction.","Saturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","","","","Store a value under this key into the provided storage …","Set the value of this parameter type in the storage.","See <code>Pallet::set</code>.","","","Set the storage size part of the weight.","Set the reference time part of the weight.","Create with system signed origin and …","","","","","","","","","","","","","","","","","","","","","","Take the square root of a positive value.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","the status of this issue request","the status of this redeem request","the status of this replace request","","See <code>Pallet::store_block_header</code>.","","","Subtract a value and return the result.","","","","Constant version of Sub for <code>proof_size</code> component with u64.","Constant version of Sub for <code>ref_time</code> component with u64.","","","","","","","Take a value from storage, removing it afterwards.","","","","","","Convert into a <code>float</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","amount the vault should spend on the bitcoin inclusion fee …","Translate a value from some previous type (<code>O</code>) to the …","","Try to add some <code>other</code> weight while upholding the <code>limit</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to get the underlying value from the provided storage …ttempt to convert into a <code>PerThing</code>. This will succeed iff …","Mutate the value if closure returns <code>Ok</code>","Mutate the value if closure returns <code>Ok</code>. Deletes the item …","","","Compute the square root, rounding as desired. If it …the vault associated with this issue request","the vault associated with this redeem request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a <code>Weight</code> where all fields are zero.","","","See <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","","","","","","","","","","","","","","","Money matters.","Time and blocks.","Balance of an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key for this parameter type.","","","","","","","","","","","","","Set the value of this parameter type in the storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeets the ideal block fullness to 50%. If the block weight …","","","","","","The amount of gas per pov, taken from Moonbeam: …","Get the “action” (call or create) of an Ethereum …","","","","","Set the EVM chain ID based on the parachain ID","Approximate ratio of the amount of Weight per Gas …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key for this parameter type.","","","","Set the value of this parameter type in the storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Autogenerated weights for annuity","Autogenerated weights for annuity","THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK …","Autogenerated weights for btc_relay","Autogenerated weights for clients_info","Autogenerated weights for collator_selection","Autogenerated weights for cumulus_pallet_xcmp_queue","Autogenerated weights for democracy","Autogenerated weights for dex_general","Autogenerated weights for dex_stable","Autogenerated weights for dex_swap_router","Autogenerated weights for escrow","THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK …","Autogenerated weights for farming","Autogenerated weights for fee","Autogenerated weights for frame_system","Autogenerated weights for issue","Autogenerated weights for loans","Autogenerated weights for nomination","Autogenerated weights for oracle","Autogenerated weights for orml_asset_registry","Autogenerated weights for orml_tokens","Autogenerated weights for orml_vesting","Autogenerated weights for pallet_collective","Autogenerated weights for pallet_identity","Autogenerated weights for pallet_membership","Autogenerated weights for pallet_multisig","Autogenerated weights for pallet_preimage","Autogenerated weights for pallet_proxy","Autogenerated weights for pallet_scheduler","Autogenerated weights for pallet_timestamp","Autogenerated weights for pallet_utility","Autogenerated weights for pallet_xcm","Autogenerated weights for pallet_xcm_benchmarks::fungible","Autogenerated weights for pallet_xcm_benchmarks::generic","Autogenerated weights for redeem","Autogenerated weights for replace","Autogenerated weights for security","Autogenerated weights for supply","Autogenerated weights for tx_pause","Autogenerated weights for vault_registry","Weights for annuity using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Storage: Tokens Accounts (r:1 w:0) Proof: Tokens Accounts …","","Storage: EscrowRewards Stake (r:1 w:0) Proof: …","Weights for annuity using the Substrate node and …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Storage: Tokens Accounts (r:1 w:0) Proof: Tokens Accounts …","","","Time to execute an empty block. Calculated by multiplying …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Returns the value of this parameter type.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Weights for btc_relay using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Storage: BTCRelay BestBlock (r:1 w:1) Proof: BTCRelay …","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: BTCRelay ChainCounter (r:1 w:0) Proof: BTCRelay …","Storage: BTCRelay ChainCounter (r:1 w:1) Proof: BTCRelay …","Storage: BTCRelay ChainCounter (r:1 w:1) Proof: BTCRelay …","Storage: BTCRelay ChainCounter (r:1 w:0) Proof: BTCRelay …","","","","","","","","Weights for clients_info using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: ClientsInfo CurrentClientReleases (r:0 w:1) …","Storage: ClientsInfo PendingClientReleases (r:0 w:1) …","","","","","","","","Weights for collator_selection using the Substrate node …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: CollatorSelection Candidates (r:1 w:1) Proof: …","Storage: CollatorSelection Candidates (r:1 w:0) Proof: …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","Storage: CollatorSelection Candidates (r:1 w:1) Proof: …","Storage: CollatorSelection CandidacyBond (r:0 w:1) Proof: …","Storage: CollatorSelection DesiredCandidates (r:0 w:1) …","Storage: Session NextKeys (r:100 w:0) Proof Skipped: …","","","","","","","","Weights for cumulus_pallet_xcmp_queue using the Substrate …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: XcmpQueue QueueConfig (r:1 w:1) Proof Skipped: …","Storage: XcmpQueue QueueConfig (r:1 w:1) Proof Skipped: …","","","","","","","","Weights for democracy using the Substrate node and …","","","","","Storage: Democracy PublicProps (r:1 w:1) Proof: Democracy …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Storage: Democracy PublicProps (r:0 w:1) Proof: Democracy …","","","","Storage: Democracy PublicProps (r:1 w:1) Proof: Democracy …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Democracy LowestUnbaked (r:1 w:0) Proof: …","Storage: Democracy LowestUnbaked (r:1 w:0) Proof: …","Storage: Democracy LowestUnbaked (r:1 w:0) Proof: …","Storage: Democracy PublicPropCount (r:1 w:1) Proof: …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Storage: Democracy DepositOf (r:1 w:1) Proof: Democracy …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","","","","","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","Storage: Democracy ReferendumInfoOf (r:1 w:1) Proof: …","","Weights for dex_general using the Substrate node and …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","","","Storage: DexGeneral BootstrapRewards (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:0) Proof: …","Storage: DexGeneral BootstrapLimits (r:1 w:0) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral BootstrapRewards (r:1 w:1) Proof: …","","","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: DexGeneral PairStatuses (r:1 w:1) Proof: …","Storage: DexGeneral FeeMeta (r:1 w:1) Proof: DexGeneral …","Storage: DexGeneral FeeMeta (r:1 w:1) Proof: DexGeneral …","Storage: Tokens Accounts (r:20 w:20) Proof: Tokens …","Storage: Tokens Accounts (r:20 w:20) Proof: Tokens …","","","","","","","","Weights for dex_stable using the Substrate node and …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","","","","","Storage: DexStable NextPoolId (r:1 w:1) Proof: DexStable …","Storage: DexStable LpCurrencies (r:2 w:1) Proof: DexStable …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Timestamp Now (r:1 w:0) Proof: Timestamp Now …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","Storage: DexStable Pools (r:2 w:2) Proof: DexStable Pools …","","","","","","","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","","Storage: DexStable Pools (r:1 w:1) Proof: DexStable Pools …","Weights for dex_swap_router using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The range of component <code>a</code> is <code>[2, 10]</code>.","","Weights for escrow using the Substrate node and …","","","","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Escrow Blocks (r:0 w:1) Proof: Escrow Blocks …","Storage: Escrow Limits (r:0 w:1) Proof: Escrow Limits …","","","","","","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","","Storage: Escrow Locked (r:1 w:1) Proof: Escrow Locked …","Time to execute a NO-OP extrinsic, for example …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Returns the value of this parameter type.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Weights for farming using the Substrate node and …","","","","","Storage: FarmingRewards Stake (r:1 w:0) Proof: …","Storage: FarmingRewards RewardCurrencies (r:1 w:0) Proof: …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Farming RewardSchedules (r:5 w:0) Proof: Farming …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","","","","","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","Storage: FarmingRewards RewardCurrencies (r:1 w:0) Proof: …","Weights for fee using the Substrate node and recommended …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Nomination Vaults (r:1 w:0) Proof: Nomination …","Storage: Fee IssueFee (r:0 w:1) Proof: Fee IssueFee …","Storage: Fee IssueGriefingCollateral (r:0 w:1) Proof: Fee …","Storage: Fee PremiumRedeemFee (r:0 w:1) Proof: Fee …","Storage: Fee PunishmentFee (r:0 w:1) Proof: Fee …","Storage: Fee RedeemFee (r:0 w:1) Proof: Fee RedeemFee …","Storage: Fee ReplaceGriefingCollateral (r:0 w:1) Proof: …","","","","","","","","Storage: VaultCapacity Stake (r:1 w:0) Proof: …","Weights for frame_system using the Substrate node and …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","The range of component <code>b</code> is <code>[0, 3932160]</code>.","The range of component <code>b</code> is <code>[0, 3932160]</code>.","Storage: System Digest (r:1 w:1) Proof Skipped: System …","Storage: System Digest (r:1 w:1) Proof Skipped: System …","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","","","","","","","","Weights for issue using the Substrate node and recommended …","","","","","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","","","","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Storage: Issue IssueRequests (r:1 w:1) Proof: Issue …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: BTCRelay StartBlockHeight (r:1 w:0) Proof: …","Storage: Issue IssuePeriod (r:0 w:1) Proof: Issue …","","","","","","","","Weights for loans using the Substrate node and recommended …","Storage: Loans Markets (r:1 w:1) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:1) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","","","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans RewardSupplyState (r:1 w:1) Proof: Loans …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","","","","Storage: Loans UnderlyingAssetId (r:1 w:1) Proof: Loans …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Timestamp Now (r:1 w:0) Proof: Timestamp Now …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","","","","","","","Storage: Loans Markets (r:1 w:1) Proof: Loans Markets …","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Storage: Loans Markets (r:1 w:1) Proof: Loans Markets …","","Storage: Loans Markets (r:2 w:0) Proof: Loans Markets …","Weights for nomination using the Substrate node and …","","","","","Storage: VaultStaking Nonce (r:1 w:0) Proof: VaultStaking …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Nomination NominationEnabled (r:1 w:0) Proof: …","Storage: Nomination Vaults (r:1 w:1) Proof: Nomination …","Storage: Nomination NominationEnabled (r:0 w:1) Proof: …","Storage: Nomination NominationLimit (r:0 w:1) Proof: …","","","","","","","","Storage: VaultStaking Nonce (r:1 w:0) Proof: VaultStaking …","Weights for oracle using the Substrate node and …","","","","","","","","Storage: Oracle AuthorizedOracles (r:1 w:0) Proof: Oracle …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Storage: Oracle AuthorizedOracles (r:0 w:1) Proof: Oracle …","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Oracle RawValuesUpdated (r:1000 w:999) Proof: …","Storage: Oracle AuthorizedOracles (r:0 w:1) Proof: Oracle …","","","","","","","","Weights for orml_asset_registry using the Substrate node …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: AssetRegistry LastAssetId (r:1 w:1) Proof …","","","","","","","","Storage: AssetRegistry Metadata (r:1 w:1) Proof Skipped: …","","Weights for orml_tokens using the Substrate node and …","","","","","","","","Storage: Loans UnderlyingAssetId (r:1 w:0) Proof: Loans …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","Storage: Loans UnderlyingAssetId (r:1 w:0) Proof: Loans …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","Storage: Loans UnderlyingAssetId (r:1 w:0) Proof: Loans …","","","","","","","","Weights for orml_vesting using the Substrate node and …","","","","","Storage: Vesting VestingSchedules (r:1 w:1) Proof: Vesting …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","Storage: Vesting VestingSchedules (r:1 w:1) Proof: Vesting …","","Weights for pallet_collective using the Substrate node and …","","","","","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","Storage: TechnicalCommittee Voting (r:1 w:1) Proof …","","","Storage: TechnicalCommittee Proposals (r:1 w:1) Proof …","","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","Storage: TechnicalCommittee Members (r:1 w:1) Proof …","","","","","","","Storage: TechnicalCommittee Members (r:1 w:0) Proof …","","Weights for pallet_identity using the Substrate node and …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","","","","","Storage: Identity IdentityOf (r:1 w:1) Proof: Identity …","Storage: Identity SubsOf (r:1 w:1) Proof: Identity SubsOf …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Identity SubsOf (r:1 w:1) Proof: Identity SubsOf …","Storage: Identity Registrars (r:1 w:0) Proof: Identity …","Storage: Identity SuperOf (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","Storage: Identity Registrars (r:1 w:0) Proof: Identity …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity Registrars (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:1) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","Storage: Identity IdentityOf (r:1 w:0) Proof: Identity …","","","","","","","","Weights for pallet_membership using the Substrate node and …","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","","","","","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","Storage: TechnicalMembership Prime (r:0 w:1) Proof: …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","Storage: TechnicalMembership Members (r:1 w:0) Proof: …","Storage: TechnicalMembership Members (r:1 w:1) Proof: …","","","","","","","","Weights for pallet_multisig using the Substrate node and …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","","","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","The range of component <code>z</code> is <code>[0, 10000]</code>.","","","Storage: Multisig Multisigs (r:1 w:1) Proof: Multisig …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Weights for pallet_preimage using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","","","","","","","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","Storage: Preimage StatusFor (r:1 w:1) Proof: Preimage …","","Weights for pallet_proxy using the Substrate node and …","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:0) Proof: Proxy Proxies …","","","","","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:0) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:0) Proof: Proxy Proxies …","Storage: Proxy Announcements (r:1 w:1) Proof: Proxy …","Storage: Proxy Announcements (r:1 w:1) Proof: Proxy …","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","Storage: Proxy Proxies (r:1 w:1) Proof: Proxy Proxies …","","","","","","","","Weights for pallet_scheduler using the Substrate node and …","","","","","Storage: Scheduler Agenda (r:1 w:1) Proof: Scheduler …","Storage: Scheduler Lookup (r:1 w:1) Proof: Scheduler …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Scheduler Agenda (r:1 w:1) Proof: Scheduler …","Storage: Scheduler Lookup (r:1 w:1) Proof: Scheduler …","Storage: Scheduler Agenda (r:1 w:1) Proof: Scheduler …","Storage: Scheduler IncompleteSince (r:1 w:1) Proof: …","","Storage: Preimage PreimageFor (r:1 w:1) Proof: Preimage …","Storage: Scheduler Lookup (r:0 w:1) Proof: Scheduler …","","","","","","","","","Weights for pallet_timestamp using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Storage: Timestamp Now (r:1 w:1) Proof: Timestamp Now …","","","","","","","","Weights for pallet_utility using the Substrate node and …","","","","The range of component <code>c</code> is <code>[0, 1000]</code>.","The range of component <code>c</code> is <code>[0, 1000]</code>.","","","","","","","The range of component <code>c</code> is <code>[0, 1000]</code>.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Weights for pallet_xcm using the Substrate node and …","Storage: PolkadotXcm VersionNotifyTargets (r:5 w:0) Proof …","","","","","","","","Storage: Benchmark Override (r:0 w:0) Proof Skipped: …","Storage: PolkadotXcm SafeXcmVersion (r:0 w:1) Proof …","Storage: PolkadotXcm VersionNotifiers (r:1 w:1) Proof …","Storage: PolkadotXcm XcmExecutionSuspended (r:0 w:1) Proof …","Storage: PolkadotXcm VersionNotifiers (r:1 w:1) Proof …","Storage: PolkadotXcm SupportedVersion (r:0 w:1) Proof …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: PolkadotXcm VersionNotifyTargets (r:4 w:2) Proof …","Storage: PolkadotXcm SupportedVersion (r:4 w:2) Proof …","Storage: PolkadotXcm VersionNotifiers (r:4 w:2) Proof …","Storage: PolkadotXcm VersionNotifyTargets (r:4 w:2) Proof …","Storage: PolkadotXcm VersionNotifyTargets (r:2 w:1) Proof …","Storage: PolkadotXcm VersionNotifyTargets (r:3 w:0) Proof …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: PolkadotXcm SupportedVersion (r:1 w:0) Proof …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","","","","","","","","Weights for pallet_xcm_benchmarks::fungible using the …","","","","","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","Storage: Tokens Accounts (r:1 w:1) Proof: Tokens Accounts …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","Storage: Tokens Accounts (r:2 w:2) Proof: Tokens Accounts …","","","","","","","","Storage: UnknownTokens ConcreteFungibleBalances (r:1 w:0) …","Weights for pallet_xcm_benchmarks::generic using the …","","","","","","","Storage: PolkadotXcm AssetTraps (r:1 w:1) Proof Skipped: …","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: PolkadotXcm Queries (r:1 w:0) Proof Skipped: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","Storage: ParachainInfo ParachainId (r:1 w:0) Proof: …","","","","","Storage: PolkadotXcm VersionNotifyTargets (r:1 w:1) Proof …","","","","","","","","","","Storage: PolkadotXcm VersionNotifyTargets (r:0 w:1) Proof …","","Weights for redeem using the Substrate node and …","","","","","Storage: <code>Redeem::RedeemRequests</code> (r:1 w:1) Proof: …","Storage: <code>Redeem::RedeemRequests</code> (r:1 w:1) Proof: …","","","","Storage: <code>Redeem::RedeemRequests</code> (r:1 w:1) Proof: …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: <code>Tokens::Accounts</code> (r:3 w:3) Proof: <code>Tokens::Accounts</code>…","Storage: <code>Tokens::Accounts</code> (r:2 w:1) Proof: <code>Tokens::Accounts</code>…","Storage: <code>VaultRegistry::Vaults</code> (r:1 w:1) Proof: …","Storage: <code>Redeem::RedeemPeriod</code> (r:0 w:1) Proof: …","","","","","","","","Weights for replace using the Substrate node and …","Storage: VaultRegistry Vaults (r:2 w:2) Proof: …","","","","","Storage: Replace ReplaceRequests (r:1 w:1) Proof: Replace …","","","","Storage: Replace ReplaceRequests (r:1 w:1) Proof: Replace …","Storage: Replace ReplaceRequests (r:1 w:1) Proof: Replace …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Storage: Replace ReplacePeriod (r:0 w:1) Proof: Replace …","","","","","","","","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Weights for security using the Substrate node and …","Storage: Security IsDeactivated (r:0 w:1) Proof: Security …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Security IsDeactivated (r:1 w:0) Proof: Security …","","","","","","","","Weights for supply using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: Tokens TotalIssuance (r:1 w:1) Proof: Tokens …","Storage: Supply Inflation (r:0 w:1) Proof: Supply …","","","","","","","","Weights for tx_pause using the Substrate node and …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: TxPause PausedCalls (r:2 w:1) Proof: TxPause …","","","","","","","Storage: TxPause PausedCalls (r:2 w:1) Proof: TxPause …","","Weights for vault_registry using the Substrate node and …","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Storage: VaultRegistry VaultBitcoinPublicKey (r:1 w:1) …","Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0) …","Storage: VaultRegistry Vaults (r:1 w:1) Proof: …","Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0) …","Storage: VaultRegistry LiquidationCollateralThreshold (r:0 …","Storage: VaultRegistry MinimumCollateralVault (r:0 w:1) …","Storage: VaultRegistry PremiumRedeemThreshold (r:0 w:1) …","Storage: VaultRegistry SecureCollateralThreshold (r:0 w:1) …","Storage: VaultRegistry SystemCollateralCeiling (r:0 w:1) …","","","","","","","","","","","","","","","","","","No local origins on this chain are allowed to dispatch XCM …","","","","","","","","","","A call filter for the XCM Transact instruction. This is a …","","","","","","","This is the type we use to convert an (incoming) XCM …","The means for routing XCM messages which are not for local …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,0,0,0,0,0,0,0,0,75,0,0,0,77,100,33,0,0,0,0,0,0,0,0,77,100,33,0,0,0,0,0,77,33,0,0,0,0,0,0,0,0,0,0,0,77,100,33,0,0,77,100,33,0,0,0,0,0,77,100,33,0,77,100,37,33,0,100,0,0,0,0,0,77,100,33,0,64,0,77,100,33,0,77,100,33,0,77,100,33,0,0,77,100,33,0,0,77,100,33,0,0,0,0,0,0,0,0,77,100,33,0,77,100,33,0,0,0,0,0,77,100,0,0,77,100,37,33,0,0,0,0,0,0,77,100,33,0,0,0,77,100,0,0,100,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,373,0,77,100,33,0,0,0,77,100,33,0,0,0,0,0,0,0,0,77,100,33,0,0,0,0,8,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,33,0,77,100,33,0,77,100,33,0,0,64,64,0,60,0,0,60,0,0,77,100,33,0,0,0,0,0,0,0,0,77,100,33,0,0,0,0,0,0,77,100,37,33,0,0,77,100,33,0,0,373,0,77,100,33,0,0,0,374,0,0,0,77,100,33,0,0,0,77,100,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,100,33,0,77,100,33,0,77,100,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,100,33,0,0,77,100,33,0,0,0,0,77,100,33,0,0,0,0,77,100,37,33,0,0,0,0,0,0,77,100,33,0,0,33,0,0,0,77,100,33,0,0,0,0,0,77,0,0,0,77,100,33,0,0,77,100,0,0,0,77,100,33,0,0,77,100,33,0,0,0,0,0,77,100,0,0,77,100,33,0,0,0,0,77,100,0,0,77,100,0,0,77,100,33,0,37,0,0,0,0,0,64,0,77,100,33,0,77,100,33,8,62,64,69,16,72,73,9,21,19,10,11,74,75,76,77,12,37,33,78,79,80,81,82,60,19,76,76,76,8,9,9,10,11,8,12,8,8,69,60,8,8,8,8,16,19,16,45,19,21,21,8,8,8,8,8,0,25,374,76,33,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,37,41,480,41,74,41,41,76,76,76,41,0,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,16,21,19,16,21,19,16,41,41,480,76,76,76,76,76,76,76,12,76,76,373,33,8,8,8,9,10,11,8,9,8,8,9,10,11,8,9,8,8,9,10,11,8,8,45,9,10,11,75,60,8,62,64,69,16,72,73,9,21,19,10,11,74,75,76,77,12,37,33,78,79,80,81,82,60,8,62,64,69,16,72,73,9,21,19,10,11,74,75,76,77,12,37,33,78,79,80,81,82,60,9,10,11,75,78,79,80,81,19,19,76,41,76,9,10,11,75,78,79,80,81,76,76,76,9,9,9,0,0,478,376,379,476,476,476,477,477,477,0,386,76,82,82,475,76,76,76,76,76,481,69,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,9,10,11,74,374,76,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,10,10,11,11,8,45,73,9,10,11,75,41,82,60,9,10,11,75,78,79,80,81,9,10,11,75,78,79,80,81,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,75,78,79,80,81,9,10,11,75,78,79,80,81,41,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,8,16,45,9,21,19,10,11,74,41,60,0,33,33,62,72,33,384,385,8,8,9,9,10,10,11,11,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,76,45,9,10,11,74,8,62,64,69,16,45,72,9,9,21,19,10,10,11,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,60,76,8,62,64,69,16,45,72,9,21,19,10,11,74,75,76,77,37,33,78,79,80,81,60,8,8,8,8,62,62,62,62,64,64,64,64,69,69,69,69,45,45,45,45,72,72,72,72,9,9,9,9,19,19,19,19,10,10,10,10,11,11,11,11,74,74,74,74,75,75,75,75,76,76,76,76,77,77,77,77,37,37,37,37,33,33,33,33,78,78,78,78,79,79,79,79,80,80,80,80,81,81,81,81,60,60,60,60,76,76,76,41,0,41,41,76,25,69,374,25,76,16,21,16,21,41,376,379,75,476,477,12,76,8,8,62,64,69,16,72,73,9,9,21,19,10,11,74,75,76,77,100,12,37,33,78,79,80,81,60,76,375,8,8,8,62,64,69,16,45,72,73,9,9,9,9,9,21,376,377,378,379,380,19,381,382,10,10,383,384,385,386,11,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,476,477,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,12,12,12,12,12,12,12,12,37,37,37,37,37,37,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,41,78,79,80,81,82,478,25,60,479,8,100,9,10,10,11,11,9,9,375,375,8,8,62,62,64,64,69,69,16,16,45,45,72,72,73,73,9,9,21,21,376,376,377,377,378,378,379,379,380,380,19,19,381,381,382,382,10,10,383,383,384,384,385,385,386,386,11,11,74,74,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,75,75,472,472,473,473,474,474,475,475,76,76,77,77,476,476,477,477,100,100,12,12,37,37,33,33,41,41,78,78,79,79,80,80,81,81,82,82,478,478,25,25,60,60,479,479,8,10,10,11,11,9,10,11,10,11,9,10,11,10,11,9,10,11,375,375,8,8,62,62,64,64,69,69,16,16,45,45,72,72,73,73,9,9,21,21,376,376,377,377,378,378,379,379,380,380,19,19,381,381,382,382,10,10,383,383,384,384,385,385,386,386,11,11,74,74,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,75,75,472,472,473,473,474,474,475,475,76,76,77,77,476,476,477,477,100,100,12,12,37,37,33,33,41,41,78,78,79,79,80,80,81,81,82,82,478,478,25,25,60,60,479,479,9,9,76,76,74,76,482,374,73,73,73,383,387,387,387,388,388,388,389,389,389,390,390,390,391,391,391,392,392,392,393,393,393,394,394,394,395,395,395,396,396,396,397,397,397,398,398,398,399,399,399,400,400,400,401,401,401,402,402,402,403,403,403,404,404,404,405,405,405,406,406,406,407,407,407,408,408,408,409,409,409,410,410,410,411,411,411,412,412,412,413,413,413,414,414,414,415,415,415,416,416,416,417,417,417,418,418,418,419,419,419,420,420,420,421,421,421,422,422,422,423,423,423,424,424,424,425,425,425,426,426,426,427,427,427,428,428,428,429,429,429,430,430,430,431,431,431,432,432,432,433,433,433,434,434,434,435,435,435,436,436,436,437,437,437,438,438,438,439,439,439,440,440,440,441,441,441,442,442,442,443,443,443,444,444,444,445,445,445,446,446,446,447,447,447,448,448,448,449,449,449,450,450,450,451,451,451,452,452,452,453,453,453,454,455,455,455,456,456,456,457,457,457,458,458,458,459,459,459,460,460,460,461,461,461,462,462,462,463,463,463,464,464,464,465,465,465,466,466,466,467,467,467,468,468,468,469,469,469,470,470,470,471,471,471,472,472,472,473,473,473,474,474,474,479,479,479,76,76,76,76,0,76,76,62,72,62,72,33,62,72,62,72,33,76,76,76,76,76,76,62,72,33,76,76,76,76,76,76,33,76,76,76,76,76,74,76,76,76,76,76,76,76,76,76,76,76,76,16,19,16,19,16,25,25,374,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,475,76,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,72,76,76,10,11,10,11,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,375,375,8,8,62,62,64,64,69,69,16,16,45,45,72,72,73,73,9,9,21,21,376,376,377,377,378,378,379,379,380,380,19,19,381,381,382,382,10,10,383,383,384,384,385,385,386,386,11,11,74,74,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,75,75,472,472,473,473,474,474,475,475,76,76,77,77,476,476,477,477,100,100,12,12,37,37,33,33,41,41,78,78,79,79,80,80,81,81,82,82,478,478,25,25,60,60,479,479,375,375,8,8,62,62,64,64,69,69,16,16,45,45,72,72,73,73,9,9,21,21,376,376,377,377,378,378,379,379,380,380,19,19,381,381,382,382,10,10,383,383,384,384,385,385,386,386,11,11,74,74,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,75,75,472,472,473,473,474,474,475,475,76,76,77,77,476,476,477,477,100,100,37,37,33,33,41,41,78,78,79,79,80,80,81,81,82,82,478,478,25,25,60,60,479,479,375,375,8,8,62,62,64,64,69,69,16,16,45,45,72,72,73,73,9,9,21,21,376,376,377,377,378,378,379,379,380,380,19,19,381,381,382,382,10,10,383,383,384,384,385,385,386,386,11,11,74,74,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,75,75,472,472,473,473,474,474,475,475,76,76,77,77,476,476,477,477,100,100,12,12,37,37,33,33,41,41,78,78,79,79,80,80,81,81,82,82,478,478,25,25,60,60,479,479,12,9,9,9,60,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,9,74,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,25,37,8,45,9,10,11,75,60,10,11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,75,8,9,10,10,11,11,41,401,74,374,41,69,8,8,16,9,21,19,10,11,75,37,78,79,80,81,8,8,9,9,10,10,11,11,76,76,76,76,76,76,8,8,8,9,9,10,10,11,11,475,8,8,9,9,10,10,10,11,11,11,10,11,10,11,374,374,481,475,69,0,9,9,72,62,72,19,41,60,12,12,76,19,382,377,9,10,10,11,11,16,21,41,41,41,0,9,10,11,75,78,79,80,81,8,76,16,21,19,41,10,11,76,33,21,21,0,8,25,8,8,373,374,76,76,76,76,25,41,21,8,8,25,41,16,12,12,12,8,8,9,10,10,11,11,8,10,11,8,9,10,11,8,9,10,11,10,11,10,11,10,11,8,8,9,10,10,11,11,8,16,45,9,21,19,10,11,74,41,60,41,374,401,62,25,12,8,8,12,12,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,60,76,9,10,11,16,21,19,76,72,8,9,9,10,11,8,8,8,41,41,481,69,41,37,374,9,10,11,41,41,9,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,72,73,9,21,19,10,11,74,75,76,77,12,37,33,78,79,80,81,82,60,8,9,0,41,76,21,21,374,9,8,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,374,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,476,477,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,12,37,33,41,78,79,80,81,82,478,25,60,479,9,374,374,378,381,9,12,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,8,62,64,69,16,45,72,9,21,19,10,11,74,75,77,100,37,33,78,79,80,81,60,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,8,62,64,69,16,45,72,9,21,19,10,11,74,75,76,77,100,37,33,78,79,80,81,60,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,8,9,10,11,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,76,45,9,10,11,74,33,76,76,16,21,41,76,76,41,375,8,62,64,69,16,45,72,73,9,21,376,377,378,379,380,19,381,382,10,383,384,385,386,11,74,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,75,472,473,474,475,76,77,476,477,100,12,37,33,41,78,79,80,81,82,478,25,60,479,8,375,0,384,385,76,0,8,8,9,10,10,11,11,483,484,483,484,485,486,485,486,487,488,485,486,489,0,0,0,0,0,0,48,0,0,0,0,48,48,0,0,0,0,48,0,48,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,490,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,490,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,490,346,490,490,490,490,492,490,346,490,490,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,346,490,490,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,491,492,492,490,490,493,493,494,494,495,495,496,496,497,497,498,498,499,499,500,500,501,501,502,502,346,346,491,491,492,492,490,490,493,493,494,494,495,495,496,496,497,497,498,498,499,499,500,500,501,501,502,502,346,346,493,494,494,494,495,495,495,496,496,496,497,497,497,498,498,498,499,499,499,500,500,500,501,501,501,502,502,502,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,491,492,492,490,490,493,493,494,494,495,495,496,496,497,497,498,498,499,499,500,500,501,501,502,502,346,346,491,491,492,492,490,490,493,493,494,494,495,495,496,496,497,497,498,498,499,499,500,500,501,501,502,502,346,346,491,491,492,492,490,490,493,493,494,494,495,495,496,496,497,497,498,498,499,499,500,500,501,501,502,502,346,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,490,502,490,490,490,490,491,490,490,490,490,490,490,490,502,490,490,490,490,490,490,490,490,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,491,492,490,493,494,495,496,497,498,499,500,501,502,346,490,491,492,490,493,494,495,496,497,498,499,500,501,502,346,490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,301,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,301,301,301,301,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,301,301,301,301,301,301,301,301,301,301,301,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,301,503,504,505,506,507,508,509,510,511,512,301,301,301,301,301,301,301,301,503,504,505,506,507,508,509,510,511,512,301,301,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,301,301,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,513,505,514,503,507,507,507,508,508,508,509,509,509,510,510,510,511,511,511,512,512,512,301,301,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,301,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,301,301,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,301,301,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,301,301,301,301,301,301,301,301,301,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,301,301,301,503,504,505,506,507,508,509,510,511,512,301,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,301,503,504,505,506,507,508,509,510,511,512,515,504,516,506,516,506,301,503,504,505,506,507,508,509,510,511,512,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,517,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,520,364,518,519,520,521,522,523,524,525,526,527,528,364,364,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,525,526,526,527,527,528,528,364,364,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,525,526,526,527,527,528,528,521,521,521,522,522,522,523,523,523,524,524,524,525,525,525,526,526,526,527,527,527,528,528,528,518,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,364,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,525,526,526,527,527,528,528,364,364,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,525,526,526,527,527,528,528,364,364,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,525,526,526,527,527,528,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,524,518,364,519,524,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,364,518,519,520,521,522,523,524,525,526,527,528,518,364,364,518,519,520,521,522,523,524,525,526,527,528,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,0,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,0,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,0,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,0,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,0,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,0,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,0,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,0,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,0,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,0,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,0,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,0,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,0,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,0,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,0,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,0,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,0,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,0,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,0,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,0,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,0,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,0,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,0,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,0,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,0,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,0,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,0,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,0,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,0,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,0,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,0,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,0,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,0,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,0,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,0,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,0,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,0,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,0,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,0,573,574,574,574,575,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,573,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,570,571,571,572,572,573,573,574,574,575,575,576,576,577,577,578,578,579,579,580,580,581,581,582,582,583,583,584,584,585,585,586,586,587,587,588,588,589,589,590,590,591,591,592,592,570,570,571,571,572,572,573,573,574,574,575,575,576,576,577,577,578,578,579,579,580,580,581,581,582,582,583,583,584,584,585,585,586,586,587,587,588,588,589,589,590,590,591,591,592,592,576,576,576,577,577,577,578,578,578,579,579,579,580,580,580,581,581,581,582,582,582,583,583,583,584,584,584,585,585,585,586,586,586,587,587,587,588,588,588,589,589,589,590,590,590,591,591,591,592,572,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,570,571,571,572,572,573,573,574,574,575,575,576,576,577,577,578,578,579,579,580,580,581,581,582,582,583,583,584,584,585,585,586,586,587,587,588,588,589,589,590,590,591,591,592,592,570,570,571,571,572,572,573,573,574,574,575,575,576,576,577,577,578,578,579,579,580,580,581,581,582,582,583,583,584,584,585,585,586,586,587,587,588,588,589,589,590,590,591,591,592,592,570,570,571,571,572,572,573,573,574,574,575,575,576,576,577,577,578,578,579,579,580,580,581,581,582,582,583,583,584,584,585,585,586,586,587,587,588,588,589,589,590,590,591,591,592,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,0,0,0,571,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592],"fc":[2,3,5,7,153,2675,2676],"p":[[3,"Private"],[3,"H160"],[3,"Basic"],[15,"u8"],[3,"Vec"],[6,"AccountId"],[6,"Nonce"],[3,"Weight"],[3,"FixedU128"],[3,"Permill"],[3,"Perbill"],[3,"RuntimeOrigin"],[8,"Fn"],[15,"u64"],[15,"bool"],[3,"IssueRequest"],[8,"Config"],[3,"Amount"],[3,"ReplaceRequest"],[8,"Config"],[3,"RedeemRequest"],[8,"Config"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[8,"Encode"],[8,"EncodeLike"],[6,"ApplyExtrinsicResult"],[4,"RuntimeCall"],[6,"PostDispatchInfoOf"],[6,"DispatchResultWithInfo"],[8,"Any"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"Storage"],[3,"String"],[3,"RuntimeGenesisConfig"],[6,"AuraId"],[6,"BlockNumber"],[6,"Balance"],[3,"BalanceWrapper"],[3,"Global"],[6,"StablePoolId"],[4,"CurrencyId"],[6,"AssetBalance"],[3,"EventRecord"],[6,"ContractExecResult"],[3,"U256"],[6,"CallInfo"],[4,"DispatchError"],[6,"Block"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"TransactionValidityError"],[4,"SignedRounding"],[4,"DispatchClass"],[8,"Config"],[4,"TimestampCall"],[8,"Config"],[4,"NominationEvent"],[8,"Clone"],[8,"Parameter"],[8,"Member"],[8,"TypeInfo"],[3,"AssetMetadata"],[8,"Copy"],[8,"Config"],[4,"BtcRelayCall"],[3,"ConstBool"],[3,"SessionKeys"],[4,"ProxyType"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[3,"TransactionConverter"],[4,"Ordering"],[3,"CollationInfo"],[3,"VaultId"],[3,"ApiRef"],[3,"MultiAsset"],[3,"MultiLocation"],[4,"TransactionV2"],[6,"UncheckedExtrinsic"],[3,"OpaqueExtrinsic"],[3,"CrateVersion"],[6,"CreateInfo"],[6,"BlockV2"],[4,"ReceiptV3"],[3,"TransactionStatus"],[8,"Input"],[3,"Error"],[8,"Decode"],[4,"RuntimeError"],[15,"u128"],[15,"usize"],[8,"Default"],[8,"Deserializer"],[8,"Deserialize"],[8,"FromStr"],[3,"DispatchErrorWithPostInfo"],[6,"DispatchResultWithPostInfo"],[3,"PostDispatchInfo"],[6,"DispatchResult"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[6,"UnsignedFixedPoint"],[8,"FnOnce"],[3,"StorageProof"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[6,"Result"],[3,"Compact"],[8,"PerThing"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"Instance1"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[6,"Origin"],[6,"Origin"],[4,"Origin"],[4,"Origin"],[6,"Origin"],[6,"DexStable"],[6,"CallableCallFor"],[6,"XcmpQueue"],[6,"PolkadotXcm"],[6,"ClientsInfo"],[6,"Vesting"],[6,"Ethereum"],[6,"ParachainSystem"],[6,"VaultAnnuity"],[6,"DexSwapRouter"],[6,"Sudo"],[6,"Preimage"],[6,"BTCRelay"],[6,"Nomination"],[6,"TechnicalCommittee"],[6,"Tokens"],[6,"Replace"],[6,"Timestamp"],[6,"Farming"],[6,"CumulusXcm"],[6,"AssetRegistry"],[6,"TxPause"],[6,"DmpQueue"],[6,"Fee"],[6,"System"],[6,"Democracy"],[6,"Session"],[6,"Escrow"],[6,"Supply"],[6,"VaultRegistry"],[6,"Contracts"],[6,"EscrowAnnuity"],[6,"BaseFee"],[6,"Multisig"],[6,"MultiTransactionPayment"],[6,"Issue"],[6,"Identity"],[6,"Security"],[6,"XTokens"],[6,"Loans"],[6,"EVM"],[6,"DexGeneral"],[6,"Proxy"],[6,"TechnicalMembership"],[6,"Oracle"],[6,"Scheduler"],[6,"Utility"],[6,"Redeem"],[6,"CollatorSelection"],[15,"f64"],[8,"RationalArg"],[8,"TryInto"],[4,"Rounding"],[8,"Ord"],[8,"Div"],[8,"Rem"],[8,"Add"],[8,"AddAssign"],[8,"Unsigned"],[8,"Zero"],[8,"One"],[8,"MultiplyRational"],[15,"str"],[8,"From"],[3,"RuntimeVersion"],[3,"BlockLength"],[3,"BlockWeights"],[15,"u16"],[4,"BodyId"],[3,"Perquintill"],[6,"Multiplier"],[3,"PalletId"],[3,"RuntimeDbWeight"],[3,"CallMetadata"],[3,"DispatchInfo"],[3,"H256"],[3,"PairInfo"],[3,"KeyTypeId"],[6,"GetStorageResult"],[6,"Hash"],[4,"Code"],[6,"ContractInstantiateResult"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"StorageChanges"],[3,"OpaqueMetadata"],[3,"RuntimeMetadataPrefixed"],[8,"Mul"],[8,"UniqueSaturatedInto"],[8,"MultiplyArg"],[3,"NativeVersion"],[3,"BlockHeader"],[8,"Iterator"],[4,"Pays"],[6,"DispatchInfoOf"],[6,"ProofRecorder"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Extension"],[8,"ReciprocalArg"],[8,"Serializer"],[8,"Serialize"],[8,"Display"],[4,"CallContext"],[8,"Into"],[3,"SlotDuration"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[4,"Determinism"],[6,"CodeUploadResult"],[6,"TransactionValidity"],[4,"TransactionSource"],[3,"H256Le"],[3,"PortableRegistry"],[3,"Error"],[3,"Error"],[8,"Hash"],[8,"BuildHasher"],[8,"Hasher"],[3,"BtcRelayExtension"],[8,"Ext"],[4,"InitState"],[3,"Environment"],[4,"RetVal"],[4,"Provenance"],[4,"DepositConsequence"],[4,"WithdrawConsequence"],[3,"WithdrawReasons"],[3,"Schedule"],[4,"SignedImbalance"],[4,"Preservation"],[4,"Fortitude"],[4,"BalanceStatus"],[4,"ExistenceRequirement"],[8,"PartialOrd"],[4,"TransactionAction"],[8,"Config"],[3,"InterBtcPrecompiles"],[8,"PrecompileHandle"],[3,"PrecompileOutput"],[4,"PrecompileFailure"],[8,"IntoIterator"],[4,"PostLogContent"],[4,"IsPrecompileResult"],[4,"NetworkId"],[6,"InteriorMultiLocation"],[8,"KeyOwnerProofSystem"],[8,"StorageValue"],[3,"IdentityFee"],[3,"BaseCallFilter"],[3,"DealWithFees"],[3,"EnsureKintsugiLabs"],[3,"DustRemovalWhitelist"],[3,"CurrencyHooks"],[3,"AssetAuthority"],[3,"DealWithRewards"],[3,"TotalWrapped"],[3,"EscrowBlockRewardProvider"],[3,"VaultBlockRewardProvider"],[3,"BlockNumberToBalance"],[3,"BlockHashCount"],[3,"Version"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"SS58Prefix"],[3,"Period"],[3,"Offset"],[3,"MaxAuthorities"],[3,"MaxCandidates"],[3,"MinCandidates"],[3,"SessionLength"],[3,"MaxInvulnerables"],[3,"ExecutiveBody"],[3,"MinimumPeriod"],[3,"EnableManualSeal"],[3,"TransactionByteFee"],[3,"OperationalFeeMultiplier"],[3,"TargetBlockFullness"],[3,"AdjustmentVariable"],[3,"MinimumMultiplier"],[3,"MaximumMultiplier"],[3,"MinVestedTransfer"],[3,"MaxVestingSchedules"],[3,"KintsugiLabsAccounts"],[3,"PreimageBaseDepositz"],[3,"PreimageByteDepositz"],[3,"MaximumSchedulerWeight"],[3,"MaxScheduledPerBlock"],[3,"LaunchPeriod"],[3,"VotingPeriod"],[3,"FastTrackVotingPeriod"],[3,"MinimumDeposit"],[3,"EnactmentPeriod"],[3,"MaxVotes"],[3,"MaxProposals"],[3,"GetDepositBase"],[3,"GetDepositFactor"],[3,"GetMaxSignatories"],[3,"TechnicalCommitteeMotionDuration"],[3,"TechnicalCommitteeMaxProposals"],[3,"TechnicalCommitteeMaxMembers"],[3,"MaxProposalWeight"],[3,"ReservedXcmpWeight"],[3,"ReservedDmpWeight"],[3,"ParachainBlocksPerBitcoinBlock"],[3,"GetNativeCurrencyId"],[3,"GetRelayChainCurrencyId"],[3,"GetWrappedCurrencyId"],[3,"FeePalletId"],[3,"SupplyPalletId"],[3,"EscrowAnnuityPalletId"],[3,"VaultAnnuityPalletId"],[3,"TreasuryPalletId"],[3,"CollatorPotId"],[3,"VaultRegistryPalletId"],[3,"LoansPalletId"],[3,"FarmingPalletId"],[3,"FeeAccount"],[3,"SupplyAccount"],[3,"EscrowAnnuityAccount"],[3,"VaultAnnuityAccount"],[3,"TreasuryAccount"],[3,"CollatorSelectionAccount"],[3,"VaultRegistryAccount"],[3,"LoansAccount"],[3,"FarmingAccount"],[3,"MaxLocks"],[3,"ExistentialDeposits"],[3,"InflationPeriod"],[3,"EmissionPeriod"],[3,"RewardPeriod"],[3,"Span"],[3,"MaxPeriod"],[3,"BasicDeposit"],[3,"FieldDeposit"],[3,"SubAccountDeposit"],[3,"MaxSubAccounts"],[3,"MaxAdditionalFields"],[3,"MaxRegistrars"],[3,"ProxyDepositBase"],[3,"ProxyDepositFactor"],[3,"MaxProxies"],[3,"MaxPending"],[3,"AnnouncementDepositBase"],[3,"AnnouncementDepositFactor"],[3,"MaxExpectedValue"],[3,"MaxNameLen"],[3,"PauseTooLongNames"],[3,"PalletInfo"],[4,"Everything"],[4,"Nothing"],[3,"RuntimeApi"],[3,"RocksDbWeight"],[8,"BuildStorage"],[8,"CurrencyInfo"],[8,"Get"],[13,"initialize"],[13,"store_block_header"],[13,"DepositCollateral"],[13,"WithdrawCollateral"],[13,"NominationOptIn"],[13,"NominationOptOut"],[13,"set"],[3,"NativeCurrencyWithEd"],[3,"NoRandomness"],[3,"DummyWeightPrice"],[3,"DefaultSchedule"],[3,"DeletionQueueDepth"],[3,"DepositPerByte"],[3,"DepositPerItem"],[3,"MaxCodeLen"],[3,"MaxStorageKeyLen"],[3,"UnsafeUnstableInterface"],[3,"MaxDebugBufferLen"],[3,"DefaultDepositLimit"],[3,"EnableContracts"],[3,"PairLpIdentity"],[3,"DexGeneralVerifyPairAsset"],[3,"PoolLpGenerate"],[3,"DexStableVerifyPoolAsset"],[3,"DexGeneralPalletId"],[3,"DexStablePalletId"],[3,"CurrencyLimit"],[3,"StringLimit"],[3,"MaxBootstrapRewards"],[3,"MaxBootstrapLimits"],[8,"StablePoolLpCurrencyIdGenerate"],[8,"GenerateLpAssetId"],[8,"ValidateAsset"],[8,"ValidateCurrency"],[8,"GetTransactionAction"],[3,"BaseFeeThreshold"],[3,"SetEvmChainId"],[3,"FindAuthorTruncated"],[3,"DefaultBaseFeePerGas"],[3,"DefaultElasticity"],[3,"PostBlockAndTxnHashes"],[3,"EnableCreate"],[3,"BlockGasLimit"],[3,"PrecompilesValue"],[3,"WeightPerGas"],[3,"GasLimitPovSizeRatio"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"BlockExecutionWeight"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"ExtrinsicBaseWeight"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"WeightInfo"],[3,"XcmConfig"],[3,"ToTreasury"],[3,"MyFixedConversionRateProvider"],[3,"SafeCallFilter"],[3,"CurrencyIdConvert"],[3,"AccountIdToMultiLocation"],[3,"ParentLocation"],[3,"ParentNetwork"],[3,"RelayChainOrigin"],[3,"Ancestry"],[3,"UnitWeightCost"],[3,"MaxInstructions"],[3,"KsmPerSecond"],[3,"KintPerSecond"],[3,"KbtcPerSecond"],[3,"CanonicalizedKintPerSecond"],[3,"CanonicalizedKbtcPerSecond"],[3,"RelayNetwork"],[3,"UniversalLocation"],[3,"MaxAssetsIntoHolding"],[3,"SelfLocation"],[3,"MaxAssetsForTransfer"],[3,"ParachainMinFee"]]},\
"loans":{"doc":"Loans pallet","t":"NDNDRRDRENDSSSSDEIIDINDDDDRDNNEILLLLLLLLLKKKKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKMMMLLLLLLLLKLLLLKLLKLKLLAMMKKKKKKMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLKGGNNGGNEINNNNNNEEGDNNNNNNNNNNNNNNGNNNNNNNNGGGGNNQDQNQNQNNGNQGGGNGGGNQNGNNGGGQQNGQNNLLLMLLLLLNLNLNLNLLLLLLLLLLLLLLLLNLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLMLMLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLNLNLNLNLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLNLLLLLLLLLNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFFFFFFFFFFFDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Active","BorrowSnapshot","Curve","CurveModel","DEFAULT_MAX_EXCHANGE_RATE","DEFAULT_MIN_EXCHANGE_RATE","EarnedSnapshot","INCENTIVE_SUB_ACCOUNT","InterestRateModel","Jump","JumpModel","MAX_BASE_RATE","MAX_BASE_RATE","MAX_FULL_RATE","MAX_JUMP_RATE","Market","MarketState","OnDeposit","OnSlash","OnSlashHook","OnTransfer","Pending","PostDeposit","PostTransfer","PreDeposit","PreTransfer","REWARD_SUB_ACCOUNT","RewardMarketState","Supervision","V0","Versions","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","activate_market","add_market","add_reserves","add_reward","base_rate","base_rate","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_cap","borrow_index","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_model","check_model","check_model","claim_reward","claim_reward_for_market","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_factor","collateral_factor","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deposit_all_collateral","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exchange_rate_prior","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_update_market","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","full_rate","get_borrow_rate","get_borrow_rate","get_borrow_rate","get_supply_rate","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","jump_rate","jump_utilization","lend_token_id","liquidate_borrow","liquidate_incentive","liquidate_incentive_reserved_factor","liquidation_threshold","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","mint","new_curve_model","new_jump_model","new_model","new_model","on_deposit","on_deposit","on_deposit","on_slash","on_slash","on_transfer","on_transfer","on_transfer","pallet","principal","rate_model","redeem","redeem_all","reduce_incentive_reserves","reduce_reserves","repay_borrow","repay_borrow_all","reserve_factor","serialize","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","state","supply_cap","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_earned_prior","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_market","update_market_reward_speed","update_rate_model","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw_all_collateral","AccountBorrows","AccountDeposits","ActivatedMarket","BorrowCapacityExceeded","BorrowIndex","BorrowRate","Borrowed","Call","Config","DepositAllCollateralFailed","DepositCollateral","Deposited","DepositsAreNotCollateral","DistributedBorrowerReward","DistributedSupplierReward","Error","Event","ExchangeRate","GenesisConfig","IncentiveReservesReduced","InsufficientCash","InsufficientCollateral","InsufficientDeposit","InsufficientLiquidity","InsufficientReserves","InsufficientShortfall","InterestAccrued","InvalidAmount","InvalidExchangeRate","InvalidFactor","InvalidLendTokenId","InvalidRateModelParam","InvalidSupplyCap","LastAccruedInterestTime","LiquidatedBorrow","LiquidatorIsBorrower","LockedTokensCannotBeRedeemed","MarketAlreadyActivated","MarketAlreadyExists","MarketDoesNotExist","MarketNotActivated","MarketRewardSpeedUpdated","Markets","MaxExchangeRate","MinExchangeRate","Module","NewMarket","NewMarketMustHavePendingState","OnExchangeRateChange","Pallet","PalletId","Redeemed","ReferenceAssetId","RepaidBorrow","ReserveOrigin","ReservesAdded","ReservesReduced","RewardAccrued","RewardAdded","RewardAssetId","RewardBorrowSpeed","RewardBorrowState","RewardBorrowerIndex","RewardPaid","RewardSupplierIndex","RewardSupplySpeed","RewardSupplyState","RewardWithdrawn","RuntimeEvent","SupplyCapacityExceeded","SupplyRate","TokensAlreadyLocked","TooMuchRepay","TotalBorrows","TotalReserves","UnderlyingAssetId","UnixTime","UpdateOrigin","UpdatedMarket","UtilizationRatio","WeightInfo","WithdrawAllCollateralFailed","WithdrawCollateral","__clone_box","__clone_box","__clone_box","_marker","account_borrows","account_deposits","account_id","accrue_interest","activate_market","activate_market","add_market","add_market","add_reserves","add_reserves","add_reward","add_reward","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_balance_from_old_and_new_index","borrow_index","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_rate","build","claim_reward","claim_reward","claim_reward_for_market","claim_reward_for_market","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_borrow_balance","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deposit_all_collateral","deposit_all_collateral","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","do_borrow","do_deposit_collateral","do_liquidate_borrow","do_mint","do_redeem","do_repay_borrow","do_withdraw_collateral","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exchange_rate","exchange_rate_stored","fmt","fmt","fmt","fmt","force_update_market","force_update_market","free_lend_tokens","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_account_liquidation_threshold_liquidity","get_account_liquidity","get_asset_value","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_full_interest_rate","get_market_info","get_market_status","get_market_status","identity","identity","identity","incentive_reward_account_id","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","last_accrued_interest_time","lend_token_id","liquidate_borrow","liquidate_borrow","lock_if_account_deposited","market","max_exchange_rate","max_exchange_rate","min_exchange_rate","min_exchange_rate","mint","mint","module_name","name","new_call_variant_activate_market","new_call_variant_add_market","new_call_variant_add_reserves","new_call_variant_add_reward","new_call_variant_borrow","new_call_variant_claim_reward","new_call_variant_claim_reward_for_market","new_call_variant_deposit_all_collateral","new_call_variant_force_update_market","new_call_variant_liquidate_borrow","new_call_variant_mint","new_call_variant_redeem","new_call_variant_redeem_all","new_call_variant_reduce_incentive_reserves","new_call_variant_reduce_reserves","new_call_variant_repay_borrow","new_call_variant_repay_borrow_all","new_call_variant_update_market","new_call_variant_update_market_reward_speed","new_call_variant_update_rate_model","new_call_variant_withdraw_all_collateral","offchain_worker","on_chain_storage_version","on_exchange_rate_change","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","recompute_collateral_amount","recompute_underlying_amount","redeem","redeem","redeem_all","redeem_all","reduce_incentive_reserves","reduce_incentive_reserves","reduce_reserves","reduce_reserves","repay_borrow","repay_borrow","repay_borrow_all","repay_borrow_all","reserved_lend_tokens","reward_account_id","reward_accrued","reward_borrow_speed","reward_borrow_state","reward_borrower_index","reward_supplier_index","reward_supply_speed","reward_supply_state","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","supply_rate","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_borrows","total_reserves","total_supply","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","underlying_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_market","update_market","update_market_reward_speed","update_market_reward_speed","update_rate_model","update_rate_model","utilization_ratio","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_all_collateral","withdraw_all_collateral","add_amount","amount","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","asset_id","borrow_amount","borrow_cap","borrow_reward_per_block","borrower","close_factor","collateral_asset_id","collateral_factor","liquidate_incentive","liquidate_incentive_reserved_factor","liquidation_asset_id","liquidation_threshold","market","market","mint_amount","payer","rate_model","receiver","receiver","redeem_amount","redeem_amount","reduce_amount","repay_amount","repay_amount","reserve_factor","supply_cap","supply_reward_per_block","account_id","account_id","account_id","account_id","account_id","account_id","amount","amount","amount","amount","amount","amount","amount","amount","amount","amount","amount","amount","borrow_index","borrow_rate","borrow_reward_index","borrow_reward_per_block","borrower","borrower","collateral_currency_id","collateral_underlying_amount","currency_id","currency_id","currency_id","currency_id","currency_id","currency_id","currency_id","currency_id","currency_id","exchange_rate","liquidation_currency_id","liquidator","market","market","new_reserve_amount","new_reserve_amount","payer","payer","receiver","receiver","receiver","receiver","repay_amount","reward_delta","reward_delta","supplier","supply_rate","supply_reward_index","supply_reward_per_block","total_borrows","total_reserves","underlying_currency_id","underlying_currency_id","underlying_currency_id","underlying_currency_id","underlying_currency_id","underlying_currency_id","underlying_currency_id","utilization_ratio","activate_market","add_market","add_reserves","add_reward","borrow","claim_reward","claim_reward_for_market","deposit_all_collateral","force_update_market","liquidate_borrow","mint","redeem","redeem_all","reduce_incentive_reserves","reduce_reserves","repay_borrow","repay_borrow_all","update_market","update_market_reward_speed","update_rate_model","withdraw_all_collateral","AccountBorrows","AccountDeposits","BorrowIndex","BorrowRate","ExchangeRate","LastAccruedInterestTime","Markets","MaxExchangeRate","MinExchangeRate","RewardAccrued","RewardBorrowSpeed","RewardBorrowState","RewardBorrowerIndex","RewardSupplierIndex","RewardSupplySpeed","RewardSupplyState","StorageVersion","SupplyRate","TotalBorrows","TotalReserves","UnderlyingAssetId","UtilizationRatio","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"loans"],[614,"loans::pallet"],[1014,"loans::pallet::Call"],[1060,"loans::pallet::Event"],[1125,"loans::pallet::dispatchables"],[1146,"loans::pallet::storage_types"]],"d":["","Container for borrow balance information","","The curve interest rate model","","","Container for earned amount information","","Parallel interest rate model","","The jump interest rate model","","","","","Market.","The current state of a market. For more information, see …","Hook to run before depositing into an account.","Hook to run before slashing an account.","","Hook to run before transferring from an account to another.","","","","","","","","","","Utility type for managing upgrades/migrations.","Weight functions needed for loans.","","","","","","","","","","","","","","The base interest rate when utilization rate is 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","total amount of staking asset user deposited","","","","","","","","","","","","","","","","Upper bound of borrowing","InterestIndex Global borrowIndex as of the most recent …","","","","","","","","","","","","","","","","Check the jump model for sanity","Check the curve model for sanity","","","","","","","","","","","","","","","","","","","","","","","","","The percent, ranging from 0% to 100%, of a liquidatable …","The secure collateral ratio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exchange rate, after applying the most recent …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","The max interest rate when utilization rate is 100%","Calculates the current borrow interest rate","Calculates the borrow interest rate of jump model","Calculates the borrow interest rate of curve model","Calculates the current supply interest rate","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The interest rate on jump utilization point","The utilization point at which the jump_rate is applied","LendToken asset id","","Liquidation incentive ratio","Liquidation share set aside for reserves","The collateral ratio when a borrower can be liquidated. …","","","","","","","","","","","","Create a new rate model","Create a new curve model","","Whenever a lend_token balance is mutated, the supplier …","","","Whenever a lend_token balance is mutated, the supplier …","","Whenever a lend_token balance is mutated, the supplier …","If an account has locked their lend_token balance as …","The <code>pallet</code> module in each FRAME pallet hosts the most …","Principal Total balance (with accrued interest), after …","Current interest rate model being used","","","","","","","Fraction of interest currently set aside for reserves","","","","","","","","","","","","","","","Current market state","Upper bound of supplying","","","","","","","","","","","","","","","","","","","Total deposit interest, after applying the most recent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping of account addresses to outstanding borrow balances","Mapping of account addresses to collateral deposit details …","Event emitted when a market is activated","Upper bound of borrowing is exceeded","Accumulator of the total earned interest rate since the …","Mapping of borrow rate to currency type","Event emitted when cash is borrowed","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Locking collateral failed. The account has no <code>free</code> tokens.","Enable collateral for certain asset","Event emitted when assets are deposited","Deposits are not used as a collateral","Deposited when Reward is distributed to a borrower","Deposited when Reward is distributed to a supplier","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","The internal exchange rate from the associated lend token …","Can be used to configure the genesis state of this pallet.","Event emitted when the incentive reserves are redeemed and …","Insufficient cash in the pool","Repay amount more than collateral amount","Insufficient deposit to redeem","Insufficient liquidity to borrow more or disable collateral","Insufficient reserves","Insufficient shortfall to repay","Event emitted when interest has been accrued for a market","Amount cannot be zero","The exchange rate should be a value between <code>MinExchangeRate</code>…","The factor should be greater than 0% and less than 100%","Invalid lend_token id","Invalid rate model params","The supply cap cannot be zero","The timestamp of the last calculation of accrued interest","Event emitted when a borrow is liquidated","Liquidator is same as borrower","Only free lend tokens are redeemable","Market already activated","Market already exists","Market does not exist","Market not activated","Event emitted when market reward speed updated.","Mapping of underlying currency id to its market","The maximum allowed exchange rate for a market.","The minimum allowed exchange rate for a market. This is …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","New market is set","New markets must have a pending state","Hook for exchangerate changes.","The <code>Pallet</code> struct, the main type that implements traits …","The loan’s module id, used to derive the account that …","Event emitted when assets are redeemed","Reference currency for expressing asset prices. Example: …","Event emitted when a borrow is repaid","The origin which can add/reduce reserves.","Event emitted when the reserves are added","Event emitted when the reserves are reduced","The incentive reward accrued but not yet transferred to …","Reward added","Incentive reward asset id.","Mapping of underlying currency id to borrow reward speed","The Reward market borrow state for each market","The incentive reward index for each market for each …","Reward Paid for user","The incentive reward index for each market for each …","Mapping of underlying currency id to supply reward speed","The Reward market supply state for each market","Reward withdrawed","","Upper bound of supplying is exceeded","Mapping of supply rate to currency type","Tokens already locked for a different purpose than borrow …","Repay amount greater than allowed (either repays more than …","Total amount of outstanding borrows of the underlying in …","Total amount of reserves of the underlying held in this …","Mapping of lend_token id to underlying currency id …","Unix time","The origin which can add or update markets (including …","New market parameters is updated","Borrow utilization ratio","Weight information for extrinsics in this pallet.","Unlocking collateral failed. The account has no <code>reserved</code> …","Disable collateral for certain asset","","","","","An auto-generated getter for <code>AccountBorrows</code>.","","","Accrue interest and update corresponding storage","Activates a market. Returns <code>Err</code> if the market does not …","See <code>Pallet::activate_market</code>.","Creates a new lending market for a given currency. Returns …","See <code>Pallet::add_market</code>.","Add reserves by transferring from payer. TODO: This …","See <code>Pallet::add_reserves</code>.","Deposit incentive reward currency into the pallet account.","See <code>Pallet::add_reward</code>.","","","","","","","","","","","","","","The caller borrows <code>borrow_amount</code> of <code>asset_id</code> from the …","","","See <code>Pallet::borrow</code>.","","An auto-generated getter for <code>BorrowIndex</code>.","","","","","","An auto-generated getter for <code>BorrowRate</code>.","","Claim incentive rewards for all markets.","See <code>Pallet::claim_reward</code>.","Claim inceitve reward for the specified market.","See <code>Pallet::claim_reward_for_market</code>.","","","","","","","","","","","","","","","","","","","","","","","","Caller enables their lend token balance as borrow …","See <code>Pallet::deposit_all_collateral</code>.","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","Note:","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>ExchangeRate</code>.","Update the exchange rate according to the totalCash, …","","","","","Force updates a stored market. Returns <code>Err</code> if the market …","See <code>Pallet::force_update_market</code>.","Free lending tokens (lend_tokens) of an account, given the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An auto-generated getter for <code>LastAccruedInterestTime</code>.","","The caller liquidates the borrower’s collateral. This …","See <code>Pallet::liquidate_borrow</code>.","","","An auto-generated getter for <code>MaxExchangeRate</code>.","","An auto-generated getter for <code>MinExchangeRate</code>.","","The caller supplies (lends) assets into the market and …","See <code>Pallet::mint</code>.","","","Create a call with the variant <code>activate_market</code>.","Create a call with the variant <code>add_market</code>.","Create a call with the variant <code>add_reserves</code>.","Create a call with the variant <code>add_reward</code>.","Create a call with the variant <code>borrow</code>.","Create a call with the variant <code>claim_reward</code>.","Create a call with the variant <code>claim_reward_for_market</code>.","Create a call with the variant <code>deposit_all_collateral</code>.","Create a call with the variant <code>force_update_market</code>.","Create a call with the variant <code>liquidate_borrow</code>.","Create a call with the variant <code>mint</code>.","Create a call with the variant <code>redeem</code>.","Create a call with the variant <code>redeem_all</code>.","Create a call with the variant <code>reduce_incentive_reserves</code>.","Create a call with the variant <code>reduce_reserves</code>.","Create a call with the variant <code>repay_borrow</code>.","Create a call with the variant <code>repay_borrow_all</code>.","Create a call with the variant <code>update_market</code>.","Create a call with the variant <code>update_market_reward_speed</code>.","Create a call with the variant <code>update_rate_model</code>.","Create a call with the variant <code>withdraw_all_collateral</code>.","","","","","","","","","","","The caller redeems lend tokens for the underlying asset, …","See <code>Pallet::redeem</code>.","The caller redeems their entire lend token balance in …","See <code>Pallet::redeem_all</code>.","Sender redeems some of internal supplies in exchange for …","See <code>Pallet::reduce_incentive_reserves</code>.","Reduces reserves (treasury’s share of accrued interest) …","See <code>Pallet::reduce_reserves</code>.","The caller repays some of their debts.","See <code>Pallet::repay_borrow</code>.","The caller repays all of their debts.","See <code>Pallet::repay_borrow_all</code>.","Reserved lending tokens (lend_tokens) of an account, given …","","An auto-generated getter for <code>RewardAccrued</code>.","An auto-generated getter for <code>RewardBorrowSpeed</code>.","An auto-generated getter for <code>RewardBorrowState</code>.","An auto-generated getter for <code>RewardBorrowerIndex</code>.","An auto-generated getter for <code>RewardSupplierIndex</code>.","An auto-generated getter for <code>RewardSupplySpeed</code>.","An auto-generated getter for <code>RewardSupplyState</code>.","","","","","","Auto-generated docs-only module listing all (public and …","An auto-generated getter for <code>SupplyRate</code>.","","","","","","","","","Total issuance of lending tokens (lend_tokens), given the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates a stored market. Returns <code>Err</code> if the market …","See <code>Pallet::update_market</code>.","Updates reward speed for the specified market","See <code>Pallet::update_market_reward_speed</code>.","Updates the rate model of a stored market. Returns <code>Err</code> if …","See <code>Pallet::update_rate_model</code>.","An auto-generated getter for <code>UtilizationRatio</code>.","","","","","","","","Caller disables their lend token balance as borrow …","See <code>Pallet::withdraw_all_collateral</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Activates a market. Returns <code>Err</code> if the market does not …","Creates a new lending market for a given currency. Returns …","Add reserves by transferring from payer. TODO: This …","Deposit incentive reward currency into the pallet account.","The caller borrows <code>borrow_amount</code> of <code>asset_id</code> from the …","Claim incentive rewards for all markets.","Claim inceitve reward for the specified market.","Caller enables their lend token balance as borrow …","Force updates a stored market. Returns <code>Err</code> if the market …","The caller liquidates the borrower’s collateral. This …","The caller supplies (lends) assets into the market and …","The caller redeems lend tokens for the underlying asset, …","The caller redeems their entire lend token balance in …","Sender redeems some of internal supplies in exchange for …","Reduces reserves (treasury’s share of accrued interest) …","The caller repays some of their debts.","The caller repays all of their debts.","Updates a stored market. Returns <code>Err</code> if the market …","Updates reward speed for the specified market","Updates the rate model of a stored market. Returns <code>Err</code> if …","Caller disables their lend token balance as borrow …","Mapping of account addresses to outstanding borrow balances","Mapping of account addresses to collateral deposit details …","Accumulator of the total earned interest rate since the …","Mapping of borrow rate to currency type","The internal exchange rate from the associated lend token …","The timestamp of the last calculation of accrued interest","Mapping of underlying currency id to its market","The maximum allowed exchange rate for a market.","The minimum allowed exchange rate for a market. This is …","The incentive reward accrued but not yet transferred to …","Mapping of underlying currency id to borrow reward speed","The Reward market borrow state for each market","The incentive reward index for each market for each …","The incentive reward index for each market for each …","Mapping of underlying currency id to supply reward speed","The Reward market supply state for each market","Storage version of the pallet.","Mapping of supply rate to currency type","Total amount of outstanding borrows of the underlying in …","Total amount of reserves of the underlying held in this …","Mapping of lend_token id to underlying currency id …","Borrow utilization ratio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[13,0,6,0,0,0,0,0,0,6,0,8,9,8,8,0,0,0,0,0,0,13,0,0,0,0,0,0,13,16,0,0,6,8,9,11,12,13,14,15,16,71,71,71,71,8,9,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,15,71,72,73,74,75,76,6,8,9,11,12,13,14,15,16,14,11,72,73,74,75,76,6,8,9,11,12,13,14,15,16,6,8,9,71,71,6,11,12,15,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,14,14,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,11,12,15,71,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,6,8,9,13,14,72,73,74,75,76,6,8,9,11,12,13,14,15,16,9,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,6,8,8,9,9,11,11,12,12,13,13,14,14,15,15,16,16,12,6,8,9,11,12,13,14,15,16,71,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,72,73,73,74,74,75,75,76,76,6,6,8,8,9,9,11,11,12,12,13,13,14,14,15,15,16,16,72,72,73,73,74,74,75,75,76,76,6,6,8,8,9,9,11,11,12,12,13,13,14,14,15,15,16,16,8,6,8,9,6,6,8,9,11,12,13,14,15,16,15,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,6,11,12,15,8,8,14,71,14,14,14,6,8,9,11,13,14,15,16,71,6,6,8,9,77,73,74,78,72,79,75,76,0,11,14,71,71,71,71,71,71,14,6,8,9,13,14,6,8,9,11,12,13,14,15,16,14,14,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,12,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,72,73,74,75,76,6,8,9,11,12,13,14,15,16,71,71,71,9,72,73,74,75,76,6,8,9,11,12,13,14,15,16,71,0,0,54,58,0,0,54,0,0,58,54,54,58,54,54,0,0,0,0,54,58,58,58,58,58,58,54,58,58,58,58,58,58,0,54,58,58,58,58,58,58,54,0,0,0,0,54,58,44,0,44,54,44,54,44,54,54,0,54,44,0,0,0,54,0,0,0,54,44,58,0,58,58,0,0,0,44,44,54,0,44,58,54,54,55,56,49,55,55,55,55,55,56,55,56,55,56,55,56,49,58,54,56,58,54,56,58,54,56,58,54,49,55,55,56,56,55,55,58,54,49,55,56,55,49,55,56,55,56,54,55,56,54,55,56,55,55,55,55,58,54,56,58,54,56,58,54,56,58,54,56,49,55,56,58,54,49,55,56,58,54,49,55,56,49,56,0,55,55,55,55,55,55,55,58,54,49,55,56,58,54,56,54,55,56,54,54,55,55,56,56,55,55,58,54,55,56,55,56,55,58,54,49,55,56,58,58,54,54,49,49,55,55,56,56,58,58,54,54,49,49,55,55,56,56,55,55,55,56,56,56,56,56,55,55,55,55,58,54,56,55,55,55,58,54,49,55,56,55,58,54,49,55,56,58,54,49,55,56,58,54,49,55,56,55,55,55,56,55,55,55,49,55,49,55,56,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,55,55,55,55,55,55,55,55,55,55,55,56,55,56,55,56,55,56,55,56,55,56,55,55,55,55,55,55,55,55,55,49,58,54,56,55,0,55,58,54,56,54,55,56,55,55,55,58,54,49,55,56,58,54,49,55,56,58,54,56,58,54,56,58,54,56,58,54,49,55,56,58,54,56,58,54,49,55,56,55,58,54,49,55,56,55,56,55,56,55,56,55,58,54,49,55,56,55,58,55,56,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,97,98,92,85,87,99,85,99,85,85,85,99,85,82,86,89,80,84,97,98,90,98,97,93,99,85,85,87,100,101,102,103,104,105,100,101,102,103,104,105,106,107,108,109,110,111,112,112,113,114,115,113,115,115,100,101,102,103,104,105,106,107,111,112,115,115,116,117,106,107,107,108,106,109,110,111,115,118,113,118,112,118,114,112,112,116,119,117,114,118,113,112,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,7],[8,7],[9,7],[[],2],[[],2],[[]],[[]],[[]],[[]],[6,6],[8,8],[9,9],[[[11,[10]]],[[11,[10]]]],[[[12,[10]]],[[12,[10]]]],[13,13],[[[14,[10]]],[[14,[10]]]],[[[15,[10,10]]],[[15,[10,10]]]],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[17,[[19,[6,18]]]],[17,[[19,[8,18]]]],[17,[[19,[9,18]]]],[17,[[19,[[11,[20]],18]]]],[17,[[19,[[12,[20]],18]]]],[17,[[19,[13,18]]]],[17,[[19,[[14,[20]],18]]]],[17,[[19,[[15,[20,20]],18]]]],[17,[[19,[16,18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[],6],[[],[[11,[22]]]],[[],[[12,[22]]]],[[],[[15,[22,22]]]],[[],2],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[24,[[19,[6]]]],[24,[[19,[8]]]],[24,[[19,[9]]]],[24,[[19,[13]]]],[24,[[19,[[14,[25]]]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[9,[[5,[3]]]],[[6,[0,[26,27]]]],[[8,[0,[26,27]]]],[[9,[0,[26,27]]]],[[[11,[28]],[0,[26,27]]]],[[[12,[28]],[0,[26,27]]]],[[13,[0,[26,27]]]],[[[14,[28]],[0,[26,27]]]],[[[15,[28,28]],[0,[26,27]]]],[[16,[0,[26,27]]]],[[6,6],7],[[8,8],7],[[9,9],7],[[[11,[29]],[11,[29]]],7],[[[12,[29]],[12,[29]]],7],[[13,13],7],[[[14,[29]],[14,[29]]],7],[[[15,[29,29]],[15,[29,29]]],7],[[16,16],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[6,30],31],[[8,30],31],[[9,30],31],[[[11,[32]],30],31],[[[12,[32]],30],31],[[13,30],31],[[[14,[32]],30],31],[[[15,[32,32]],30],31],[[16,30],31],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,33],[[35,[34]]]],[[8,33],[[35,[34]]]],[[9,33],[[35,[34]]]],[[34,33,33],34],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],0,0,0,[[],2],0,0,0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],2],[34,6],[[34,34,34,33],6],[[34,34,34,33],8],[34,9],[[],[[19,[36]]]],[[],37],[[],37],[[]],[[]],[[],[[19,[36]]]],[[],37],[[],37],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[6,38],19],[[8,38],19],[[9,38],19],[[13,38],19],[[[14,[39]],38],19],[6,23],[8,23],[9,23],[[[11,[28]]],23],[[[12,[28]]],23],[13,23],[[[14,[28]]],23],[[[15,[28,28]]],23],[16,23],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[9,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[43,43],11],[[],[[45,[44]]]],[[]],[[],46],[[[47,[44]]],48],0,[[[47,[44]],14],48],0,[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[[49,[44]],50],[[19,[51]]]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[47,[44]]],48],[[]],[[]],0,[[52,52,[45,[44]],53],[[19,[[45,[44]],36]]]],[43,34],[[]],[[]],[[]],[[]],[[]],[43,34],[[[49,[44]]]],[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[[54,[44]]],[[54,[44]]]],[55,55],[[[56,[44]]],[[56,[44]]]],[[]],[[]],[[]],[[],23],[[],57],[[],[[19,[[45,[44]],36]]]],[[]],[17,[[19,[58,18]]]],[17,[[19,[[54,[44]],18]]]],[17,[[19,[[56,[44]],18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[[],[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[21,[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[21,17],[[19,[18]]]],[[],[[49,[44]]]],[[[47,[44]]],48],0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[24,[[19,[[49,[44]]]]]],[[[56,[44]]],48],0,[[[45,[44]]],[[19,[36]]]],[[[45,[44]]],[[19,[36]]]],[[[45,[44]]],37],[[[45,[44]]],[[19,[36]]]],[[[45,[44]],[45,[44]]],[[19,[36]]]],[[[45,[44]]],[[19,[36]]]],[[[45,[44]]],[[19,[36]]]],[23],[23],[23],[23],[23],[[58,[0,[26,27]]]],[[[54,[44]],[0,[26,27]]]],[[[56,[44]],[0,[26,27]]]],[[[54,[44]],[54,[44]]],7],[[55,55],7],[[[56,[44]],[56,[44]]],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[43,34],[[],[[19,[34,36]]]],[[[58,[44]],30],31],[[[54,[44]],30],31],[[55,30],31],[[[56,[44]],30],31],[[[47,[44]],14],48],0,[[],[[19,[[45,[44]],36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[19,[[0,[44]],36]]]],[[],[[19,[[0,[44]],36]]]],[[[45,[44]]],[[19,[[45,[44]],36]]]],[[[56,[44]]],3],[[]],[[[56,[44]]],59],[[]],[[[56,[44]]],60],[[],[[35,[34]]]],[[],[[19,[61,36]]]],[[],[[19,[36]]]],[[],[[19,[62,36]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[],23],[[],[[5,[63]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,64],[[],[[19,[36]]]],[[[47,[44]]],48],0,[[[45,[44]]],37],[[],[[19,[14,36]]]],[[],34],0,[[],34],0,[[[47,[44]]],48],0,[[],59],[[],59],[[],[[56,[44]]]],[14,[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[14,[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[],[[56,[44]]]],[[[35,[33]],[35,[33]],[35,[33]],[35,[33]],[35,[33]],[35,[34]],35,35],[[56,[44]]]],[[35,35],[[56,[44]]]],[6,[[56,[44]]]],[[],[[56,[44]]]],[[[65,[44]]]],[[],66],[[]],[[[65,[44]]]],[[]],[[[65,[44]],2],2],[[[65,[44]]],2],[[],2],[[[45,[44]]],[[19,[[45,[44]],36]]]],[[[45,[44]]],[[19,[[45,[44]],36]]]],[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[[47,[44]]],48],0,[[],[[19,[[45,[44]],36]]]],[[]],[43],[43],[43,[[15,[[65,[44]]]]]],[[43,43]],[[43,43]],[43],[43,[[15,[[65,[44]]]]]],[[[49,[44]],38],19],[58,23],[[[54,[44]]],23],[[[56,[44]]],23],[[],[[5,[67]]]],0,[43,34],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],[[45,[44]]]],[[],[[45,[44]]]],[[],[[19,[[45,[44]],36]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[],[[19,[36]]]],[[]],[[]],[[]],[[]],[[]],[[[47,[44]],[35,[33]],[35,[33]],[35,[33]],[35,[33]],[35,[33]],[35,[34]],35,35],48],0,[[[47,[44]],35,35],48],0,[[[47,[44]],6],48],0,[43,33],[[]],[[]],[[]],[[]],[[]],[[],[[5,[68]]]],[2,[[70,[69]]]],[[[47,[44]]],48],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[14],[[]],[[]],[[]],[[]],[[]],[[]],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[33]],[35,[33]],[35,[33]],[35,[33]],[35,[33]],[35,[34]],35,35]],[[35,35]],[6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[659],"p":[[3,"Private"],[3,"Weight"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"InterestRateModel"],[15,"bool"],[3,"JumpModel"],[3,"CurveModel"],[8,"Clone"],[3,"BorrowSnapshot"],[3,"EarnedSnapshot"],[4,"MarketState"],[3,"Market"],[3,"RewardMarketState"],[4,"Versions"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"Output"],[8,"Sized"],[8,"Encode"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[6,"Ratio"],[6,"Rate"],[4,"Option"],[4,"DispatchError"],[6,"DispatchResult"],[8,"Serializer"],[8,"Serialize"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[8,"EncodeLike"],[8,"Config"],[3,"Amount"],[6,"DispatchResult"],[6,"OriginFor"],[6,"DispatchResultWithPostInfo"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[3,"FixedU128"],[4,"Rounding"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[15,"str"],[3,"DispatchInfo"],[3,"MarketInfo"],[3,"MarketStatus"],[3,"PalletInfoData"],[6,"Timestamp"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"StorageInfo"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[3,"OnSlashHook"],[3,"PreDeposit"],[3,"PostDeposit"],[3,"PreTransfer"],[3,"PostTransfer"],[8,"OnDeposit"],[8,"OnSlash"],[8,"OnTransfer"],[13,"add_reserves"],[13,"add_reward"],[13,"add_market"],[13,"activate_market"],[13,"update_rate_model"],[13,"update_market"],[13,"force_update_market"],[13,"update_market_reward_speed"],[13,"claim_reward_for_market"],[13,"mint"],[13,"redeem"],[13,"redeem_all"],[13,"borrow"],[13,"repay_borrow"],[13,"repay_borrow_all"],[13,"deposit_all_collateral"],[13,"withdraw_all_collateral"],[13,"reduce_reserves"],[13,"reduce_incentive_reserves"],[13,"liquidate_borrow"],[13,"DepositCollateral"],[13,"WithdrawCollateral"],[13,"Deposited"],[13,"Redeemed"],[13,"Borrowed"],[13,"RepaidBorrow"],[13,"ReservesReduced"],[13,"ReservesAdded"],[13,"RewardAdded"],[13,"RewardWithdrawn"],[13,"RewardPaid"],[13,"IncentiveReservesReduced"],[13,"InterestAccrued"],[13,"DistributedBorrowerReward"],[13,"MarketRewardSpeedUpdated"],[13,"LiquidatedBorrow"],[13,"NewMarket"],[13,"UpdatedMarket"],[13,"DistributedSupplierReward"],[13,"ActivatedMarket"],[3,"LastAccruedInterestTime"],[3,"TotalBorrows"],[3,"TotalReserves"],[3,"AccountBorrows"],[3,"AccountDeposits"],[3,"BorrowIndex"],[3,"ExchangeRate"],[3,"BorrowRate"],[3,"SupplyRate"],[3,"UtilizationRatio"],[3,"Markets"],[3,"UnderlyingAssetId"],[3,"RewardSupplySpeed"],[3,"RewardBorrowSpeed"],[3,"RewardSupplyState"],[3,"RewardBorrowState"],[3,"RewardSupplierIndex"],[3,"RewardBorrowerIndex"],[3,"RewardAccrued"],[3,"MaxExchangeRate"],[3,"MinExchangeRate"],[3,"StorageVersion"]]},\
"loans_rpc":{"doc":"","t":"NEDIIINNLLLLLLLLLLLLLLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLL","n":["AccountLiquidityError","Error","Loans","LoansApiClient","LoansApiServer","LoansRuntimeApi","MarketStatusError","RuntimeError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","get_account_liquidity","get_account_liquidity","get_account_liquidity","get_account_liquidity","get_liquidation_threshold_liquidity","get_liquidation_threshold_liquidity","get_liquidation_threshold_liquidity","get_liquidation_threshold_liquidity","get_market_status","get_market_status","get_market_status","get_market_status","init","init","into","into","into_rpc","new","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"loans_rpc"]],"d":["","","A struct that implements the [<code>LoansApi</code>].","Client implementation for the <code>LoansApi</code> RPC API.","Server trait implementation for the <code>LoansApi</code> RPC API.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Collects all the methods and subscriptions defined in the …","Create new <code>Loans</code> with the given reference to the client.","","","","","","","","","","","",""],"i":[21,0,0,0,0,0,21,21,9,21,9,21,9,21,9,21,9,21,9,21,9,21,9,21,22,9,23,24,22,9,23,24,22,9,23,24,9,21,9,21,22,9,9,21,9,21,9,21,9,21,9,21,9,21],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[2,3],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,2],3],[[],[[12,[[12,[11]],13]]]],[[5,2],[[16,[[15,[14]]]]]],[2,3],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,2],3],[[],[[12,[[12,[11]],13]]]],[[5,2],[[16,[[15,[14]]]]]],[[17,2],3],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],17,2],3],[17,[[12,[[12,[11]],13]]]],[[5,17,2],[[16,[[15,[14]]]]]],[[],1],[[],1],[[]],[[]],[[],18],[19,9],[[],12],[[],12],[[],12],[[],12],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[4,"Option"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Loans"],[8,"Codec"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"CurrencyId"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[4,"Error"],[8,"LoansApiServer"],[8,"LoansRuntimeApi"],[8,"LoansApiClient"]]},\
"loans_rpc_runtime_api":{"doc":"","t":"ILLL","n":["LoansApi","get_account_liquidity","get_liquidation_threshold_liquidity","get_market_status"],"q":[[0,"loans_rpc_runtime_api"]],"d":["","","",""],"i":[0,5,5,5],"f":[0,[[],[[2,[[2,[1]],3]]]],[[],[[2,[[2,[1]],3]]]],[4,[[2,[[2,[1]],3]]]]],"c":[],"p":[[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[4,"CurrencyId"],[8,"LoansApi"]]},\
"multi_transaction_payment":{"doc":"","t":"AEIQQQEGQDQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLMMMF","n":["pallet","Call","Config","Currency","Dex","DexWeightInfo","Error","Module","OnUnbalanced","Pallet","RuntimeCall","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","correct_and_deposit_fee","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","module_name","name","new_call_variant_with_fee_swap_path","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","with_fee_swap_path","with_fee_swap_path","with_weight","withdraw_fee","amount_in_max","call","path","with_fee_swap_path"],"q":[[0,"multi_transaction_payment"],[1,"multi_transaction_payment::pallet"],[147,"multi_transaction_payment::pallet::Call"],[150,"multi_transaction_payment::pallet::dispatchables"]],"d":["The <code>pallet</code> module in each FRAME pallet hosts the most …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The currency trait.","dex api","weights of dex operations","The <code>Error</code> enum of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","What to do with fees. Typically this is a transfer to the …","The <code>Pallet</code> struct, the main type that implements traits …","The aggregated call type.","","","","","","","","","","","","","","","","","","","Hand the fee and the tip over to the <code>[OnUnbalanced]</code> …","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create a call with the variant <code>with_fee_swap_path</code>.","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::with_fee_swap_path</code>.","","Withdraw the predicted fee from the transaction origin.","","","","Warning: Doc-Only"],"i":[0,0,0,6,6,6,0,0,6,0,6,5,7,15,7,15,7,15,7,15,5,7,15,5,7,5,7,5,7,5,5,5,5,15,7,15,7,15,7,15,7,15,5,7,15,5,7,7,0,15,5,7,7,5,7,5,5,7,7,15,5,7,15,5,7,15,15,5,5,7,7,15,15,5,5,7,7,7,7,7,7,7,15,7,5,5,15,5,7,5,15,5,7,15,5,7,15,5,7,5,5,7,5,5,5,5,5,5,5,7,5,0,15,7,5,7,15,5,7,15,5,7,15,7,15,7,15,7,15,5,7,15,7,15,5,7,15,5,7,15,5,7,5,5,7,15,5,38,38,38,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[[[7,[6]]],[[7,[6]]]],[[]],[[]],[[8,9],[[11,[10]]]],[[],12],[[],13],[[]],[14,[[11,[15,16]]]],[14,[[11,[[7,[6]],16]]]],[[],[[11,[16]]]],[[],[[11,[16]]]],[17,[[11,[16]]]],[17,[[11,[16]]]],[[17,14],[[11,[16]]]],[[17,14],[[11,[16]]]],[12],[12],[12],[12],[12],[12],[[[7,[6]]],18],0,[12],[12],[12],[[[7,[6]],[0,[19,20]]]],[[5,5],21],[[[7,[6]],[7,[6]]],21],[[],21],[[],21],[[],21],[[],21],[[[15,[6]],22],23],[[5,22],23],[[[7,[6]],22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],2],[[]],[[[7,[6]]],24],[[]],[[[7,[6]]],25],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],12],[[],[[4,[26]]]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[4,27],[[7,[6]]]],[[[28,[6]]]],[[],29],[[[28,[6]]]],[[]],[[[28,[6]],30],30],[[[28,[6]]],30],[[],30],[[[7,[6]]],12],[[],[[4,[31]]]],0,[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],32],[[],32],[[],32],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[34]]]],[[[35,[6]],4,27],18],0,[30,[[37,[36]]]],[8,[[11,[10]]]],0,0,0,[[4,27]]],"c":[7],"p":[[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[8,"Config"],[4,"Call"],[6,"DispatchInfoOf"],[6,"PostDispatchInfoOf"],[4,"TransactionValidityError"],[4,"Result"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[4,"Error"],[3,"Error"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"Box"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[6,"OriginFor"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[13,"with_fee_swap_path"]]},\
"nomination":{"doc":"Nomination Module","t":"IKKKAKKKENNINEEDGGNNNDQNNNNQNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLNLNLLNLNLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNMMMMMMMMMMMMMMMMMMFFFFFFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["WeightInfo","deposit_collateral","opt_in_to_nomination","opt_out_of_nomination","pallet","set_nomination_enabled","set_nomination_limit","withdraw_collateral","Call","CannotWithdrawCollateral","CollateralizationTooLow","Config","DepositCollateral","Error","Event","GenesisConfig","Module","NominationEnabled","NominationExceedsLimit","NominationOptIn","NominationOptOut","Pallet","RuntimeEvent","VaultAlreadyOptedInToNomination","VaultNominationDisabled","VaultNotFound","VaultNotOptedInToNomination","WeightInfo","WithdrawCollateral","__clone_box","__clone_box","__clone_box","_deposit_collateral","_marker","_withdraw_collateral","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deposit_collateral","deposit_collateral","deposit_vault_collateral","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","ensure_opted_in_to_nomination","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_nomination_limit","get_nominator_collateral","get_total_nominated_collateral","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_nomination_enabled","is_nomination_enabled","is_opted_in","module_name","name","new_call_variant_deposit_collateral","new_call_variant_opt_in_to_nomination","new_call_variant_opt_out_of_nomination","new_call_variant_set_nomination_enabled","new_call_variant_set_nomination_limit","new_call_variant_withdraw_collateral","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","opt_in_to_nomination","opt_in_to_nomination","opt_out_of_nomination","opt_out_of_nomination","serialize","set_nomination_enabled","set_nomination_enabled","set_nomination_limit","set_nomination_limit","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_collateral","withdraw_collateral","amount","amount","currency_pair","currency_pair","currency_pair","enabled","index","limit","vault_id","vault_id","amount","amount","nominator_id","nominator_id","vault_id","vault_id","vault_id","vault_id","deposit_collateral","opt_in_to_nomination","opt_out_of_nomination","set_nomination_enabled","set_nomination_limit","withdraw_collateral","NominationEnabled","NominationLimit","Vaults","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"nomination"],[8,"nomination::pallet"],[259,"nomination::pallet::Call"],[269,"nomination::pallet::Event"],[277,"nomination::pallet::dispatchables"],[283,"nomination::pallet::storage_types"]],"d":["Weight functions needed for nomination.","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","Contains a variant per dispatchable extrinsic that this …","Account cannot withdraw.","Vault cannot withdraw.","Configuration trait of this pallet.","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Flag indicating whether this feature is enabled","Nomination would overburden Vault.","","","The <code>Pallet</code> struct, the main type that implements traits …","The overarching event type.","Vault has already enabled nomination.","Nomination is not enabled.","Vault not found.","Vault has not enabled nomination.","Weight information for the extrinsics in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::deposit_collateral</code>.","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An auto-generated getter for <code>NominationEnabled</code>.","","","","","Create a call with the variant <code>deposit_collateral</code>.","Create a call with the variant <code>opt_in_to_nomination</code>.","Create a call with the variant <code>opt_out_of_nomination</code>.","Create a call with the variant <code>set_nomination_enabled</code>.","Create a call with the variant <code>set_nomination_limit</code>.","Create a call with the variant <code>withdraw_collateral</code>.","","","","","","","","Allow nomination for this vault","See <code>Pallet::opt_in_to_nomination</code>.","Disallow nomination for this vault","See <code>Pallet::opt_out_of_nomination</code>.","","","See <code>Pallet::set_nomination_enabled</code>.","","See <code>Pallet::set_nomination_limit</code>.","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::withdraw_collateral</code>.","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Allow nomination for this vault","Disallow nomination for this vault","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Flag indicating whether this feature is enabled","The maximum amount of collateral to be nominated for a …","Map of Vaults who have enabled nomination","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,47,47,47,0,47,47,47,0,22,22,0,15,0,0,0,0,0,22,15,15,0,3,22,22,22,22,3,15,15,16,17,16,8,16,8,15,22,17,15,22,17,15,22,17,15,22,8,16,17,15,22,8,16,17,8,15,16,17,15,16,17,16,16,16,15,22,17,15,22,17,15,22,17,15,22,17,8,16,17,16,15,22,8,16,17,15,22,8,16,17,8,17,0,15,22,8,16,17,15,22,17,16,15,16,17,15,15,16,16,17,17,15,22,16,17,15,22,8,16,17,15,15,22,22,8,8,16,16,17,17,15,15,22,22,8,8,16,16,17,17,17,17,17,17,17,16,16,16,15,22,17,16,16,15,22,8,16,17,16,15,22,8,16,17,15,22,8,16,17,15,22,8,16,17,16,8,16,16,16,17,17,17,17,17,17,16,16,16,16,16,16,16,16,17,16,17,8,16,17,16,17,15,22,17,16,0,15,22,17,15,16,17,15,22,8,16,17,15,22,8,16,17,15,22,17,15,22,17,15,22,17,15,22,8,16,17,15,22,17,15,22,8,16,17,15,22,8,16,17,15,22,8,16,17,16,22,16,17,48,49,50,51,52,53,49,52,48,49,54,55,54,55,56,57,54,55,0,0,0,0,0,0,0,0,0,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,58,59,59,60,60,58,58,59,59,60,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60],"f":[0,[[],1],[[],1],[[],1],0,[[],1],[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[2],[[[5,[[4,[3]]]]],6],0,[[[5,[[4,[3]]]],7],6],[[[8,[3]],9],[[11,[10]]]],[[]],[[]],[[]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[3]]]],[[[15,[3]]],[[15,[3]]]],[16,16],[[[17,[3]]],[[17,[3]]]],[[]],[[]],[[]],[[],18],[[],19],[[]],[20,[[11,[[15,[3]],21]]]],[20,[[11,[22,21]]]],[20,[[11,[[17,[3]],21]]]],[[],[[11,[21]]]],[[],[[11,[21]]]],[[],[[11,[21]]]],[23,[[11,[21]]]],[23,[[11,[21]]]],[23,[[11,[21]]]],[[23,20],[[11,[21]]]],[[23,20],[[11,[21]]]],[[23,20],[[11,[21]]]],[[],[[8,[3]]]],[[[24,[3]],[5,[[4,[3]]]]],25],0,[[[5,[[4,[3]]]],[26,[3]]],[[11,[27]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[28,[[11,[[8,[3]]]]]],[[[17,[3]]],25],0,[18],[18],[18],[18],[18],[[[15,[3]],[0,[29,30]]]],[[22,[0,[29,30]]]],[[[17,[3]],[0,[29,30]]]],[[[5,[[4,[3]]]]],6],[[[15,[3]],[15,[3]]],31],[[16,16],31],[[[17,[3]],[17,[3]]],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[[15,[3]],32],33],[[[22,[3]],32],33],[[16,32],33],[[[17,[3]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[3]]],12],[[]],[[[17,[3]]],34],[[]],[[[17,[3]]],35],[[[5,[[4,[3]]]]],[[26,[3]]]],[[[5,[[4,[3]]]]],[[11,[[26,[3]],27]]]],[[[5,[[4,[3]]]]],[[11,[[26,[3]],27]]]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[],18],[[],[[14,[36]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],0,[[[5,[[4,[3]]]]],31],[[],34],[[],34],[[[5,[[4,[3]]]]],[[17,[3]]]],[[[37,[3]]],[[17,[3]]]],[[[37,[3]]],[[17,[3]]]],[31,[[17,[3]]]],[[[37,[3]]],[[17,[3]]]],[[[5,[[4,[3]]]],7,7],[[17,[3]]]],[[[38,[3]]]],[[],39],[[[38,[3]]]],[[]],[[[38,[3]],1],1],[[[38,[3]]],1],[[],1],[[[24,[3]],[37,[3]]],25],0,[[[24,[3]],[37,[3]]],25],0,[[[8,[3]],40],11],[[[24,[3]],31],25],0,[[[24,[3]],[37,[3]]],25],0,[[[15,[3]]],18],[22,18],[[[17,[3]]],18],[[],[[14,[41]]]],0,[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[],[[14,[12,13]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[44]]]],[1,[[46,[45]]]],[[[24,[3]],[5,[[4,[3]]]],7,7],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[[4,[3]]]]]],[[[37,[3]]]],[[[37,[3]]]],[31],[[[37,[3]]]],[[[5,[[4,[3]]]],7,7]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[16],"p":[[3,"Weight"],[3,"Private"],[8,"Config"],[6,"CurrencyId"],[3,"VaultId"],[6,"DispatchResult"],[4,"Option"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"Event"],[3,"Pallet"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Error"],[15,"u32"],[6,"OriginFor"],[6,"DispatchResultWithPostInfo"],[3,"Amount"],[4,"DispatchError"],[8,"Deserializer"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"DefaultVaultCurrencyPair"],[6,"BlockNumberFor"],[3,"StorageVersion"],[8,"Serializer"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"deposit_collateral"],[13,"withdraw_collateral"],[13,"opt_in_to_nomination"],[13,"opt_out_of_nomination"],[13,"set_nomination_limit"],[13,"set_nomination_enabled"],[13,"DepositCollateral"],[13,"WithdrawCollateral"],[13,"NominationOptIn"],[13,"NominationOptOut"],[3,"NominationEnabled"],[3,"Vaults"],[3,"NominationLimit"]]},\
"oracle":{"doc":"Oracle Pallet","t":"ENNNNNGIENDNIILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLKKALLKLLLLLLMLLLLLLKLLLLLLLLLLLLLLLLLLLLLALLLLLLMLLLGNGEIEENDNGQNGQNNDGGQNGQLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLNLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMFFFDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CurrencyId","ExchangeRate","FeeEstimation","ForeignAsset","LendToken","LpToken","NameOf","OnExchangeRateChange","OracleKey","StableLpToken","TimestampedValue","Token","TruncateFixedPointToInt","WeightInfo","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_as_type","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","defensive_max","defensive_max","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","encode_as_type_to","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","feed_values","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","hash","identity","identity","identity","init","init","init","insert_authorized_oracle","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_visitor","is_lend_token","is_lp_token","join_lp_token","max_encoded_len","max_encoded_len","max_encoded_len","on_exchange_rate_change","on_initialize","pallet","partial_cmp","partial_cmp","remove_authorized_oracle","serialize","serialize","size_hint","size_hint","size_hint","sort","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","truncate_to_inner","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","types","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value","vzip","vzip","vzip","Aggregate","AggregateUpdated","AuthorizedOracles","Call","Config","Error","Event","FeedValues","GenesisConfig","InvalidOracleSource","MaxDelay","MaxNameLength","MissingExchangeRate","Module","OnExchangeRateChange","OracleAdded","OracleRemoved","Pallet","RawValues","RawValuesUpdated","RuntimeEvent","TryIntoIntError","ValidUntil","WeightInfo","__clone_box","__clone_box","__clone_box","_feed_values","_set_exchange_rate","assimilate_storage","authorized_oracles","authorized_oracles","begin_block","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","collateral_to_wrapped","convert","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expire_all","expire_price","feed_values","feed_values","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_price","identity","identity","identity","index","infos","init","init","init","init","init","insert_authorized_oracle","insert_authorized_oracle","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","max_delay","max_delay","module_name","name","new_call_variant_feed_values","new_call_variant_insert_authorized_oracle","new_call_variant_remove_authorized_oracle","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","remove_authorized_oracle","remove_authorized_oracle","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","storage_version","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","wrapped_to_collateral","account_id","account_id","name","values","name","oracle_id","oracle_id","oracle_id","values","values","feed_values","insert_authorized_oracle","remove_authorized_oracle","Aggregate","AuthorizedOracles","MaxDelay","RawValues","RawValuesUpdated","StorageVersion","ValidUntil","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","UnsignedFixedPoint","V0","Version","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","max_encoded_len","size_hint","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"oracle"],[180,"oracle::pallet"],[429,"oracle::pallet::Call"],[433,"oracle::pallet::Event"],[439,"oracle::pallet::dispatchables"],[442,"oracle::pallet::storage_types"],[589,"oracle::types"]],"d":["","","","","","","","","","","","","","Weight functions needed for oracle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","","","","","","","","","","","take a fixed point number and turns it into the truncated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current medianized value for the given key","","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Event emitted when exchange rate is set","Can be used to configure the genesis state of this pallet.","Not authorized to set exchange rate","Maximum delay (milliseconds) for a reported value to be …","The maximum length of an oracle name.","Exchange rate not specified or has expired","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Hook for aggregate changes.","","","The <code>Pallet</code> struct, the main type that implements traits …","Storage type is <code>StorageDoubleMap</code> with key1 type OracleKey, …","if a key is present, it means the values have been updated","The overarching event type.","Unable to convert value","Time until which the aggregate is valid","Weight information for the extrinsics in this module.","","","","","Set the current exchange rate. ONLY FOR TESTING.","","An auto-generated getter for <code>AuthorizedOracles</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Feeds data from the oracles, e.g., the exchange rates. …","See <code>Pallet::feed_values</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Public getters Get the exchange rate in planck per satoshi","","","","","","","","","","","Adds an authorized oracle account (only executable by the …","See <code>Pallet::insert_authorized_oracle</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An auto-generated getter for <code>MaxDelay</code>.","","","","Create a call with the variant <code>feed_values</code>.","Create a call with the variant <code>insert_authorized_oracle</code>.","Create a call with the variant <code>remove_authorized_oracle</code>.","","","","","","","","","Removes an authorized oracle account (only executable by …","See <code>Pallet::remove_authorized_oracle</code>.","","","","","","Auto-generated docs-only module listing all (public and …","“ Build storage at V1 (requires default 0).“","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Feeds data from the oracles, e.g., the exchange rates. …","Adds an authorized oracle account (only executable by the …","Removes an authorized oracle account (only executable by …","Current medianized value for the given key","Warning: Doc-Only","Maximum delay (milliseconds) for a reported value to be …","Warning: Doc-Only","if a key is present, it means the values have been updated","Build storage at V1 (requires default 0).","Time until which the aggregate is valid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initial version.","Storage version.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,7,7,8,8,8,0,0,0,8,0,8,0,0,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,8,6,7,8,6,7,8,6,7,8,8,6,7,8,6,8,6,8,6,8,6,8,6,7,8,6,7,8,7,8,6,7,8,8,6,7,8,6,7,8,6,6,7,7,8,8,67,7,8,6,7,8,6,6,7,7,8,8,6,6,7,7,8,8,8,8,6,7,8,6,7,8,67,6,7,8,6,7,8,6,7,8,8,8,8,8,6,7,8,68,67,0,6,8,67,7,8,6,7,8,8,6,6,7,8,6,7,8,69,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,0,6,7,8,6,7,8,6,6,7,8,0,48,0,0,0,0,0,48,0,54,0,39,54,0,39,48,48,0,0,0,39,54,0,39,48,49,50,49,49,42,49,42,49,48,54,50,48,54,50,48,54,50,48,54,42,49,50,48,54,42,49,50,42,48,49,50,48,49,50,49,49,49,49,49,48,54,50,48,54,50,48,54,50,48,54,50,42,48,54,42,49,50,48,54,42,49,50,42,50,0,48,54,42,49,50,48,54,50,48,49,50,48,48,49,49,50,50,49,49,49,50,48,54,49,50,48,54,42,49,50,48,48,54,54,42,42,49,49,50,50,48,48,54,54,42,42,49,49,50,50,50,50,50,50,50,49,48,54,50,49,49,48,54,42,49,50,49,50,49,48,54,42,49,50,48,54,42,49,50,48,54,42,49,50,49,42,49,49,50,50,50,49,49,49,49,49,49,49,49,49,50,42,48,54,50,49,0,49,48,54,50,48,49,50,48,54,42,49,50,48,54,42,49,50,48,54,50,48,54,50,48,54,50,48,54,42,49,50,48,54,50,48,54,42,49,50,48,54,42,49,50,48,54,42,49,50,49,54,49,70,71,70,72,73,74,73,75,74,76,0,0,0,0,0,0,0,0,0,0,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,77,78,78,79,79,80,80,81,81,82,82,83,83,77,77,78,78,79,79,80,80,81,81,82,82,83,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,77,78,79,80,81,82,83,0,63,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5,5]]],[[6,[5,5]]]],[7,7],[8,8],[[]],[[]],[[]],[[[6,[9,9]],[6,[9,9]]],10],[[8,8],10],[11,[[14,[[6,[12,12]],13]]]],[11,[[14,[7,13]]]],[11,[[14,[8,13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[15,[[14,[13]]]],[15,[[14,[13]]]],[15,[[14,[13]]]],[[15,16],[[14,[17]]]],[[15,11],[[14,[13]]]],[[15,11],[[14,[13]]]],[[15,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[19,[[14,[7]]]],[19,[[14,[8]]]],[18],[18],[18],[[8,15,16,[4,[2,3]]],[[14,[20]]]],[[[6,[21,21]],[0,[22,23]]]],[[7,[0,[22,23]]]],[[8,[0,[22,23]]]],[[[6,[24,24]],[6,[24,24]]],25],[[7,7],25],[[8,8],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[15,26],[[7,27],[[14,[28]]]],[[8,27],[[14,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[29,23]],30],31],[[8,32]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],18],[[],18],[[],18],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,25],[8,25],[[8,8],[[33,[8]]]],[[],18],[[],18],[[],18],[[]],[15,26],0,[[[6,[34,34]],[6,[34,34]]],[[33,[10]]]],[[8,8],[[33,[10]]]],[[],26],[[7,35],14],[[8,35],14],[[[6,[21,21]]],18],[7,18],[8,18],[8],0,[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[],33],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],36],[[],36],[[],36],[[],37],[[],[[37,[38]]]],[[],[[37,[38]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[4],[[8,[40,[39]]],41],[[[42,[39]],43],[[14,[44]]]],[45,[[46,[39]]]],0,[[[47,[39]]],15],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[39]]]],[[[48,[39]]],[[48,[39]]]],[49,49],[[[50,[39]]],[[50,[39]]]],[[]],[[]],[[]],[8,[[14,[51]]]],[[[52,[39]]],[[14,[[52,[39]],51]]]],[[],18],[[],53],[[]],[11,[[14,[[48,[39]],13]]]],[11,[[14,[54,13]]]],[11,[[14,[[50,[39]],13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[15,[[14,[13]]]],[15,[[14,[13]]]],[15,[[14,[13]]]],[[15,11],[[14,[13]]]],[[15,11],[[14,[13]]]],[[15,11],[[14,[13]]]],[[],[[42,[39]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[19,[[14,[[42,[39]]]]]],[[[50,[39]]],55],0,[18],[18],[18],[18],[18],[[[48,[39]],[0,[22,23]]]],[[54,[0,[22,23]]]],[[[50,[39]],[0,[22,23]]]],[[[48,[39]],[48,[39]]],25],[[49,49],25],[[[50,[39]],[50,[39]]],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[8],[[[56,[39]],4],55],0,[[[48,[39]],27],57],[[[54,[39]],27],57],[[49,27],57],[[[50,[39]],27],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[39]]],2],[[]],[[[50,[39]]],58],[[]],[[[50,[39]]],59],[7,[[14,[[40,[39]],51]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],18],[[],[[4,[60]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[[56,[39]],[46,[39]]],41],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],58],[[],58],[4,[[50,[39]]]],[[[46,[39]]],[[50,[39]]]],[[],[[50,[39]]]],[[[47,[39]]]],[[],61],[[[47,[39]]]],[[]],[[[47,[39]],26],26],[[[47,[39]]],26],[[[47,[39]]],26],[[],26],[[[56,[39]]],41],0,[[[42,[39]],35],14],[[[48,[39]]],18],[54,18],[[[50,[39]]],18],[[],[[4,[62]]]],0,[[],63],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[64]]]],[26,[[66,[65]]]],[8,[[14,[51]]]],0,0,0,0,0,0,0,0,0,0,[4],[[[46,[39]]]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[],[[4,[2,3]]]],[[]],[[]],[[]],[11,[[14,[63,13]]]],[[],[[14,[13]]]],[15,[[14,[13]]]],[[15,11],[[14,[13]]]],[18],[18],[18],[[63,[0,[22,23]]]],[[63,63],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],[[4,[2,3]]]],[[],18],[[]],[[]],[[]],[[],18],[63,18],[[],[[4,[2,3]]]],[[],14],[[],14],[[]],[[]],[[],[[4,[2,3]]]],[[],36],[[],37],[[]],[[]],[[]]],"c":[193],"p":[[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Clone"],[3,"TimestampedValue"],[4,"OracleKey"],[4,"CurrencyId"],[8,"Ord"],[4,"Ordering"],[8,"Input"],[8,"Decode"],[3,"Error"],[4,"Result"],[15,"u32"],[3,"PortableRegistry"],[3,"Error"],[15,"usize"],[8,"Deserializer"],[3,"Error"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[3,"Weight"],[3,"Formatter"],[3,"Error"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"Option"],[8,"PartialOrd"],[8,"Serializer"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[8,"Config"],[6,"UnsignedFixedPoint"],[6,"DispatchResult"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[8,"EncodeLike"],[6,"NameOf"],[6,"BlockNumberFor"],[4,"Event"],[3,"Pallet"],[4,"Call"],[4,"DispatchError"],[3,"Amount"],[3,"CrateVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[6,"OriginFor"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"StorageVersion"],[3,"StorageInfo"],[4,"Version"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[8,"OnExchangeRateChange"],[8,"TruncateFixedPointToInt"],[13,"insert_authorized_oracle"],[13,"remove_authorized_oracle"],[13,"feed_values"],[13,"OracleAdded"],[13,"FeedValues"],[13,"OracleRemoved"],[13,"AggregateUpdated"],[3,"Aggregate"],[3,"RawValues"],[3,"RawValuesUpdated"],[3,"ValidUntil"],[3,"MaxDelay"],[3,"AuthorizedOracles"],[3,"StorageVersion"]]},\
"oracle_rpc":{"doc":"RPC interface for the Oracle.","t":"DDIIIMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLL","n":["BalanceWrapper","Oracle","OracleApiClient","OracleApiServer","OracleRuntimeApi","amount","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","collateral_to_wrapped","collateral_to_wrapped","collateral_to_wrapped","collateral_to_wrapped","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","equivalent","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","into_rpc","is_clear","new","serialize","size_hint","to_keyed_vec","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","wrapped_to_collateral","wrapped_to_collateral","wrapped_to_collateral","wrapped_to_collateral"],"q":[[0,"oracle_rpc"]],"d":["a wrapper around a balance, used in RPC to workaround a …","A struct that implements the [<code>OracleApi</code>].","Client implementation for the <code>OracleApi</code> RPC API.","Server trait implementation for the <code>OracleApi</code> RPC API.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Collects all the methods and subscriptions defined in the …","","Create new <code>Oracle</code> with the given reference to the client.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,4,4,4,15,4,15,4,4,43,44,15,45,4,4,4,4,4,15,4,15,4,4,15,4,4,4,4,4,4,4,4,15,4,15,15,4,4,15,15,4,4,4,15,4,15,4,15,4,15,4,43,4,15,4,4,4,15,4,15,4,4,4,4,15,4,4,15,4,15,4,4,15,4,43,44,15,45],"f":[0,0,0,0,0,0,[[]],[[],[[3,[1,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5],[[6,[4]]]],[4,[[8,[[8,[4,7]],9]]]],[[[15,[[0,[10,11,[13,[12]],[14,[12]]]],12]],[4,[[0,[16,17,18]]]],16,5],[[6,[[4,[[0,[16,17,18]]]]]]]],[[11,4,5],[[21,[[20,[19]]]]]],[22,[[8,[[4,[23]],24]]]],[[],[[8,[24]]]],[25,[[8,[24]]]],[[25,22],[[8,[24]]]],[[],[[4,[26]]]],[27],[27],[27],[27],[28,[[8,[[4,[29]]]]]],[27],[27],[[[4,[30]]],[[3,[1,2]]]],[[[4,[30]],[0,[31,32]]]],[[[4,[[33,[[33,[[33,[33]]]]]]]],[4,[[33,[[33,[[33,[33]]]]]]]]],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[1,2]]]],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],34],[36,15],[[[4,[37]],38],8],[[[4,[30]]],27],[[],[[3,[1,2]]]],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[],[[3,[1,2]]]],[[],39],[[],39],[[],[[41,[40]]]],[[]],[[]],[[]],[[]],[[[4,[30]],42]],[[]],[[]],[[4,5],[[6,[4]]]],[4,[[8,[[8,[4,7]],9]]]],[[[15,[[0,[10,11,[13,[12]],[14,[12]]]],12]],[4,[[0,[16,17,18]]]],16,5],[[6,[[4,[[0,[16,17,18]]]]]]]],[[11,4,5],[[21,[[20,[19]]]]]]],"c":[],"p":[[15,"u8"],[3,"Global"],[3,"Vec"],[3,"BalanceWrapper"],[4,"Option"],[6,"RpcResult"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Oracle"],[8,"Codec"],[8,"MaybeDisplay"],[8,"MaybeFromStr"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Input"],[8,"Decode"],[3,"Error"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Deserializer"],[8,"FromStr"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[3,"RpcModule"],[3,"Arc"],[8,"Display"],[8,"Serializer"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"FnOnce"],[8,"OracleApiServer"],[8,"OracleRuntimeApi"],[8,"OracleApiClient"]]},\
"oracle_rpc_runtime_api":{"doc":"Runtime API definition for the Oracle.","t":"DIMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BalanceWrapper","OracleApi","amount","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","collateral_to_wrapped","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","equivalent","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","is_clear","serialize","size_hint","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip","wrapped_to_collateral"],"q":[[0,"oracle_rpc_runtime_api"]],"d":["a wrapper around a balance, used in RPC to workaround a …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,4,4,4,4,27,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,27],"f":[0,0,0,[[]],[[],[[3,[1,2]]]],[[]],[[]],[[]],[[]],[4,[[6,[[6,[4,5]],7]]]],[8,[[6,[[4,[9]],10]]]],[[],[[6,[10]]]],[11,[[6,[10]]]],[[11,8],[[6,[10]]]],[[],[[4,[12]]]],[13],[13],[14,[[6,[[4,[15]]]]]],[13],[[[4,[16]]],[[3,[1,2]]]],[[[4,[16]],[0,[17,18]]]],[[[4,[[19,[[19,[[19,[19]]]]]]]],[4,[[19,[[19,[[19,[19]]]]]]]]],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[],[[3,[1,2]]]],[[],13],[[]],[[]],[[]],[[],20],[[[4,[21]],22],6],[[[4,[16]]],13],[[],[[3,[1,2]]]],[[],6],[[],6],[[]],[[]],[[],[[3,[1,2]]]],[[],23],[[],[[25,[24]]]],[[]],[[]],[[[4,[16]],26]],[[]],[4,[[6,[[6,[4,5]],7]]]]],"c":[],"p":[[15,"u8"],[3,"Global"],[3,"Vec"],[3,"BalanceWrapper"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"Input"],[8,"Decode"],[3,"Error"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Deserializer"],[8,"FromStr"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[8,"Display"],[8,"Serializer"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"FnOnce"],[8,"OracleApi"]]},\
"parachain_tests":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"redeem":{"doc":"Redeem Pallet","t":"NGNDENNILLLMLLLLLLLLLLMMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLKLLMAMLMMKKLLKLLMLLLLLMLLLLLLLLLLLLLLALLLLMLLNNENIEENDNNGDNNNNNQNNNNNQLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLNLLLLLLLLLLLLLLLLLMLMLLMLNLNLLNLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNGNDIENNNEKMLLLLLMMLLLLLLLLLLLKMLLLLLLLLLLLMMKMMLMLKMLLLLLLLLLML","n":["Completed","DefaultRedeemRequest","Pending","RedeemRequest","RedeemRequestStatus","Reimbursed","Retried","WeightInfo","__clone_box","__clone_box","amount_btc","amount_btc","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","btc_address","btc_height","cancel_redeem_reimburse","cancel_redeem_retry","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","execute_redeem","fee","fee","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_clear","liquidation_redeem","max_encoded_len","max_encoded_len","opentime","pallet","period","premium","premium","redeemer","request_redeem","self_redeem","serialize","serialize","set_redeem_period","size_hint","size_hint","status","to_keyed_vec","to_keyed_vec","to_owned","to_owned","transfer_fee_btc","transfer_fee_btc","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","types","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vault","vzip","vzip","AmountBelowDustAmount","AmountExceedsUserBalance","Call","CancelRedeem","Config","Error","Event","ExecuteRedeem","GenesisConfig","LiquidationRedeem","MintTokensForReimbursedRedeem","Module","Pallet","RedeemCancelled","RedeemCompleted","RedeemIdNotFound","RedeemPeriodChange","RequestRedeem","RuntimeEvent","SelfRedeem","TimeNotExpired","TryIntoIntError","UnauthorizedRedeemer","UnauthorizedVault","WeightInfo","__clone_box","__clone_box","__clone_box","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_redeem","cancel_redeem","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_redeem","execute_redeem","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_current_inclusion_fee","get_dispatch_info","get_dust_value","get_open_or_completed_redeem_request_from_id","get_open_redeem_request_from_id","get_premium_redeem_vaults","get_redeem_requests_for_account","get_redeem_requests_for_vault","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","liquidation_redeem","liquidation_redeem","mint_tokens_for_reimbursed_redeem","mint_tokens_for_reimbursed_redeem","module_name","name","new_call_variant_cancel_redeem","new_call_variant_execute_redeem","new_call_variant_liquidation_redeem","new_call_variant_mint_tokens_for_reimbursed_redeem","new_call_variant_request_redeem","new_call_variant_self_redeem","new_call_variant_set_redeem_period","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","redeem_btc_dust_value","redeem_btc_dust_value","redeem_period","redeem_period","redeem_requests","redeem_transaction_size","redeem_transaction_size","request_redeem","request_redeem","self_redeem","self_redeem","serialize","set_redeem_period","set_redeem_period","size_hint","size_hint","size_hint","storage_info","storage_types","storage_version","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","amount_wrapped","amount_wrapped","amount_wrapped","btc_address","currencies","currency_pair","currency_pair","period","redeem_id","redeem_id","redeem_id","reimburse","unchecked_transaction","vault_id","amount","amount","amount","amount","amount","btc_address","fee","fee","fee","period","premium","redeem_id","redeem_id","redeem_id","redeem_id","redeemer","redeemer","redeemer","redeemer","slashed_amount","status","transfer_fee","transfer_fee","vault_id","vault_id","vault_id","vault_id","vault_id","cancel_redeem","execute_redeem","liquidation_redeem","mint_tokens_for_reimbursed_redeem","request_redeem","self_redeem","set_redeem_period","RedeemBtcDustValue","RedeemPeriod","RedeemRequests","RedeemTransactionSize","StorageVersion","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","Completed","DefaultRedeemRequest","Pending","RedeemRequest","RedeemRequestExt","RedeemRequestStatus","Reimbursed","Retried","V0","Version","amount_btc","amount_btc","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","btc_address","btc_height","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","fee","fee","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_mut","into_ref","max_encoded_len","opentime","period","premium","premium","redeemer","size_hint","status","to_keyed_vec","transfer_fee_btc","transfer_fee_btc","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vault","vzip"],"q":[[0,"redeem"],[125,"redeem::pallet"],[387,"redeem::pallet::Call"],[401,"redeem::pallet::Event"],[429,"redeem::pallet::dispatchables"],[436,"redeem::pallet::storage_types"],[541,"redeem::types"]],"d":["successfully executed with a valid payment from the vault","","opened, but not yet executed or cancelled","","","bool=true indicates that the vault minted tokens for the …","user received compensation, but is retrying the redeem …","Weight functions needed for redeem.","","","","total amount of BTC for the vault to send","","","","","","","","","","","the user’s Bitcoin address for payment verification","the highest recorded height in the BTC-Relay (at time of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","total redeem fees - taken from request amount","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","the <em>active</em> block height when this request was opened","The <code>pallet</code> module in each FRAME pallet hosts the most …","the redeem period when this request was opened","","premium redeem amount in collateral","the account redeeming tokens (for BTC)","","","","","","","","the status of this redeem request","","","","","","amount the vault should spend on the bitcoin inclusion fee …","","","","","","","","","","","","","","","","","","","","the vault associated with this redeem request","","","Redeem amount is too small.","Account has insufficient balance.","Contains a variant per dispatchable extrinsic that this …","","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","","Can be used to configure the genesis state of this pallet.","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","Redeem request already cancelled.","Redeem request already completed.","Redeem request not found.","","","The overarching event type.","","Redeem request has not expired.","Unable to convert value.","Unexpected redeem account.","Unexpected vault account.","Weight information for the extrinsics in this module.","","","","","","","","","","","","","","","","","","","","","","","","","If a redeem request is not completed on time, the redeem …","See <code>Pallet::cancel_redeem</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","A Vault calls this function after receiving an …","See <code>Pallet::execute_redeem</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","get current inclusion fee based on the expected number of …","","","Fetch a pre-existing open or completed redeem request or …","Fetch a pre-existing redeem request or throw. Completed or …","","Fetch all redeem requests for the specified account.","Fetch all redeem requests for the specified vault.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","When a Vault is liquidated, its collateral is slashed up …","See <code>Pallet::liquidation_redeem</code>.","Mint tokens for a redeem that was cancelled with …","See <code>Pallet::mint_tokens_for_reimbursed_redeem</code>.","","","Create a call with the variant <code>cancel_redeem</code>.","Create a call with the variant <code>execute_redeem</code>.","Create a call with the variant <code>liquidation_redeem</code>.","Create a call with the variant …","Create a call with the variant <code>request_redeem</code>.","Create a call with the variant <code>self_redeem</code>.","Create a call with the variant <code>set_redeem_period</code>.","","","","","","","","“ The minimum amount of btc that is accepted for redeem …","","“ The time difference in number of blocks between a …","","“ Users create redeem requests to receive BTC in return …","“ the expected size in bytes of the redeem bitcoin …","","Initializes a request to burn issued tokens against a …","See <code>Pallet::request_redeem</code>.","","See <code>Pallet::self_redeem</code>.","","Set the default redeem period for tx verification.","See <code>Pallet::set_redeem_period</code>.","","","","","Auto-generated docs-only module listing all (public and …","“ Build storage at V1 (requires default 0).“","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If a redeem request is not completed on time, the redeem …","A Vault calls this function after receiving an …","When a Vault is liquidated, its collateral is slashed up …","Mint tokens for a redeem that was cancelled with …","Initializes a request to burn issued tokens against a …","Warning: Doc-Only","Set the default redeem period for tx verification.","The minimum amount of btc that is accepted for redeem …","The time difference in number of blocks between a redeem …","Users create redeem requests to receive BTC in return for …","the expected size in bytes of the redeem bitcoin transfer","Build storage at V1 (requires default 0).","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","successfully executed with a valid payment from the vault","","opened, but not yet executed or cancelled","","","","bool=true indicates that the vault minted tokens for the …","user received compensation, but is retrying the redeem …","Initial version.","Storage version.","","total amount of BTC for the vault to send","","","","","","the user’s Bitcoin address for payment verification","the highest recorded height in the BTC-Relay (at time of …","","","","","","","","","","","","","total redeem fees - taken from request amount","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","the <em>active</em> block height when this request was opened","the redeem period when this request was opened","","premium redeem amount in collateral","the account redeeming tokens (for BTC)","","the status of this redeem request","","","amount the vault should spend on the bitcoin inclusion fee …","","","","","","","","","","the vault associated with this redeem request",""],"i":[11,0,11,0,0,11,11,0,11,5,5,5,11,5,11,5,11,5,11,5,11,5,5,5,66,66,11,11,5,11,5,11,5,11,5,11,5,11,5,11,11,5,11,5,11,5,11,5,11,5,11,5,11,11,66,5,5,11,5,11,5,11,11,5,5,11,11,5,5,11,5,11,5,11,5,11,5,11,5,11,66,11,5,5,0,5,5,5,5,66,66,11,5,66,11,5,5,11,5,11,5,5,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,0,11,5,11,5,5,11,5,48,48,0,44,0,0,0,44,0,44,44,0,0,48,48,48,44,44,2,44,48,48,48,48,2,44,45,46,38,44,48,46,44,48,46,44,48,46,44,48,38,45,46,44,48,38,45,46,38,45,46,44,45,46,44,45,46,45,45,45,44,48,46,44,48,46,44,48,46,44,48,46,38,44,48,38,45,46,44,48,38,45,46,38,46,0,44,48,38,45,46,44,48,46,44,45,46,44,44,45,45,46,46,45,46,44,48,45,46,44,48,38,45,46,44,44,48,48,38,38,45,45,46,46,44,44,48,48,38,38,45,45,46,46,46,46,46,46,45,46,45,45,45,45,45,45,44,48,46,45,45,44,48,38,45,46,45,44,48,38,45,46,44,48,38,45,46,44,48,38,45,46,45,46,45,46,45,45,46,46,46,46,46,46,46,45,45,45,45,45,45,45,45,38,45,38,45,45,38,45,46,45,46,38,45,46,44,48,46,45,0,45,44,48,46,44,45,46,44,48,38,45,46,44,48,38,45,46,44,48,46,44,48,46,44,48,46,44,48,38,45,46,44,48,46,44,48,38,45,46,44,48,38,45,46,44,48,38,45,46,45,48,67,68,69,67,68,70,69,71,72,73,70,73,72,67,74,75,76,77,78,74,74,76,78,79,74,74,76,80,77,74,75,76,80,80,80,74,76,74,76,80,77,78,0,0,0,0,0,0,0,0,0,0,0,0,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,81,82,82,83,83,84,84,85,85,81,81,82,82,83,83,84,84,85,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,11,0,11,0,0,0,11,11,62,0,86,5,62,62,62,62,62,5,5,62,62,62,62,62,62,62,62,62,62,62,86,5,62,62,62,62,62,62,62,62,62,62,62,5,5,86,5,5,62,5,62,86,5,62,62,62,62,62,62,62,62,62,5,62],"f":[0,0,0,0,0,0,0,0,[1],[1],[[[5,[[3,[2]],[4,[2]]]]],[[6,[2]]]],0,[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[]],[11,11],[[[5,[12,12,12,[0,[12,13]]]]],[[5,[12,12,12,[0,[12,13]]]]]],[[]],[[]],[14,[[16,[11,15]]]],[14,[[16,[[5,[17,17,17,13]],15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[18,[[16,[15]]]],[18,[[16,[15]]]],[[18,14],[[16,[15]]]],[[18,14],[[16,[15]]]],[[],11],[19],[19],[19],[19],[20,[[16,[11]]]],[20,[[16,[[5,[21,21,[0,[22,22,22,22]],[0,[13,21]]]]]]]],[19],[19],[[11,[0,[23,24]]]],[[[5,[25,25,25,13]],[0,[23,24]]]],[[11,11],26],[[[5,[[27,[[27,[[27,[27]]]]]],[27,[[27,[[27,[27]]]]]],[27,[[27,[[27,[27]]]]]],[0,[[27,[[0,[[27,[[0,[[27,[[0,[27,13]]]],13]]]],13]]]],13]]]],[5,[[27,[[27,[[27,[27]]]]]],[27,[[27,[[27,[27]]]]]],[27,[[27,[[27,[27]]]]]],[0,[[27,[[0,[[27,[[0,[[27,[[0,[27,13]]]],13]]]],13]]]],13]]]]],26],[[],26],[[],26],[[18,18,18,18],10],[[[5,[[3,[2]],[4,[2]]]]],[[6,[2]]]],0,[[11,28],[[16,[29]]]],[[[5,[30,30,30,[0,[30,13]]]],28],[[16,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],10],[[],19],[[],19],0,0,0,[[[5,[[3,[2]],[4,[2]]]]],[[16,[[6,[2]],31]]]],0,0,[[],10],[[],10],[[11,32],16],[[[5,[33,33,[0,[34,34,34,34]],[0,[13,33]]]],32],16],[[],10],[11,19],[[[5,[25,25,25,13]]],19],0,[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[[5,[[3,[2]],[4,[2]]]]],[[6,[2]]]],0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],35],[[],35],[[],[[37,[36]]]],[[],[[37,[36]]]],0,[[]],[[]],[[]],[[]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[38,[2]],39],[[16,[40]]]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[2]]]],[[[41,[2]],42,26],43],0,[[[44,[2]]],[[44,[2]]]],[45,45],[[[46,[2]]],[[46,[2]]]],[[]],[[]],[[]],[[],19],[[],47],[[]],[14,[[16,[[44,[2]],15]]]],[14,[[16,[48,15]]]],[14,[[16,[[46,[2]],15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[[],[[16,[15]]]],[18,[[16,[15]]]],[18,[[16,[15]]]],[18,[[16,[15]]]],[[18,14],[[16,[15]]]],[[18,14],[[16,[15]]]],[[18,14],[[16,[15]]]],[[],[[38,[2]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[20,[[16,[[38,[2]]]]]],[[[46,[2]]],43],0,[19],[19],[19],[19],[19],[[[44,[2]],[0,[23,24]]]],[[48,[0,[23,24]]]],[[[46,[2]],[0,[23,24]]]],[[[44,[2]],[44,[2]]],26],[[45,45],26],[[[46,[2]],[46,[2]]],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[41,[2]],42,49],43],0,[[[44,[2]],28],50],[[[48,[2]],28],50],[[45,28],50],[[[46,[2]],28],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[46,[2]]],7],[[]],[[[46,[2]]],51],[[]],[[[4,[2]]],[[16,[[6,[2]],31]]]],[[[46,[2]]],52],[[[4,[2]]],[[6,[2]]]],[42,[[16,[[53,[2]],31]]]],[42,[[16,[[53,[2]],31]]]],[[],[[16,[9,31]]]],[[],[[9,[42]]]],[[],[[9,[42]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],19],[[],[[9,[54]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[2]],[55,[2]]],43],0,[[[41,[2]],[55,[2]],42],43],0,[[],51],[[],51],[[42,26],[[46,[2]]]],[[42,49],[[46,[2]]]],[[[55,[2]]],[[46,[2]]]],[[[55,[2]],42],[[46,[2]]]],[[56,[57,[[4,[2]]]]],[[46,[2]]]],[[[55,[2]]],[[46,[2]]]],[[[3,[2]]],[[46,[2]]]],[[[3,[2]]]],[[],58],[[[3,[2]]]],[[]],[[[3,[2]],10],10],[[[3,[2]]],10],[[],10],[[]],0,[[],[[3,[2]]]],0,[[[59,[42]]],[[60,[[53,[2]]]]]],[[],18],0,[[[41,[2]],56,[57,[[4,[2]]]]],43],0,[[[41,[2]],[55,[2]]],43],0,[[[38,[2]],32],16],[[[41,[2]],[3,[2]]],43],0,[[[44,[2]]],19],[48,19],[[[46,[2]]],19],[[],[[9,[61]]]],0,[[],62],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[63]]]],[10,[[65,[64]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[42,26]],[[42,49]],[[[55,[2]]]],[[[55,[2]],42]],[[56,[57,[[4,[2]]]]]],[[[55,[2]]]],[[[3,[2]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],[[],[[9,[7,8]]]],[[]],[[]],[[]],0,0,[14,[[16,[62,15]]]],[[],[[16,[15]]]],[18,[[16,[15]]]],[[18,14],[[16,[15]]]],[19],[19],[19],[[62,[0,[23,24]]]],[[62,62],26],[[],26],[[],26],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],19],[[]],[[]],[[]],[[],19],0,0,[[],[[16,[6,31]]]],0,0,[62,19],0,[[],[[9,[7,8]]]],[[],6],0,[[],16],[[],16],[[]],[[]],[[],[[9,[7,8]]]],[[],35],[[],37],[[]],[[]],0,[[]]],"c":[136],"p":[[3,"Private"],[8,"Config"],[6,"BlockNumberFor"],[6,"CurrencyId"],[3,"RedeemRequest"],[3,"Amount"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Weight"],[4,"RedeemRequestStatus"],[8,"Clone"],[8,"Copy"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"FromStr"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[4,"DispatchError"],[8,"Serializer"],[8,"Serialize"],[8,"Display"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[6,"OriginFor"],[3,"H256"],[6,"DispatchResultWithPostInfo"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[3,"FullTransactionProof"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[6,"DefaultRedeemRequest"],[3,"PalletInfoData"],[6,"DefaultVaultCurrencyPair"],[4,"Address"],[3,"VaultId"],[3,"StorageVersion"],[8,"EncodeLike"],[4,"Option"],[3,"StorageInfo"],[4,"Version"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"request_redeem"],[13,"liquidation_redeem"],[13,"self_redeem"],[13,"mint_tokens_for_reimbursed_redeem"],[13,"set_redeem_period"],[13,"execute_redeem"],[13,"cancel_redeem"],[13,"RequestRedeem"],[13,"LiquidationRedeem"],[13,"ExecuteRedeem"],[13,"MintTokensForReimbursedRedeem"],[13,"SelfRedeem"],[13,"RedeemPeriodChange"],[13,"CancelRedeem"],[3,"RedeemPeriod"],[3,"RedeemRequests"],[3,"RedeemBtcDustValue"],[3,"RedeemTransactionSize"],[3,"StorageVersion"],[8,"RedeemRequestExt"]]},\
"redeem_rpc":{"doc":"RPC interface for the Redeem Module.","t":"DIIILLLLLLLLLLKLLLKLLLKLLLLLLLLLLLLLLL","n":["Redeem","RedeemApiClient","RedeemApiServer","RedeemRuntimeApi","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get_premium_redeem_vaults","get_premium_redeem_vaults","get_premium_redeem_vaults","get_premium_redeem_vaults","get_redeem_requests","get_redeem_requests","get_redeem_requests","get_redeem_requests","get_vault_redeem_requests","get_vault_redeem_requests","get_vault_redeem_requests","get_vault_redeem_requests","init","into","into_mut","into_ref","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"redeem_rpc"]],"d":["A struct that implements the [<code>RedeemApi</code>].","Client implementation for the <code>RedeemApi</code> RPC API.","Server trait implementation for the <code>RedeemApi</code> RPC API.","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get all vaults below the premium redeem threshold, ordered …","","","","Get all redeem requests for a particular account","","","","Get all redeem requests for a particular vault","","","","Calls <code>U::from(self)</code>.","","","Collects all the methods and subscriptions defined in the …","Create new <code>Redeem</code> with the given reference to the client.","","","","","",""],"i":[0,0,0,0,14,14,14,14,14,14,14,14,14,14,22,23,14,24,22,23,14,24,22,23,14,24,14,14,14,14,22,14,14,14,14,14,14,14],"f":[0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[2,[[4,[3]]]],[[],[[7,[[7,[[3,[5]],6]],8]]]],[[[14,[[0,[9,10,[12,[11]],[13,[11]]]],11]],2],[[4,[3]]]],[[10,2],[[17,[[16,[15]]]]]],[2,[[4,[3]]]],[[],[[7,[[3,[5]],8]]]],[[[14,[[0,[9,10,[12,[11]],[13,[11]]]],11]],18,2],[[4,[[3,[18]]]]]],[[10,2],[[17,[[16,[15]]]]]],[2,[[4,[3]]]],[[],[[7,[[3,[5]],8]]]],[[[14,[[0,[9,10,[12,[11]],[13,[11]]]],11]],18,2],[[4,[[3,[18]]]]]],[[10,2],[[17,[[16,[15]]]]]],[[],1],[[]],[[]],[[]],[[],19],[20,14],[[],7],[[],7],[[],21],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[4,"Option"],[3,"Vec"],[6,"RpcResult"],[3,"Global"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Redeem"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Codec"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[8,"RedeemApiServer"],[8,"RedeemRuntimeApi"],[8,"RedeemApiClient"]]},\
"redeem_rpc_runtime_api":{"doc":"Runtime API definition for the Redeem Module.","t":"ILLL","n":["RedeemApi","get_premium_redeem_vaults","get_redeem_requests","get_vault_redeem_requests"],"q":[[0,"redeem_rpc_runtime_api"]],"d":["","Get all vaults below the premium redeem threshold, ordered …","Get all redeem requests for a particular account","Get all redeem requests for a particular vault"],"i":[0,5,5,5],"f":[0,[[],[[3,[[3,[1,2]],4]]]],[[],[[3,[1,4]]]],[[],[[3,[1,4]]]]],"c":[],"p":[[3,"Vec"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"RedeemApi"]]},\
"replace":{"doc":"Replace Pallet","t":"NNCNDEILLKMMLLLLLLLLLLMMKLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLMLLLLLLLLLLLLLMMAMKLLKLLMLLLLLLLLLLLLLLLLLLALLLLLLKNNENIEENDNGNDNNNNNNNNQNNQNLLLLNLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLNLLNLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNGNDIENEMKLMLLLLLMMKLMLLLLLLLLLLLLLLLLKLMLLLLLLMMMLMLLLLLLLLLLL","n":["Cancelled","Completed","DefaultReplaceRequest","Pending","ReplaceRequest","ReplaceRequestStatus","WeightInfo","__clone_box","__clone_box","accept_replace","accept_time","amount","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","btc_address","btc_height","cancel_replace","clear","clone","clone","clone_into","clone_into","collateral","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","execute_cancelled_replace","execute_pending_replace","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","griefing_collateral","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","is_clear","max_encoded_len","max_encoded_len","new_vault","old_vault","pallet","period","request_replace","serialize","serialize","set_replace_period","size_hint","size_hint","status","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","types","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","withdraw_replace","AcceptReplace","AmountBelowDustAmount","Call","CancelReplace","Config","Error","Event","ExecuteReplace","GenesisConfig","InvalidWrappedCurrency","Module","NoPendingRequest","Pallet","ReplaceAmountZero","ReplaceCancelled","ReplaceCompleted","ReplaceIdNotFound","ReplacePeriodChange","ReplacePeriodNotExpired","ReplaceSelfNotAllowed","RequestReplace","RuntimeEvent","UnauthorizedVault","VaultHasEnabledNomination","WeightInfo","WithdrawReplace","__clone_box","__clone_box","__clone_box","accept_replace","accept_replace","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_replace","cancel_replace","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","dust_value","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_replace","execute_replace","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_open_or_cancelled_replace_request","get_open_or_completed_replace_request","get_open_replace_request","get_replace_requests_for_new_vault","get_replace_requests_for_old_vault","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_accept_replace","new_call_variant_cancel_replace","new_call_variant_execute_replace","new_call_variant_request_replace","new_call_variant_set_replace_period","new_call_variant_withdraw_replace","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","replace_btc_dust_value","replace_btc_dust_value","replace_period","replace_period","request_replace","request_replace","serialize","set_replace_period","set_replace_period","size_hint","size_hint","size_hint","storage_info","storage_types","storage_version","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_replace","withdraw_replace","amount","amount","amount_btc","btc_address","collateral","currency_pair","currency_pair","currency_pair","old_vault","period","replace_id","replace_id","unchecked_transaction","amount","amount","btc_address","collateral","griefing_collateral","griefing_collateral","new_vault_id","new_vault_id","new_vault_id","old_vault_id","old_vault_id","old_vault_id","old_vault_id","old_vault_id","period","replace_id","replace_id","replace_id","withdrawn_griefing_collateral","withdrawn_tokens","accept_replace","cancel_replace","execute_replace","request_replace","set_replace_period","withdraw_replace","ReplaceBtcDustValue","ReplacePeriod","ReplaceRequests","StorageVersion","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","Cancelled","Completed","DefaultReplaceRequest","Pending","ReplaceRequest","ReplaceRequestExt","ReplaceRequestStatus","V0","Version","accept_time","amount","amount","amount","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","btc_address","btc_height","collateral","collateral","collateral","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","from","from_mut","from_mut","from_ref","from_ref","griefing_collateral","griefing_collateral","griefing_collateral","identity","init","into","into_mut","into_ref","max_encoded_len","new_vault","old_vault","period","size_hint","status","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"replace"],[121,"replace::pallet"],[377,"replace::pallet::Call"],[390,"replace::pallet::Event"],[410,"replace::pallet::dispatchables"],[416,"replace::pallet::storage_types"],[500,"replace::types"]],"d":["payment was not received, new vault may receive griefing …","successfully executed with a valid payment from the old …","","accepted, but not yet executed or cancelled","","","Weight functions needed for replace.","","","","the <em>active</em> block height when this request was opened","the amount of tokens to be replaced","","","","","","","","","","","the Bitcoin address of the new vault","the highest recorded height in the BTC-Relay (at time of …","","","","","","","additional collateral to cover replacement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","the collateral held for spam prevention","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","the vault which is replacing the old vault","the vault which has requested to be replaced","The <code>pallet</code> module in each FRAME pallet hosts the most …","the replace period when this request was opened","","","","","","","the status of this replace request","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace amount is too small.","Contains a variant per dispatchable extrinsic that this …","","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","","Can be used to configure the genesis state of this pallet.","Vault cannot replace different currency.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","No replace request found.","The <code>Pallet</code> struct, the main type that implements traits …","Replace requires non-zero increase.","Replace request already cancelled.","Replace request already completed.","Replace request not found.","","Replace request has not expired.","Cannot replace self.","","The overarching event type.","Unexpected vault account.","Cannot replace with nominated collateral.","Weight information for the extrinsics in this module.","","","","","Accept request of vault replacement","See <code>Pallet::accept_replace</code>.","","","","","","","","","","","","","","","","","","","","","","Cancel vault replacement","See <code>Pallet::cancel_replace</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","Execute vault replacement","See <code>Pallet::execute_replace</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Get a open or cancelled replace request by id. Completed …","Get a open or completed replace request by id. Cancelled …","Get a replace request by id. Completed or cancelled …","Fetch all replace requests to the specified vault.","Fetch all replace requests from the specified vault.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Create a call with the variant <code>accept_replace</code>.","Create a call with the variant <code>cancel_replace</code>.","Create a call with the variant <code>execute_replace</code>.","Create a call with the variant <code>request_replace</code>.","Create a call with the variant <code>set_replace_period</code>.","Create a call with the variant <code>withdraw_replace</code>.","","","","","","","","“ The minimum amount of btc that is accepted for replace …","","“ The time difference in number of blocks between when a …","","Request the replacement of a new vault ownership","See <code>Pallet::request_replace</code>.","","Set the default replace period for tx verification.","See <code>Pallet::set_replace_period</code>.","","","","","Auto-generated docs-only module listing all (public and …","“ Build storage at V1 (requires default 0).“","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Withdraw a request of vault replacement","See <code>Pallet::withdraw_replace</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accept request of vault replacement","Cancel vault replacement","Execute vault replacement","Request the replacement of a new vault ownership","Set the default replace period for tx verification.","Withdraw a request of vault replacement","The minimum amount of btc that is accepted for replace …","The time difference in number of blocks between when a …","Vaults create replace requests to transfer locked …","Build storage at V1 (requires default 0).","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","payment was not received, new vault may receive griefing …","successfully executed with a valid payment from the old …","","accepted, but not yet executed or cancelled","","","","Initial version.","Storage version.","the <em>active</em> block height when this request was opened","","","the amount of tokens to be replaced","","","","","","the Bitcoin address of the new vault","the highest recorded height in the BTC-Relay (at time of …","","","additional collateral to cover replacement","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","the collateral held for spam prevention","","","Calls <code>U::from(self)</code>.","","","","the vault which is replacing the old vault","the vault which has requested to be replaced","the replace period when this request was opened","","the status of this replace request","","","","","","","","","","",""],"i":[6,6,0,6,0,0,0,6,9,64,9,9,6,9,6,9,6,9,6,9,6,9,9,9,64,6,6,9,6,9,9,6,9,6,9,6,9,6,9,6,6,9,6,9,6,9,6,9,6,9,6,9,6,6,9,9,64,64,6,9,6,9,6,6,9,9,6,6,9,9,9,6,9,6,9,6,9,6,9,6,9,6,6,9,9,9,0,9,64,6,9,64,6,9,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,0,6,9,6,9,6,9,64,44,48,0,44,0,0,0,44,0,48,0,48,0,48,48,48,48,44,48,48,44,33,48,48,33,44,44,45,46,45,46,40,44,48,46,44,48,46,44,48,46,44,48,40,45,46,44,48,40,45,46,40,45,46,44,45,46,44,45,46,45,45,45,44,48,46,44,48,46,44,48,46,44,48,46,40,44,48,40,45,46,44,48,40,45,46,40,46,0,44,48,40,45,46,45,44,48,46,44,45,46,44,44,45,45,46,46,45,46,44,48,45,46,44,48,40,45,46,44,44,48,48,40,40,45,45,46,46,44,44,48,48,40,40,45,45,46,46,46,46,46,46,46,45,45,45,45,45,44,48,46,45,45,44,48,40,45,46,45,44,48,40,45,46,44,48,40,45,46,44,48,40,45,46,45,45,46,46,46,46,46,46,45,45,45,45,45,45,45,45,40,45,40,45,46,40,45,46,44,48,46,45,0,45,44,48,46,44,45,46,44,48,40,45,46,44,48,40,45,46,44,48,46,44,48,46,44,48,46,44,48,40,45,46,44,48,46,44,48,40,45,46,44,48,40,45,46,44,48,40,45,46,45,48,45,46,65,66,67,67,67,65,66,67,67,68,69,70,69,71,72,72,72,71,73,72,74,73,71,75,72,74,73,76,72,74,73,75,75,0,0,0,0,0,0,0,0,0,0,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,77,78,78,79,79,80,80,77,77,78,78,79,79,80,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,77,78,79,80,6,6,0,6,0,0,0,60,0,9,81,54,9,60,60,60,60,60,9,9,81,54,9,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,81,54,9,60,60,60,60,60,60,9,9,9,60,9,60,60,60,60,60,60,60,60,60,60,60],"f":[0,0,0,0,0,0,0,[1],[1],[[],2],0,0,[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[]],[6,6],[[[9,[7,7,7,[0,[7,8]]]]],[[9,[7,7,7,[0,[7,8]]]]]],[[]],[[]],0,[10,[[12,[6,11]]]],[10,[[12,[[9,[13,13,8]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[14,[[12,[11]]]],[14,[[12,[11]]]],[[14,10],[[12,[11]]]],[[14,10],[[12,[11]]]],[[],6],[15],[15],[15],[15],[16,[[12,[6]]]],[16,[[12,[[9,[17,17,[0,[18,18,18]],[0,[8,17]]]]]]]],[15],[15],[[6,[0,[19,20]]]],[[[9,[21,21,8]],[0,[19,20]]]],[[6,6],22],[[[9,[[23,[[23,[[23,[23]]]]]],[23,[[23,[[23,[23]]]]]],[23,[[23,[[23,[23]]]]]],[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,8]]]],8]]]],8]]]],8]]]],[9,[[23,[[23,[[23,[23]]]]]],[23,[[23,[[23,[23]]]]]],[23,[[23,[[23,[23]]]]]],[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,8]]]],8]]]],8]]]],8]]]]],22],[[],22],[[],22],[[],22],[[],22],[[14,14,14,14],2],[[14,14,14,14],2],[[6,24],[[12,[25]]]],[[[9,[26,26,26,[0,[26,8]]]],24],[[12,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],15],[[],15],0,0,0,0,[[],2],[[6,27],12],[[[9,[28,28,[0,[29,29,29]],[0,[8,28]]]],27],12],[[],2],[6,15],[[[9,[21,21,8]]],15],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],30],[[],30],[[],[[32,[31]]]],[[],[[32,[31]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[34,[33]],[35,[33]],[37,[[36,[33]]]],38],39],0,[[[40,[33]],41],[[12,[42]]]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[33]]]],[[[34,[33]],43],39],0,[[[44,[33]]],[[44,[33]]]],[45,45],[[[46,[33]]],[[46,[33]]]],[[]],[[]],[[]],[[],15],[[],47],[[]],[10,[[12,[[44,[33]],11]]]],[10,[[12,[48,11]]]],[10,[[12,[[46,[33]],11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[14,[[12,[11]]]],[14,[[12,[11]]]],[14,[[12,[11]]]],[[14,10],[[12,[11]]]],[[14,10],[[12,[11]]]],[[14,10],[[12,[11]]]],[[],[[40,[33]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[16,[[12,[[40,[33]]]]]],[[[46,[33]]],39],0,[15],[15],[15],[15],[15],[[[36,[33]]],[[49,[33]]]],[[[44,[33]],[0,[19,20]]]],[[48,[0,[19,20]]]],[[[46,[33]],[0,[19,20]]]],[[[44,[33]],[44,[33]]],22],[[45,45],22],[[[46,[33]],[46,[33]]],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[34,[33]],43,50],39],0,[[[44,[33]],24],51],[[[48,[33]],24],51],[[45,24],51],[[[46,[33]],24],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[46,[33]]],3],[[]],[[[46,[33]]],52],[[]],[[[46,[33]]],53],[43,[[12,[[54,[33]],55]]]],[43,[[12,[[54,[33]],55]]]],[43,[[12,[[54,[33]],55]]]],[[],[[5,[43]]]],[[],[[5,[43]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],15],[[],[[5,[56]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[[[35,[33]],[37,[[36,[33]]]],38],[[46,[33]]]],[43,[[46,[33]]]],[[43,50],[[46,[33]]]],[[[35,[33]]],[[46,[33]]]],[[[57,[33]]],[[46,[33]]]],[[[35,[33]]],[[46,[33]]]],[[[57,[33]]]],[[],58],[[[57,[33]]]],[[]],[[[57,[33]],2],2],[[[57,[33]]],2],[[],2],[[]],0,[[],[[57,[33]]]],0,[[[34,[33]],[35,[33]]],39],0,[[[40,[33]],27],12],[[[34,[33]],[57,[33]]],39],0,[[[44,[33]]],15],[48,15],[[[46,[33]]],15],[[],[[5,[59]]]],0,[[],60],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[61]]]],[2,[[63,[62]]]],[[[34,[33]],[35,[33]]],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[35,[33]],[37,[[36,[33]]]],38]],[43],[[43,50]],[[[35,[33]]]],[[[57,[33]]]],[[[35,[33]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],30],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],49],[[[54,[33]]],[[49,[33]]]],0,[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],0,0,[[],[[12,[49,55]]]],[[[54,[33]]],[[12,[[49,[33]],55]]]],0,[10,[[12,[60,11]]]],[[],[[12,[11]]]],[14,[[12,[11]]]],[[14,10],[[12,[11]]]],[15],[15],[15],[[60,[0,[19,20]]]],[[60,60],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[],49],[[[54,[33]]],[[49,[33]]]],0,[[],[[5,[3,4]]]],[[],15],[[]],[[]],[[]],[[],15],0,0,0,[60,15],0,[[],[[5,[3,4]]]],[[],12],[[],12],[[]],[[]],[[],[[5,[3,4]]]],[[],30],[[],32],[[]],[[]],[[]]],"c":[131],"p":[[3,"Private"],[3,"Weight"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"ReplaceRequestStatus"],[8,"Clone"],[8,"Copy"],[3,"ReplaceRequest"],[8,"Input"],[3,"Error"],[4,"Result"],[8,"Decode"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"FromStr"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[8,"Serializer"],[8,"Serialize"],[8,"Display"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"Config"],[6,"OriginFor"],[6,"DefaultVaultCurrencyPair"],[6,"CurrencyId"],[3,"VaultId"],[4,"Address"],[6,"DispatchResultWithPostInfo"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[3,"H256"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[3,"Amount"],[3,"FullTransactionProof"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[6,"DefaultReplaceRequest"],[4,"DispatchError"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"StorageInfo"],[4,"Version"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"request_replace"],[13,"withdraw_replace"],[13,"accept_replace"],[13,"set_replace_period"],[13,"execute_replace"],[13,"cancel_replace"],[13,"RequestReplace"],[13,"AcceptReplace"],[13,"CancelReplace"],[13,"ExecuteReplace"],[13,"WithdrawReplace"],[13,"ReplacePeriodChange"],[3,"ReplaceRequests"],[3,"ReplacePeriod"],[3,"ReplaceBtcDustValue"],[3,"StorageVersion"],[8,"ReplaceRequestExt"]]},\
"replace_rpc":{"doc":"RPC interface for the Replace Module.","t":"DIIILLLLLLLLKLLLKLLLLLLLLLLLLL","n":["Replace","ReplaceApiClient","ReplaceApiServer","ReplaceRuntimeApi","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","get_new_vault_replace_requests","get_new_vault_replace_requests","get_new_vault_replace_requests","get_new_vault_replace_requests","get_old_vault_replace_requests","get_old_vault_replace_requests","get_old_vault_replace_requests","get_old_vault_replace_requests","init","into","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"replace_rpc"]],"d":["A struct that implements the [<code>ReplaceApi</code>].","Client implementation for the <code>ReplaceApi</code> RPC API.","Server trait implementation for the <code>ReplaceApi</code> RPC API.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get all replace requests to a particular vault","","","","Get all replace requests from a particular vault","","","Calls <code>U::from(self)</code>.","Collects all the methods and subscriptions defined in the …","Create new <code>Replace</code> with the given reference to the client.","","","","","",""],"i":[0,0,0,0,10,10,10,10,10,10,10,10,21,10,22,23,21,10,22,23,10,10,21,10,10,10,10,10,10,10],"f":[0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[]],[[]],[2,[[4,[3]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,2],[[4,[[3,[11]]]]]],[[],[[14,[[3,[12]],13]]]],[[6,2],[[17,[[16,[15]]]]]],[2,[[4,[3]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,2],[[4,[[3,[11]]]]]],[[],[[14,[[3,[12]],13]]]],[[6,2],[[17,[[16,[15]]]]]],[[],1],[[]],[[],18],[19,10],[[],14],[[],14],[[],20],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[4,"Option"],[3,"Vec"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Replace"],[8,"Codec"],[3,"Global"],[4,"ApiError"],[4,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[8,"ReplaceApiServer"],[8,"ReplaceRuntimeApi"],[8,"ReplaceApiClient"]]},\
"replace_rpc_runtime_api":{"doc":"Runtime API definition for the Replace Module.","t":"ILL","n":["ReplaceApi","get_new_vault_replace_requests","get_old_vault_replace_requests"],"q":[[0,"replace_rpc_runtime_api"]],"d":["","Get all replace requests to a particular vault","Get all replace requests from a particular vault"],"i":[0,4,4],"f":[0,[[],[[3,[1,2]]]],[[],[[3,[1,2]]]]],"c":[],"p":[[3,"Vec"],[4,"ApiError"],[4,"Result"],[8,"ReplaceApi"]]},\
"reward":{"doc":"Reward Module","t":"QIOKKKKKAKLLKKEIQNNEEDNNQGDQGGGQQGQGGNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CurrencyId","RewardsApi","checked_add_mut","compute_reward","deposit_stake","distribute_reward","get_stake","get_total_stake","pallet","reward_currencies_len","set_stake","withdraw_all_stake","withdraw_reward","withdraw_stake","Call","Config","CurrencyId","DepositStake","DistributeReward","Error","Event","Instance1","InsufficientFunds","MaxRewardCurrencies","MaxRewardCurrencies","Module","Pallet","PoolId","RewardCurrencies","RewardPerToken","RewardTally","RuntimeEvent","SignedFixedPoint","Stake","StakeId","TotalRewards","TotalStake","TryIntoIntError","WithdrawReward","WithdrawStake","ZeroTotalStake","__clone_box","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compute_reward","compute_reward","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_stake","deposit_stake","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","distribute_reward","distribute_reward","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_stake","get_total_rewards","get_total_stake","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","reward_currencies_len","reward_per_token","size_hint","size_hint","stake","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","total_rewards","total_stake","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_reward","withdraw_reward","withdraw_stake","withdraw_stake","amount","amount","amount","amount","currency_id","currency_id","pool_id","pool_id","pool_id","stake_id","stake_id","stake_id","RewardCurrencies","RewardPerToken","RewardTally","Stake","TotalRewards","TotalStake","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"reward"],[14,"reward::pallet"],[261,"reward::pallet::Event"],[273,"reward::pallet::storage_types"]],"d":["","","","Compute the expected reward for the <code>stake_id</code>.","Deposit stake for an account.","Distribute the <code>amount</code> to all participants OR error if zero …","Return the stake associated with the <code>stake_id</code>.","Return the stake associated with the <code>pool_id</code>.","The <code>pallet</code> module in each FRAME pallet hosts the most …","","Set the stake to <code>amount</code> for <code>stake_id</code> regardless of its …","Withdraw all stake for an account.","Withdraw all rewards from the <code>stake_id</code>.","Withdraw stake for an account.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The currency ID type.","","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","<code>Instance1</code> to be used for instantiable palllets defined …","Balance not sufficient to withdraw stake.","Maximum rewards currencies reached.","The maximum number of reward currencies.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","The pool identifier type.","Track the currencies used for rewards.","Used to compute the rewards for a participant’s stake.","Accounts for previous changes in stake size.","The overarching event type.","Signed fixed point type.","The stake of a participant in this reward pool.","The stake identifier type.","The total unclaimed rewards distributed to this reward …","The total stake deposited to this reward pool.","Unable to convert value.","","","Cannot distribute rewards without stake.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>RewardPerToken</code>.","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","An auto-generated getter for <code>TotalRewards</code>.","An auto-generated getter for <code>TotalStake</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Track the currencies used for rewards.","Used to compute the rewards for a participant’s stake.","Accounts for previous changes in stake size.","The stake of a participant in this reward pool.","The total unclaimed rewards distributed to this reward …","The total stake deposited to this reward pool.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[43,0,0,43,43,43,43,43,0,43,43,43,43,43,0,0,9,10,10,0,0,0,22,22,9,0,0,9,0,0,0,9,9,0,9,0,0,22,10,10,22,10,11,12,13,10,22,12,10,22,12,10,22,12,10,22,11,12,13,10,22,11,12,13,10,11,12,13,10,11,12,13,11,11,11,11,11,10,22,12,10,22,12,10,22,12,10,22,12,11,11,10,22,11,12,13,10,22,11,12,13,12,0,11,11,10,22,11,12,13,10,22,10,11,12,13,10,10,11,11,12,12,13,13,10,22,11,12,13,10,22,11,12,13,10,10,22,22,11,11,12,12,13,13,10,10,22,22,11,11,12,12,13,13,12,12,12,12,12,11,11,11,10,22,12,11,11,10,22,11,12,13,11,10,22,11,12,13,10,22,11,12,13,10,22,11,12,13,11,11,11,11,11,11,11,11,11,11,11,10,22,11,11,0,10,22,12,10,11,12,13,11,11,10,22,11,12,13,10,22,11,12,13,10,22,12,10,22,12,10,22,12,10,22,11,12,13,10,22,12,10,22,11,12,13,10,22,11,12,13,10,22,11,12,13,11,22,11,11,11,11,44,45,46,47,45,47,44,46,47,44,46,47,0,0,0,0,0,0,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,48,49,49,50,50,51,51,52,52,53,53,48,48,49,49,50,50,51,51,52,52,53,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53],"f":[0,0,0,[[],[[2,[1]]]],[[],3],[[],3],[[],[[2,[1]]]],[[],[[2,[1]]]],0,[[],4],[[],3],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[9]]]],[11,11],[[[12,[9]]],[[12,[9]]]],[13,13],[[]],[[]],[[]],[[]],[[],[[2,[1]]]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[],18],[[],19],[[]],[20,[[2,[[10,[9]],21]]]],[20,[[2,[22,21]]]],[20,[[2,[[12,[9]],21]]]],[[],[[2,[21]]]],[[],[[2,[21]]]],[[],[[2,[21]]]],[4,[[2,[21]]]],[4,[[2,[21]]]],[4,[[2,[21]]]],[[4,20],[[2,[21]]]],[[4,20],[[2,[21]]]],[[4,20],[[2,[21]]]],[[],[[2,[1]]]],[[[0,[14,15,16,17]]],3],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[[12,[9]]],23],0,[[],3],[[[0,[14,15,16,17]]],3],[18],[18],[18],[18],[18],[[[10,[9]],[0,[24,25]]]],[[22,[0,[24,25]]]],[[[10,[9]],[10,[9]]],26],[[11,11],26],[[[12,[9]],[12,[9]]],26],[[13,13],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[10,[9]],27],28],[[[22,[9]],27],28],[[11,27],28],[[[12,[9]],27],28],[[13,27],[[2,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[9]]],6],[[]],[[[12,[9]]],30],[[]],[[[12,[9]]],31],[[],[[2,[[0,[14,15,16,17]],1]]]],[[],[[2,[1]]]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],18],[[],[[8,[32]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[[33,[9]]]],[[],34],[[[33,[9]]]],[[]],[[[33,[9]],35],35],[[[33,[9]]],35],[[],35],[[],4],[[36,36]],[[[10,[9]]],18],[22,18],[[]],[[],[[8,[37]]]],0,[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[[]],[[]],[[]],[36],[36],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[40]]]],[35,[[42,[41]]]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[],[[2,[1]]]],[[[0,[14,15,16,17]]],3],[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[25],"p":[[4,"DispatchError"],[4,"Result"],[6,"DispatchResult"],[15,"u32"],[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"Instance1"],[8,"BalanceToFixedPoint"],[8,"Saturating"],[8,"PartialOrd"],[8,"Copy"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[8,"EncodeLike"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"RewardsApi"],[13,"DepositStake"],[13,"DistributeReward"],[13,"WithdrawStake"],[13,"WithdrawReward"],[3,"TotalStake"],[3,"TotalRewards"],[3,"RewardPerToken"],[3,"Stake"],[3,"RewardTally"],[3,"RewardCurrencies"]]},\
"reward_rpc":{"doc":"RPC interface for the Reward Module.","t":"DIIILLKLLLKLLLKLLLLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLL","n":["Reward","RewardApiClient","RewardApiServer","RewardRuntimeApi","borrow","borrow_mut","compute_escrow_reward","compute_escrow_reward","compute_escrow_reward","compute_escrow_reward","compute_farming_reward","compute_farming_reward","compute_farming_reward","compute_farming_reward","compute_vault_reward","compute_vault_reward","compute_vault_reward","compute_vault_reward","deref","deref_mut","drop","estimate_escrow_reward_rate","estimate_escrow_reward_rate","estimate_escrow_reward_rate","estimate_escrow_reward_rate","estimate_farming_reward","estimate_farming_reward","estimate_farming_reward","estimate_farming_reward","estimate_vault_reward_rate","estimate_vault_reward_rate","estimate_vault_reward_rate","estimate_vault_reward_rate","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"reward_rpc"]],"d":["A struct that implements the [<code>RewardApi</code>].","Client implementation for the <code>RewardApi</code> RPC API.","Server trait implementation for the <code>RewardApi</code> RPC API.","","","","","","Calculate the number of escrow rewards accrued","","","","Calculate the number of farming rewards accrued","","","","Calculate the number of vault rewards accrued","","","","","","","Estimate staking reward rate for a one year period","","","","Estimate farming rewards for remaining incentives","","","","Estimate vault reward rate for a one year period","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Collects all the methods and subscriptions defined in the …","Create new <code>Reward</code> with the given reference to the client.","","","","","",""],"i":[0,0,0,0,9,9,23,9,24,25,23,9,24,25,23,9,24,25,9,9,9,23,9,24,25,23,9,24,25,23,9,24,25,9,9,9,9,9,9,9,9,9,23,9,9,9,9,9,9,9],"f":[0,0,0,0,[[]],[[]],[1,[[3,[2]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,1],[[3,[[2,[[0,[10,11,12]]]]]]]],[[],[[14,[[14,[2,13]],15]]]],[[5,1],[[18,[[17,[16]]]]]],[1,[[3,[2]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,10,1],[[3,[[2,[[0,[10,11,12]]]]]]]],[[],[[14,[[14,[2,13]],15]]]],[[5,1],[[18,[[17,[16]]]]]],[1,[[3,[2]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,1],[[3,[[2,[[0,[10,11,12]]]]]]]],[[],[[14,[[14,[2,13]],15]]]],[[5,1],[[18,[[17,[16]]]]]],[19],[19],[19],[[1,1,1],3],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,[1,[[0,[10,11,12]]]],[1,[10]],1],[[3,[10]]]],[[1,1],[[14,[[14,[13]],15]]]],[[5,1,1,1],[[18,[[17,[16]]]]]],[1,[[3,[2]]]],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,10,10,1],[[3,[[2,[[0,[10,11,12]]]]]]]],[[],[[14,[[14,[2,13]],15]]]],[[5,1],[[18,[[17,[16]]]]]],[1,3],[[[9,[[0,[4,5,[7,[6]],[8,[6]]]],6]],10,1],[[3,[10]]]],[[],[[14,[[14,[13]],15]]]],[[5,1],[[18,[[17,[16]]]]]],[[]],[[]],[[]],[[]],[[]],[[],19],[[]],[[]],[[]],[[],20],[21,9],[[],14],[[],14],[[],22],[[]],[[]],[[]]],"c":[],"p":[[4,"Option"],[3,"BalanceWrapper"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"Reward"],[8,"Codec"],[8,"MaybeDisplay"],[8,"MaybeFromStr"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[8,"RewardApiServer"],[8,"RewardRuntimeApi"],[8,"RewardApiClient"]]},\
"reward_rpc_runtime_api":{"doc":"Runtime API definition for the Reward Module.","t":"ILLLLLL","n":["RewardApi","compute_escrow_reward","compute_farming_reward","compute_vault_reward","estimate_escrow_reward_rate","estimate_farming_reward","estimate_vault_reward_rate"],"q":[[0,"reward_rpc_runtime_api"]],"d":["","Calculate the number of escrow rewards accrued","Calculate the number of farming rewards accrued","Calculate the number of vault rewards accrued","Estimate staking reward rate for a one year period","Estimate farming rewards for remaining incentives","Estimate vault reward rate for a one year period"],"i":[0,6,6,6,6,6,6],"f":[0,[[],[[3,[[3,[1,2]],4]]]],[[],[[3,[[3,[1,2]],4]]]],[[],[[3,[[3,[1,2]],4]]]],[[5,5],[[3,[[3,[2]],4]]]],[[],[[3,[[3,[1,2]],4]]]],[[],[[3,[[3,[2]],4]]]]],"c":[],"p":[[3,"BalanceWrapper"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[4,"Option"],[8,"RewardApi"]]},\
"runtime_common":{"doc":"","t":"GDDGRRRRDDGRRLLLLLLLLLLLLLLLLLLLLFFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRIDRKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccountId","AndBarrier","ConsensusOnTimestampSet","CurrencyId","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","ToTreasury","Transactless","VaultId","WEEKS","YEARS","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","estimate_escrow_reward_rate","estimate_vault_reward_rate","evm","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","on_nonzero_unbalanced","on_timestamp_set","should_execute","should_execute","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","BaseFeeThreshold","GAS_PER_SECOND","GetTransactionAction","SetEvmChainId","WEIGHT_PER_GAS","action","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","ideal","init","init","into","into","into_mut","into_mut","into_ref","into_ref","lower","on_runtime_upgrade","precompiles","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upper","vzip","vzip","InterBtcPrecompiles","borrow","borrow_mut","deref","deref_mut","drop","execute","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","is_precompile","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","used_addresses","vzip"],"q":[[0,"runtime_common"],[100,"runtime_common::evm"],[151,"runtime_common::evm::precompiles"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the ideal block fullness to 50%. If the block weight …","Current approximation of the gas/s consumption (Moonbeam)","Get the “action” (call or create) of an Ethereum …","Set the EVM chain ID based on the parachain ID","Approximate ratio of the amount of Weight per Gas …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,32,33,30,31,32,33,30,31,32,33,30,31,32,33,30,31,32,33,0,0,0,30,31,32,33,30,30,31,31,32,32,33,33,30,30,31,31,32,32,33,33,30,31,32,33,30,31,32,33,30,31,32,33,30,31,32,33,32,33,30,31,30,31,32,33,30,31,32,33,30,31,32,33,30,31,32,33,30,31,32,33,30,31,32,33,0,0,0,0,0,34,35,36,35,36,35,36,35,36,35,36,35,36,35,35,36,36,35,35,36,36,35,35,36,35,36,35,36,35,36,35,36,0,35,36,35,36,35,36,35,36,35,36,35,35,36,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[[5,[[0,[2,3,4]]]],[7,[6]],[7,[8]]],[[11,[9,10]]]],[[[14,[[0,[12,2,13,4]]]]],[[11,[9,10]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[[]],[[16,17,18],[[11,[19]]]],[[16,17,18],[[11,[19]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],21],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],17],0,[[],11],[[],11],[[],11],[[],11],[[],20],[[],20],[[]],[[]],[[]],[[]],[[],22],[[]],[[]],0,[[]],[[]],[1],[1],[1],[[[24,[23]],25],[[7,[26]]]],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[]],[[]],[[[24,[23]],27,28],29],[[],24],[[],11],[[],11],[[],20],[[]],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[8,"Config"],[8,"Config"],[8,"Config"],[6,"AccountId"],[6,"Balance"],[4,"Option"],[6,"BlockNumber"],[6,"UnsignedFixedPoint"],[4,"DispatchError"],[4,"Result"],[8,"Config"],[8,"Config"],[6,"VaultId"],[8,"TryDrop"],[3,"MultiLocation"],[3,"Weight"],[3,"Properties"],[4,"ProcessMessageError"],[3,"TypeId"],[4,"TransactionAction"],[3,"Permill"],[8,"Config"],[3,"InterBtcPrecompiles"],[8,"PrecompileHandle"],[6,"PrecompileResult"],[3,"H160"],[15,"u64"],[4,"IsPrecompileResult"],[3,"AndBarrier"],[3,"Transactless"],[3,"ToTreasury"],[3,"ConsensusOnTimestampSet"],[8,"GetTransactionAction"],[3,"BaseFeeThreshold"],[3,"SetEvmChainId"]]},\
"security":{"doc":"Security Module","t":"IKKANGEINEEGGGDQNQLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["WeightInfo","activate_counter","on_initialize","pallet","Activated","ActiveBlockCount","Call","Config","Deactivated","Error","Event","IsDeactivated","Module","Nonce","Pallet","RuntimeEvent","UpdateActiveBlock","WeightInfo","__clone_box","__clone_box","__clone_box","activate_counter","activate_counter","active_block_number","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_secure_id","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","new_call_variant_activate_counter","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","parachain_block_expired","set_active_block_number","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","is_active","block_number","activate_counter","ActiveBlockCount","IsDeactivated","Nonce","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"security"],[4,"security::pallet"],[200,"security::pallet::Call"],[201,"security::pallet::Event"],[202,"security::pallet::dispatchables"],[203,"security::pallet::storage_types"]],"d":["Weight functions needed for security.","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","Like frame_system::block_number, but this one only …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Storage type is <code>StorageValue</code> with value type <code>bool</code>.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Integer increment-only counter, used to prevent collisions …","The <code>Pallet</code> struct, the main type that implements traits …","The overarching event type.","","Weight information for the extrinsics in this module.","","","","Activate or deactivate active block counting.","See <code>Pallet::activate_counter</code>.","An auto-generated getter for <code>ActiveBlockCount</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Generates a 256-bit unique hash from an <code>AccountId</code> and the …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a call with the variant <code>activate_counter</code>.","","","","","","","","","","for testing purposes only!","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Activate or deactivate active block counting.","Like frame_system::block_number, but this one only …","Warning: Doc-Only","Integer increment-only counter, used to prevent collisions …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,38,38,0,11,0,0,0,11,0,0,0,0,0,0,3,11,3,11,12,13,12,13,12,11,19,13,11,19,13,11,19,13,11,19,12,13,11,19,12,13,11,12,13,11,12,13,12,12,12,11,19,13,11,19,13,11,19,13,11,19,13,11,19,12,13,11,19,12,13,13,0,11,19,12,13,11,13,11,12,13,11,11,12,12,13,13,11,19,12,13,11,19,12,13,11,11,19,19,12,12,13,13,11,11,19,19,12,12,13,13,13,13,13,13,13,12,11,19,13,12,12,11,19,12,13,12,11,19,12,13,11,19,12,13,11,19,12,13,12,12,13,12,12,12,12,12,12,12,12,12,12,11,13,12,0,11,19,13,11,12,13,11,19,12,13,11,19,12,13,11,19,13,11,19,13,11,19,13,11,19,12,13,11,19,13,11,19,12,13,11,19,12,13,11,19,12,13,12,19,39,40,0,0,0,0,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,41,42,42,43,43,41,41,42,42,43,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43],"f":[0,[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[2],[[[4,[3]],5],6],0,[[],[[7,[3]]]],[[]],[[]],[[]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[3]]],[[11,[3]]]],[12,12],[[[13,[3]]],[[13,[3]]]],[[]],[[]],[[]],[[],14],[[],15],[[]],[16,[[18,[[11,[3]],17]]]],[16,[[18,[19,17]]]],[16,[[18,[[13,[3]],17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[20,[[18,[17]]]],[[20,16],[[18,[17]]]],[[20,16],[[18,[17]]]],[[20,16],[[18,[17]]]],[14],[14],[14],[14],[14],[14],[14],[14],[[[13,[3]]],21],0,[14],[14],[14],[14],[[[11,[3]],[0,[22,23]]]],[[[13,[3]],[0,[22,23]]]],[[[11,[3]],[11,[3]]],5],[[12,12],5],[[[13,[3]],[13,[3]]],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[11,[3]],24],25],[[[19,[3]],24],25],[[12,24],25],[[[13,[3]],24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[3]]],8],[[]],[[[13,[3]]],26],[[]],[[[13,[3]]],27],[[],28],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],14],[[],[[10,[29]]]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[5,[[13,[3]]]],[[[7,[3]]]],[[],30],[[[7,[3]]]],[[]],[[[7,[3]],1],1],[[[7,[3]]],1],[[[7,[3]]],1],[[],1],[[[7,[3]],[7,[3]]],[[18,[5,31]]]],[[[7,[3]]]],[[[11,[3]]],14],[[[13,[3]]],14],[[],[[10,[32]]]],0,[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],33],[[],33],[[],33],[[],33],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[35]]]],[1,[[37,[36]]]],0,0,[5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[12],"p":[[3,"Weight"],[3,"Private"],[8,"Config"],[6,"OriginFor"],[15,"bool"],[6,"DispatchResult"],[6,"BlockNumberFor"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"Event"],[3,"Pallet"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[4,"Error"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"H256"],[3,"PalletInfoData"],[3,"StorageVersion"],[4,"DispatchError"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"activate_counter"],[13,"UpdateActiveBlock"],[3,"Nonce"],[3,"ActiveBlockCount"],[3,"IsDeactivated"]]},\
"staking":{"doc":"Staking Module","t":"QGGGIIKKKKKKAKAKLKLKKFEIQNNEENQNNGGDGGQQQGGNGGGGNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CurrencyId","DefaultVaultCurrencyPair","DefaultVaultId","NominatorId","RewardsApi","StakingApi","compute_reward","deposit_stake","distribute_reward","force_refund","get_stake","get_total_stake","migration","nonce","pallet","reward_currencies_len","set_stake","slash_stake","withdraw_all_stake","withdraw_reward","withdraw_stake","fix_broken_state","Call","Config","CurrencyId","DepositStake","DistributeReward","Error","Event","ForceRefund","GetNativeCurrencyId","IncreaseNonce","InsufficientFunds","Module","Nonce","Pallet","RewardPerToken","RewardTally","RuntimeEvent","SignedFixedPoint","SignedInner","SlashPerToken","SlashTally","SlashZeroTotalStake","Stake","TotalCurrentStake","TotalRewards","TotalStake","TryIntoIntError","WithdrawReward","WithdrawStake","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compute_precise_stake_at_index","compute_reward","compute_reward","compute_stake","compute_stake_at_index","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit_stake","deposit_stake","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","distribute_reward","distribute_reward","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","force_refund","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_stake","get_total_rewards","get_total_stake","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","module_name","name","nonce","nonce","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","reward_currencies_len","reward_per_token","size_hint","size_hint","slash_per_token","slash_stake","slash_stake","slash_tally","stake","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_current_stake_at_index","total_rewards","total_stake_at_index","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","withdraw_all_stake","withdraw_reward","withdraw_stake","amount","amount","amount","amount","currency_id","currency_id","new_nonce","nominator_id","nominator_id","nominator_id","nonce","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","Nonce","RewardPerToken","RewardTally","SlashPerToken","SlashTally","Stake","TotalCurrentStake","TotalRewards","TotalStake","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"staking"],[21,"staking::migration"],[22,"staking::pallet"],[253,"staking::pallet::Event"],[270,"staking::pallet::storage_types"]],"d":["","","","","","","Compute the expected reward for the <code>stake_id</code>.","Deposit stake for an account.","Distribute the <code>amount</code> to all participants OR error if zero …","Force refund the entire nomination to <code>pool_id</code>.","Return the stake associated with the <code>stake_id</code>.","Return the stake associated with the <code>pool_id</code>.","","Get the newest nonce for the staking pool.","The <code>pallet</code> module in each FRAME pallet hosts the most …","","Set the stake to <code>amount</code> for <code>stake_id</code> regardless of its …","Slash an <code>amount</code> of stake from the <code>pool_id</code>.","Withdraw all stake for an account.","Withdraw all rewards from the <code>stake_id</code>.","Withdraw stake for an account.","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The currency ID type.","","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","","","","Balance not sufficient to withdraw stake.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The nonce of the current staking pool, used in force …","The <code>Pallet</code> struct, the main type that implements traits …","Used to compute the rewards for a participant’s stake.","Accounts for previous changes in stake size.","The overarching event type.","Signed fixed point type.","The <code>Inner</code> type of the <code>SignedFixedPoint</code>.","Used to compute the amount to slash from a participant’s …","Accounts for previous changes in stake size.","Cannot slash zero total stake.","The stake of a participant in this reward pool.","The total stake - this will increase on deposit and …","The total unclaimed rewards distributed to this reward …","The total stake - this will increase on deposit and …","Unable to convert value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delegates to <code>compute_reward_at_index</code> with the current …","Delegates to <code>compute_stake_at_index</code> with the current nonce.","Compute the stake in <code>vault_id</code> owned by <code>nominator_id</code>.","","","","","","","","","","","","","","","","","Deposit an <code>amount</code> of stake to the <code>vault_id</code> for the …","","","","","","","","","","Auto-generated docs-only module listing all defined …","Distribute the <code>reward</code> to all participants.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the newest nonce for the staking pool.","","","","","","","","","","An auto-generated getter for <code>RewardPerToken</code>.","","","Get the vault’s <code>slash_per_token</code> for the staking pool.","Slash an <code>amount</code> of stake from the <code>vault_id</code>.","","Get the nominator’s <code>slash_tally</code> for the staking pool.","Get the stake associated with a vault / nominator.","","Auto-generated docs-only module listing all (public and …","","","","","","","An auto-generated getter for <code>TotalCurrentStake</code>.","An auto-generated getter for <code>TotalRewards</code>.","An auto-generated getter for <code>TotalStake</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The nonce of the current staking pool, used in force …","Used to compute the rewards for a participant’s stake.","Accounts for previous changes in stake size.","Used to compute the amount to slash from a participant’s …","Accounts for previous changes in stake size.","The stake of a participant in this reward pool.","The total stake - this will increase on deposit and …","The total unclaimed rewards distributed to this reward …","The total stake - this will increase on deposit and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[42,0,0,0,0,0,42,42,42,43,42,42,0,43,0,42,42,43,42,42,42,0,0,0,9,10,10,0,0,10,9,10,22,0,0,0,0,0,9,9,9,0,0,22,0,0,0,0,22,10,10,10,11,12,10,22,12,10,22,12,10,22,12,10,22,11,12,10,22,11,12,10,11,12,10,11,12,11,11,11,11,11,11,11,11,10,22,12,10,22,12,10,22,12,10,22,12,11,11,10,22,11,12,10,22,11,12,12,0,11,11,10,22,11,12,10,22,10,11,12,10,10,11,11,12,12,10,22,11,12,11,10,22,11,12,10,10,22,22,11,11,12,12,10,10,22,22,11,11,12,12,12,12,12,12,12,11,11,11,10,22,12,11,11,10,22,11,12,11,10,22,11,12,10,22,11,12,10,22,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,22,11,11,11,11,11,11,0,10,22,12,10,11,12,11,11,11,10,22,11,12,10,22,11,12,10,22,12,10,22,12,10,22,12,10,22,11,12,10,22,12,10,22,11,12,10,22,11,12,10,22,11,12,11,22,11,11,11,44,45,46,47,45,47,48,44,46,47,47,44,45,46,47,49,48,0,0,0,0,0,0,0,0,0,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58,50,51,52,53,54,55,56,57,58],"f":[0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],0,[[]],0,[[],3],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[9]]]],[11,11],[[[12,[9]]],[[12,[9]]]],[[]],[[]],[[]],[[[13,[9]]],[[2,[1]]]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[[13,[9]]],[[2,[1]]]],[[[13,[9]]],[[2,[1]]]],[[[13,[9]]],[[2,[1]]]],[[],18],[[],19],[[]],[20,[[2,[[10,[9]],21]]]],[20,[[2,[22,21]]]],[20,[[2,[[12,[9]],21]]]],[[],[[2,[21]]]],[[],[[2,[21]]]],[[],[[2,[21]]]],[3,[[2,[21]]]],[3,[[2,[21]]]],[3,[[2,[21]]]],[[3,20],[[2,[21]]]],[[3,20],[[2,[21]]]],[[3,20],[[2,[21]]]],[[[0,[14,15,16,17]]],4],[[[13,[9]]],4],[18],[18],[18],[18],[18],[18],[18],[18],[[[12,[9]]],23],0,[[[13,[9]]],[[2,[1]]]],[[[0,[14,15,16,17]]],4],[18],[18],[18],[18],[[[10,[9]],[0,[24,25]]]],[[22,[0,[24,25]]]],[[[10,[9]],[10,[9]]],26],[[11,11],26],[[[12,[9]],[12,[9]]],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[10,[9]],27],28],[[[22,[9]],27],28],[[11,27],28],[[[12,[9]],27],28],[[[13,[9]]],[[2,[14,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[9]]],6],[[]],[[[12,[9]]],29],[[]],[[[12,[9]]],30],[[],[[2,[[0,[14,15,16,17]],1]]]],[[]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],18],[[],[[8,[31]]]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[[13,[9]]]],[[[13,[9]]]],[[[32,[9]]]],[[],33],[[[32,[9]]]],[[]],[[[32,[9]],34],34],[[[32,[9]]],34],[[],34],[[],3],[[35,35]],[[[10,[9]]],18],[22,18],[[[13,[9]]]],[[[13,[9]]],4],[[[13,[9]],14],4],[[[13,[9]]]],[[[13,[9]]]],[[],[[8,[36]]]],0,[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[[]],[[]],[[35,[35,[[13,[9]]]]]],[[35,35]],[[35,[35,[[13,[9]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],37],[[],37],[[],37],[[],37],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[39]]]],[34,[[41,[40]]]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[],[[2,[[0,[14,15,16,17]],1]]]],[[[0,[14,15,16,17]]],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[33],"p":[[4,"DispatchError"],[4,"Result"],[15,"u32"],[6,"DispatchResult"],[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"],[6,"DefaultVaultId"],[8,"BalanceToFixedPoint"],[8,"Saturating"],[8,"PartialOrd"],[8,"Copy"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[8,"EncodeLike"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"RewardsApi"],[8,"StakingApi"],[13,"DepositStake"],[13,"DistributeReward"],[13,"WithdrawStake"],[13,"WithdrawReward"],[13,"IncreaseNonce"],[13,"ForceRefund"],[3,"TotalStake"],[3,"TotalCurrentStake"],[3,"TotalRewards"],[3,"RewardPerToken"],[3,"SlashPerToken"],[3,"Stake"],[3,"RewardTally"],[3,"SlashTally"],[3,"Nonce"]]},\
"supply":{"doc":"Supply Module","t":"QIIKKAKEIQEEDGNQGGQDQGQQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Currency","OnInflation","WeightInfo","on_inflation","on_initialize","pallet","set_start_height_and_inflation","Call","Config","Currency","Error","Event","GenesisConfig","Inflation","Inflation","InflationPeriod","LastEmission","Module","OnInflation","Pallet","RuntimeEvent","StartHeight","SupplyPalletId","UnsignedFixedPoint","WeightInfo","__clone_box","__clone_box","__clone_box","account_id","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","inflation","inflation","infos","init","init","init","init","init","initial_supply","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","last_emission","module_name","name","new_call_variant_set_start_height_and_inflation","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","serialize","set_start_height_and_inflation","set_start_height_and_inflation","size_hint","size_hint","start_height","start_height","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","inflation","start_height","total_inflation","set_start_height_and_inflation","Inflation","LastEmission","StartHeight","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"supply"],[7,"supply::pallet"],[235,"supply::pallet::Call"],[237,"supply::pallet::Event"],[238,"supply::pallet::dispatchables"],[239,"supply::pallet::storage_types"]],"d":["","","Weight functions needed for supply.","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The native currency for emission.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Can be used to configure the genesis state of this pallet.","Storage type is <code>StorageValue</code> with value type …","","The period between inflation updates.","Storage type is <code>StorageValue</code> with value type …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Handler for when the total supply has inflated.","The <code>Pallet</code> struct, the main type that implements traits …","The overarching event type.","Storage type is <code>StorageValue</code> with value type …","The supply module id, used for deriving its sovereign …","Unsigned fixed point type.","Weight information for extrinsics in this pallet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","An auto-generated getter for <code>Inflation</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An auto-generated getter for <code>LastEmission</code>.","","","Create a call with the variant …","","","","","","","","","","","See <code>Pallet::set_start_height_and_inflation</code>.","","","An auto-generated getter for <code>StartHeight</code>.","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[41,0,0,41,42,0,42,0,0,3,0,0,0,0,11,3,0,0,3,0,3,0,3,3,3,11,12,13,12,4,11,18,13,11,18,13,11,18,13,11,18,4,12,13,11,18,4,12,13,4,11,12,13,11,12,13,12,12,12,11,18,13,11,18,13,11,18,13,11,18,13,4,11,18,4,12,13,11,18,4,12,13,4,13,0,11,18,4,12,13,11,13,11,12,13,11,11,12,12,13,13,11,18,12,13,11,18,4,12,13,11,11,18,18,4,4,12,12,13,13,11,11,18,18,4,4,12,12,13,13,13,13,13,13,13,11,18,13,12,12,4,12,11,18,4,12,13,4,12,11,18,4,12,13,11,18,4,12,13,11,18,4,12,13,12,12,12,13,12,12,12,12,12,12,12,12,4,12,13,11,13,12,4,12,0,11,18,13,11,12,13,11,18,4,12,13,11,18,4,12,13,11,18,13,11,18,13,11,18,13,11,18,4,12,13,11,18,13,11,18,4,12,13,11,18,4,12,13,11,18,4,12,13,12,18,43,43,44,0,0,0,0,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,45,46,46,47,47,45,45,46,46,47,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47],"f":[0,0,0,[[]],[[],1],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[2],[[]],[[[4,[3]],5],[[7,[6]]]],[[]],[[]],[[]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]]],[[[11,[3]]],[[11,[3]]]],[12,12],[[[13,[3]]],[[13,[3]]]],[[]],[[]],[[]],[[],14],[[],15],[[]],[16,[[7,[[11,[3]],17]]]],[16,[[7,[18,17]]]],[16,[[7,[[13,[3]],17]]]],[[],[[7,[17]]]],[[],[[7,[17]]]],[[],[[7,[17]]]],[19,[[7,[17]]]],[19,[[7,[17]]]],[19,[[7,[17]]]],[[19,16],[[7,[17]]]],[[19,16],[[7,[17]]]],[[19,16],[[7,[17]]]],[[],[[4,[3]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[20,[[7,[[4,[3]]]]]],[[[13,[3]]],21],0,[14],[14],[14],[14],[14],[[[11,[3]],[0,[22,23]]]],[[[13,[3]],[0,[22,23]]]],[[[11,[3]],[11,[3]]],24],[[12,12],24],[[[13,[3]],[13,[3]]],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[11,[3]],25],26],[[[18,[3]],25],26],[[12,25],26],[[[13,[3]],25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[3]]],8],[[]],[[[13,[3]]],27],[[]],[[[13,[3]]],28],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],14],[[]],0,[[],[[10,[29]]]],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[[30,[3]]],[[13,[3]]]],[[[30,[3]]]],[[],31],[[[30,[3]]]],[[]],[[[30,[3]],1],1],[[[30,[3]]],1],[[[30,[3]]],1],[[],1],[[[4,[3]],32],7],[[[33,[3]],[30,[3]]],21],0,[[[11,[3]]],14],[[[13,[3]]],14],[[],[[34,[[30,[3]]]]]],0,[[],[[10,[35]]]],0,[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[38]]]],[1,[[40,[39]]]],0,0,0,[[[30,[3]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[17],"p":[[3,"Weight"],[3,"Private"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"Event"],[3,"Pallet"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Error"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[8,"Serializer"],[6,"OriginFor"],[4,"Option"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"OnInflation"],[8,"WeightInfo"],[13,"set_start_height_and_inflation"],[13,"Inflation"],[3,"StartHeight"],[3,"LastEmission"],[3,"Inflation"]]},\
"traits":{"doc":"","t":"IIIIKKKKAKIIDDLLLLLLLLLLMLLMLLLLMMLLLLLLLLLLLLLLKKKKKKLLLLMLLLLLLLLLLLLMKKKLLLLLLLLLLMKKMLLMLLLLMMLLLLLLLLLLLLLLLLKLLMLL","n":["ConvertToBigUint","NominationApi","OnExchangeRateChange","OracleApi","convert","deposit_vault_collateral","ensure_opted_in_to_nomination","get_big_uint","loans","on_exchange_rate_change","LoansApi","LoansMarketDataProvider","MarketInfo","MarketStatus","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_index","borrow_mut","borrow_mut","borrow_rate","clone","clone","clone_into","clone_into","close_factor","collateral_factor","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","do_borrow","do_deposit_collateral","do_mint","do_redeem","do_repay_borrow","do_withdraw_collateral","drop","drop","encode_to","encode_to","exchange_rate","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","full_rate","get_full_interest_rate","get_market_info","get_market_status","identity","identity","init","init","into","into","into_mut","into_mut","into_ref","into_ref","liquidation_threshold","recompute_collateral_amount","recompute_underlying_amount","reserve_factor","size_hint","size_hint","supply_rate","to_keyed_vec","to_keyed_vec","to_owned","to_owned","total_borrows","total_reserves","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","underlying_id","unique_saturated_into","unique_saturated_into","utilization","vzip","vzip"],"q":[[0,"traits"],[10,"traits::loans"]],"d":["","","","","","","","","","","","","MarketInfo contains some static attrs as a subset of …","MarketStatus contains some dynamic calculated attrs of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,27,28,28,29,0,30,0,0,0,0,8,10,8,10,8,10,8,10,8,10,10,8,10,10,8,10,8,10,8,8,8,10,8,10,8,10,8,10,8,10,8,10,8,10,31,31,31,31,31,31,8,10,8,10,10,8,10,8,10,8,8,10,10,8,8,10,10,8,32,32,32,8,10,8,10,8,10,8,10,8,10,8,31,31,8,8,10,10,8,10,8,10,10,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,31,8,10,10,8,10],"f":[0,0,0,0,[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],3],0,[[]],0,0,0,0,[4],[4],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[8,8],[[[10,[9]]],[[10,[9]]]],[[]],[[]],0,0,[11,[[2,[8,12]]]],[11,[[2,[[10,[13]],12]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[14,[[2,[12]]]],[14,[[2,[12]]]],[[14,11],[[2,[12]]]],[[14,11],[[2,[12]]]],[[],8],[[],[[10,[15]]]],[16],[16],[16],[16],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[[],[[2,[1]]]],[16],[16],[[8,[0,[17,18]]]],[[[10,[19]],[0,[17,18]]]],0,[[8,20],21],[[[10,[22]],20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[24,[23]]]],[[],[[2,[8,1]]]],[[],[[2,[10,1]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[2,[1]]]],[[],[[2,[1]]]],0,[8,16],[[[10,[19]]],16],0,[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],25],[[],25],[[],26],[[],26],[[]],[[]],[[],[[2,[1]]]],[[]],[[]],0,[[]],[[]]],"c":[],"p":[[4,"DispatchError"],[4,"Result"],[3,"BigUint"],[3,"Private"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"MarketInfo"],[8,"Clone"],[3,"MarketStatus"],[8,"Input"],[3,"Error"],[8,"Decode"],[15,"u32"],[8,"Default"],[15,"usize"],[8,"Output"],[8,"Sized"],[8,"Encode"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[6,"Rate"],[4,"Option"],[3,"TypeId"],[3,"Type"],[8,"OracleApi"],[8,"NominationApi"],[8,"ConvertToBigUint"],[8,"OnExchangeRateChange"],[8,"LoansApi"],[8,"LoansMarketDataProvider"]]},\
"tx_pause":{"doc":"Transaction Pause Pallet","t":"GGGAAEIEEDNNNQGNDQQGQQNNQQQLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNMLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLMMMMFFDLLLLLLLLLLLLLLLLLLLLDILLLLLLLLLLLLLLKLLLLLLKLL","n":["CallNameOf","FullNameOf","PalletNameOf","pallet","weights","Call","Config","Error","Event","GenesisConfig","IsPaused","IsUnpausable","IsUnpaused","MaxNameLen","Module","NotFound","Pallet","PauseOrigin","PauseTooLongNames","PausedCalls","RuntimeCall","RuntimeEvent","SomethingPaused","SomethingUnpaused","UnpauseOrigin","WeightInfo","WhitelistCallNames","__clone_box","__clone_box","__clone_box","_phantom","assimilate_storage","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","contains","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","ensure_can_pause","ensure_can_unpause","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_paused","is_paused_unbound","module_name","name","new_call_variant_pause","new_call_variant_unpause","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","pause","pause","paused","paused_calls","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unpause","unpause","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","full_name","full_name","full_name","full_name","pause","unpause","PausedCalls","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","pause","pause","try_from","try_into","type_id","unchecked_into","unique_saturated_into","unpause","unpause","vzip"],"q":[[0,"tx_pause"],[5,"tx_pause::pallet"],[243,"tx_pause::pallet::Call"],[245,"tx_pause::pallet::Event"],[247,"tx_pause::pallet::dispatchables"],[249,"tx_pause::pallet::storage_types"],[270,"tx_pause::weights"]],"d":["The stringy name of a call (within a pallet) from …","A sully specified pallet (<code>PalletNameOf</code>) and optional call (…","The stringy name of a pallet from <code>GetCallMetadata</code> for …","The <code>pallet</code> module in each FRAME pallet hosts the most …","Autogenerated weights for tx_pause","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Configure the initial state of this pallet in the genesis …","The call is (already or still) paused.","The call is listed as safe and cannot be paused.","The call is (already or still) unpaused.","Maximum length for pallet and call SCALE encoded string …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The <code>Pallet</code> struct, the main type that implements traits …","The only origin that can pause calls.","Specifies if functions and pallets with too long names …","The set of calls that are explicitly paused.","The overarching call type.","The overarching event type.","This pallet, or a specific call is now paused. …","This pallet, or a specific call is now unpaused. …","The only origin that can un-pause calls.","","Contains all calls that cannot be paused.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return whether the call is allowed to be dispatched.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","Ensure that this pallet or call can be paused.","Ensure that this call can be un-paused.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Return whether this pallet or call is paused","Return whether this pallet or call is paused.","","","Create a call with the variant <code>pause</code>.","Create a call with the variant <code>unpause</code>.","","","","","","","","Pause a call.","See <code>Pallet::pause</code>.","The initially paused calls.","An auto-generated getter for <code>PausedCalls</code>.","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Un-pause a call.","See <code>Pallet::unpause</code>.","","","","","","","","","","","","Pause a call.","Un-pause a call.","The set of calls that are explicitly paused.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Weights for tx_pause using the Substrate node and …","Weight functions needed for tx_pause.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Storage: TxPause PausedCalls (r:2 w:1) Proof: TxPause …","","","","","","","Storage: TxPause PausedCalls (r:2 w:1) Proof: TxPause …",""],"i":[0,0,0,0,0,0,0,0,0,0,17,17,17,2,0,17,0,2,2,0,2,2,11,11,2,2,2,10,11,12,3,3,17,11,12,17,11,12,17,11,12,10,17,11,3,12,10,17,11,3,12,3,10,11,12,10,11,12,10,10,10,10,17,11,12,17,11,12,17,11,12,17,11,12,3,10,17,11,3,12,10,17,11,3,12,3,12,0,10,17,11,3,12,17,11,12,10,10,10,11,12,10,10,11,11,12,12,10,10,17,11,12,10,17,11,3,12,10,10,17,17,11,11,3,3,12,12,10,10,17,17,11,11,3,3,12,12,12,12,12,12,12,17,11,12,10,10,10,17,11,3,12,10,10,17,11,3,12,10,17,11,3,12,10,17,11,3,12,10,10,10,10,12,12,10,10,10,10,10,10,10,10,12,3,10,3,17,11,12,10,0,17,11,12,10,11,12,10,17,11,3,12,10,17,11,3,12,17,11,12,17,11,12,17,11,12,10,17,11,3,12,17,11,12,10,17,11,3,12,10,17,11,3,12,10,12,10,17,11,3,12,10,17,44,45,46,47,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,49,49,49,49,49,49,50,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[[3,[2]],4],[[6,[5]]]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]]],[10,10],[[[11,[2]]],[[11,[2]]]],[[[12,[2]]],[[12,[2]]]],[[]],[[]],[[]],[[],13],[[],14],[[],15],[[]],[16,[[6,[17,18]]]],[16,[[6,[[11,[2]],18]]]],[16,[[6,[[12,[2]],18]]]],[[],[[6,[18]]]],[[],[[6,[18]]]],[[],[[6,[18]]]],[19,[[6,[18]]]],[19,[[6,[18]]]],[19,[[6,[18]]]],[[19,16],[[6,[18]]]],[[19,16],[[6,[18]]]],[[19,16],[[6,[18]]]],[[],[[3,[2]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[20,[[6,[[3,[2]]]]]],[[[12,[2]]],21],0,[14],[14],[14],[14],[14],[[17,[0,[22,23]]]],[[[11,[2]],[0,[22,23]]]],[[[12,[2]],[0,[22,23]]]],[[[24,[2]]],[[6,[[17,[2]]]]]],[[[24,[2]]],[[6,[[17,[2]]]]]],[[10,10],13],[[[11,[2]],[11,[2]]],13],[[[12,[2]],[12,[2]]],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[10,25],26],[[[17,[2]],25],26],[[[11,[2]],25],26],[[[12,[2]],25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[2]]],7],[[]],[[[12,[2]]],27],[[]],[[[12,[2]]],28],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],14],[[],[[9,[29]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[2]]],13],[[[9,[7]],[9,[7]]],13],[[],27],[[],27],[[[24,[2]]],[[12,[2]]]],[[[24,[2]]],[[12,[2]]]],[[[30,[2]]]],[[],31],[[[30,[2]]]],[[]],[[[30,[2]],32],32],[[[30,[2]]],32],[[],32],[[[33,[2]],[24,[2]]],34],0,0,[[[35,[[24,[2]]]]],36],[[[3,[2]],37],6],[17,14],[[[11,[2]]],14],[[[12,[2]]],14],[[],[[9,[38]]]],0,[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[2]],[24,[2]]],34],0,[[]],[[]],[[]],[[]],[[]],[[],[[9,[41]]]],[32,[[43,[42]]]],0,0,0,0,[[[24,[2]]]],[[[24,[2]]]],0,[[]],[[]],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[],14],[[]],[[]],[[]],[[],6],[[],6],[[],39],[[]],[[]],[[]],0,0,[[]],[[]],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[],14],[[]],[[]],[[]],[[],32],[[],32],[[],6],[[],6],[[],39],[[]],[[]],[[],32],[[],32],[[]]],"c":[14],"p":[[3,"Private"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Event"],[4,"Call"],[15,"bool"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[4,"Error"],[3,"Error"],[15,"u32"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[6,"FullNameOf"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[6,"OriginFor"],[6,"DispatchResult"],[8,"EncodeLike"],[4,"Option"],[8,"Serializer"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[13,"pause"],[13,"unpause"],[13,"SomethingPaused"],[13,"SomethingUnpaused"],[3,"PausedCalls"],[3,"SubstrateWeight"],[8,"WeightInfo"]]},\
"vault_registry":{"doc":"Vault Registry Module","t":"NNDNDNEGGNNNNDDRNDDEILLLLLLKMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLALLLKKKMKLMLLLLKKKKKKLLLLLLMLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENINNNNNNEENDQNNNNNNNNNNNNGNNNNNDQNNNNNNNNQNNNNNNNNNNNNNNNNQLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLMLMLNLLLLNLNLLNLLMLLNLNLNLNLNLNLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEDNGEGGGGNNNNNNNNDDDGINNNNNNNNDDDEELLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLMF","n":["Active","ActiveReplaceCollateral","Amount","AvailableReplaceCollateral","BtcPublicKey","Collateral","CurrencySource","DefaultVault","DefaultVaultId","FreeBalance","Liquidated","LiquidatedCollateral","LiquidationVault","PoolManager","SystemVault","UNSIGNED_TXS_PRIORITY","UserGriefing","Vault","VaultId","VaultStatus","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accept_new_issues","account_id","active_replace_collateral","add","add","add_assign","amount","as_bytes","banned_until","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_from","checked_accrue","checked_add","checked_div","checked_mul","checked_rounded_mul","checked_sub","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collateral","collateral_currency","convert_to","currencies","currency","currency_pair","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","defensive_max","defensive_max","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","deposit_collateral","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","div","drop","drop","drop","drop","drop","drop","drop","drop","dummy","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_pair","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signed_fixed_point","from_unsigned_fixed_point","ge","get_hash","gt","hash","id","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_zero","issued_tokens","issued_tokens","kick_nominators","le","liquidated_collateral","lock_on","lt","map","max","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","min","mint_to","mul","mul","mul_ratio_floor","ne","new","new","new_deposit_public_key","on_exchange_rate_change","on_vault_settings_change","pallet","partial_cmp","partial_cmp","ratio","recover_vault_id","register_public_key","register_vault","replace_collateral","report_undercollateralized_vault","saturating_sub","secure_collateral_threshold","serialize","serialize","serialize","set_currency","set_custom_secure_threshold","set_liquidation_collateral_threshold","set_minimum_collateral","set_premium_redeem_threshold","set_secure_collateral_threshold","set_system_collateral_ceiling","size_hint","size_hint","size_hint","size_hint","size_hint","slash_collateral","status","sub","sub","sub_assign","to_be_issued_tokens","to_be_issued_tokens","to_be_redeemed_tokens","to_be_redeemed_tokens","to_be_replaced_tokens","to_hash","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_p2pkh_script_sig","to_p2sh_script_sig","to_signed_fixed_point","to_unsigned_fixed_point","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","types","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlock_on","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_amount","withdraw_collateral","wrapped_currency","zero","BanVault","Call","CeilingNotSet","Config","CurrencyCeilingExceeded","DecreaseLockedCollateral","DecreaseToBeIssuedTokens","DecreaseToBeRedeemedTokens","DecreaseToBeReplacedTokens","DecreaseTokens","Error","Event","ExceedingVaultLimit","GenesisConfig","GetGriefingCollateralCurrencyId","IncreaseLockedCollateral","IncreaseToBeIssuedTokens","IncreaseToBeRedeemedTokens","IncreaseToBeReplacedTokens","InsufficientCollateral","InsufficientTokensCommitted","InsufficientVaultCollateralAmount","InvalidCurrency","InvalidPublicKey","IssueTokens","LiquidateVault","MinimumCollateralNotSet","Module","NoBitcoinPublicKey","NoTokensIssued","NoVaultUnderThePremiumRedeemThreshold","NoVaultWithSufficientCollateral","NoVaultWithSufficientTokens","Pallet","PalletId","PublicKeyAlreadyRegistered","RedeemTokens","RedeemTokensLiquidatedVault","RedeemTokensLiquidation","RedeemTokensPremium","RegisterAddress","RegisterVault","ReplaceTokens","RuntimeEvent","SetAcceptNewIssues","SetCustomSecureThreshold","SetLiquidationCollateralThreshold","SetPremiumRedeemThreshold","SetSecureCollateralThreshold","ThresholdNotAboveGlobalThreshold","ThresholdNotSet","TryIntoIntError","UpdatePublicKey","VaultAlreadyRegistered","VaultBanned","VaultLiquidated","VaultNotAcceptingIssueRequests","VaultNotBelowLiquidationThreshold","VaultNotFound","VaultNotRecoverable","WeightInfo","__clone_box","__clone_box","__clone_box","_register_vault","_set_liquidation_collateral_threshold","_set_minimum_collateral_vault","_set_premium_redeem_threshold","_set_secure_collateral_threshold","_set_system_collateral_ceiling","accept_new_issues","accept_new_issues","assimilate_storage","ban_vault","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","calculate_collateral","calculate_inclusion_fee","cancel_replace_tokens","clone","clone","clone","clone_into","clone_into","clone_into","collateral_integrity_check","compute_capacity","compute_collateral","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decrease_liquidated_collateral","decrease_to_be_issued_tokens","decrease_to_be_redeemed_tokens","decrease_to_be_replaced_tokens","decrease_tokens","decrease_total_backing_collateral","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","ensure_accepting_new_issues","ensure_not_banned","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","force_withdraw_collateral","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_active_vault_from_id","get_backing_collateral","get_bitcoin_public_key","get_call_index","get_call_indices","get_call_name","get_call_names","get_collateralization_from_vault","get_collateralization_from_vault_and_collateral","get_dispatch_info","get_free_collateral","get_free_redeemable_tokens","get_global_secure_threshold","get_issuable_tokens_from_vault","get_liquidated_collateral","get_liquidation_vault","get_premium_redeem_vaults","get_required_collateral_for_vault","get_required_collateral_for_wrapped","get_rich_liquidation_vault","get_to_be_issued_tokens_from_vault","get_total_user_vault_collateral","get_vault_from_id","get_vault_max_premium_redeem","get_vault_secure_threshold","get_vaults_by_account_id","get_vaults_with_issuable_tokens","get_vaults_with_redeemable_tokens","identity","identity","identity","index","infos","init","init","init","init","init","insert_vault","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_allowed_to_withdraw_collateral","is_collateral_below_vault_secure_threshold","is_vault_below_certain_threshold","is_vault_below_liquidation_threshold","is_vault_below_secure_threshold","is_vault_liquidated","issue_tokens","liquidate_vault","liquidation_collateral_threshold","liquidation_collateral_threshold","liquidation_vault_account_id","minimum_collateral_vault","minimum_collateral_vault","module_name","name","new_call_variant_accept_new_issues","new_call_variant_recover_vault_id","new_call_variant_register_public_key","new_call_variant_register_vault","new_call_variant_report_undercollateralized_vault","new_call_variant_set_custom_secure_threshold","new_call_variant_set_liquidation_collateral_threshold","new_call_variant_set_minimum_collateral","new_call_variant_set_premium_redeem_threshold","new_call_variant_set_secure_collateral_threshold","new_call_variant_set_system_collateral_ceiling","new_vault_deposit_address","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","on_runtime_upgrade","premium_redeem_threshold","premium_redeem_threshold","punishment_delay","punishment_delay","recover_vault_id","recover_vault_id","redeem_tokens","redeem_tokens_liquidation","register_deposit_address","register_public_key","register_public_key","register_vault","register_vault","replace_tokens","report_undercollateralized_vault","report_undercollateralized_vault","requestable_to_be_replaced_tokens","secure_collateral_threshold","secure_collateral_threshold","serialize","set_custom_secure_threshold","set_custom_secure_threshold","set_liquidation_collateral_threshold","set_liquidation_collateral_threshold","set_minimum_collateral","set_minimum_collateral","set_premium_redeem_threshold","set_premium_redeem_threshold","set_secure_collateral_threshold","set_secure_collateral_threshold","set_system_collateral_ceiling","set_system_collateral_ceiling","size_hint","size_hint","size_hint","storage_info","storage_types","storage_version","system_collateral_ceiling","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_user_vault_collateral_integrity_check","transfer_funds","transfer_funds_saturated","try_deposit_collateral","try_from","try_from","try_from","try_from","try_from","try_increase_to_be_issued_tokens","try_increase_to_be_redeemed_tokens","try_increase_to_be_replaced_tokens","try_increase_total_backing_collateral","try_into","try_into","try_into","try_into","try_into","try_set_vault_custom_secure_threshold","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_unsigned","vault_exists","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","will_be_below_premium_threshold","with_weight","withdraw_replace_request","accept_new_issues","ceiling","collateral","currency_id","currency_pair","currency_pair","currency_pair","currency_pair","currency_pair","currency_pair","currency_pair","currency_pair","custom_threshold","minimum","public_key","threshold","threshold","threshold","vault_id","accept_new_issues","account_id","additional_collateral","address","amount","backing_collateral","banned_until","burned_tokens","collateral","collateral","collateral","currency_pair","currency_pair","currency_pair","currency_pair","currency_pair","custom_threshold","decrease","decrease","decrease","decrease","delta","delta","increase","increase","increase","increase","issued_tokens","new_vault_id","old_vault_id","public_key","redeemed_amount","redeemed_amount","redeemer_id","replace_collateral","status","threshold","threshold","threshold","to_be_issued_tokens","to_be_redeemed_tokens","to_be_replaced_tokens","tokens","total","total","transferred_collateral","user_id","user_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","vault_id","accept_new_issues","recover_vault_id","register_public_key","register_vault","report_undercollateralized_vault","set_custom_secure_threshold","set_liquidation_collateral_threshold","set_minimum_collateral","set_premium_redeem_threshold","set_secure_collateral_threshold","set_system_collateral_ceiling","LiquidationCollateralThreshold","LiquidationVault","MinimumCollateralVault","PremiumRedeemThreshold","PunishmentDelay","ReservedAddresses","SecureCollateralThreshold","StorageVersion","SystemCollateralCeiling","TotalUserVaultCollateral","VaultBitcoinPublicKey","Vaults","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Active","ActiveReplaceCollateral","AvailableReplaceCollateral","BtcAddress","BtcPublicKey","Collateral","CurrencyId","CurrencySource","DefaultSystemVault","DefaultVault","DefaultVaultCurrencyPair","DefaultVaultId","FreeBalance","Liquidated","LiquidatedCollateral","LiquidationVault","P2PKH","P2SH","P2WPKHv0","P2WSHv0","RichSystemVault","RichVault","SystemVault","UnsignedFixedPoint","UpdatableVault","UserGriefing","V0","V1","V2","V3","V4","V5","V6","Vault","VaultCurrencyPair","VaultId","VaultStatus","Version","__clone_box","__clone_box","accepts_new_issues","account_id","account_id","active_replace_collateral","ban_until","banned_until","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","cmp","collateral","collateral","collateral","currencies","currency_pair","current_balance","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decrease_issued","decrease_issued","decrease_issued","decrease_to_be_issued","decrease_to_be_issued","decrease_to_be_issued","decrease_to_be_redeemed","decrease_to_be_redeemed","decrease_to_be_redeemed","default","defensive_max","defensive_max","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","dummy","encode_to","encode_to","encode_to","ensure_not_banned","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_script_pub_key","get_free_collateral","get_hash","get_hash","get_secure_threshold","get_total_collateral","get_used_collateral","get_vault_collateral","hash","hash","id","identity","identity","identity","increase_issued","increase_issued","increase_issued","increase_to_be_issued","increase_to_be_issued","increase_to_be_issued","increase_to_be_redeemed","increase_to_be_redeemed","increase_to_be_redeemed","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_liquidated","is_zero","issuable_tokens","issued_tokens","issued_tokens","liquidated_collateral","max_encoded_len","max_encoded_len","max_encoded_len","new","partial_cmp","partial_cmp","random","redeemable_tokens","replace_collateral","secure_collateral_threshold","serialize","serialize","size_hint","size_hint","size_hint","status","to_be_issued_tokens","to_be_issued_tokens","to_be_redeemed_tokens","to_be_redeemed_tokens","to_be_replaced_tokens","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_script_pub_key","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","v1","vzip","vzip","vzip","vzip","vzip","wrapped","migrate_v1_to_v6"],"q":[[0,"vault_registry"],[430,"vault_registry::pallet"],[813,"vault_registry::pallet::Call"],[832,"vault_registry::pallet::Event"],[897,"vault_registry::pallet::dispatchables"],[908,"vault_registry::pallet::storage_types"],[1160,"vault_registry::types"],[1450,"vault_registry::types::v1"]],"d":["Vault is active - bool=true indicates that the vault …","Collateral that is locked, but not used to back issued …","","Collateral put down by request_replace, but that has not …","Compressed ECDSA (secp256k1 curve) Public Key","Used by vault to back issued tokens","","","","Unlocked balance","Vault has been liquidated","Locked balance (like collateral but doesn’t slash)","Funds within the liquidation vault","","","","User’s issue griefing collateral","","","","Weight functions needed for vault_registry.","","","","","","","","","Amount of collateral locked for accepted replace requests.","","","","","","Block height until which this Vault is banned from being …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default mul, which is rounded down","","","","","","","","","","","","","","","","","","","","","","","the currency used for collateral","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","Account identifier of the Vault","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Number of issued tokens","","","","Amount of collateral that is locked for remaining …","","","","","","","","","","","","","","","","","","Generates an ephemeral “deposit” public key which can …","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","","","","","","Amount of collateral that is available as griefing …","","","Custom secure collateral threshold","","","","sets the currency, leaving the amount untouched","","","","","","","","","","","","","Current status of the vault","","","","Number of tokens pending issue","","Number of tokens pending redeem","","Number of tokens that have been requested for a replace …","Calculates the RIPEMD-160 hash of the compressed public …","","","","","","","","","","","","Construct the p2pkh scriptSig for this compressed pubKey …","Construct the scriptSig for a one-signature-required p2sh …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains a variant per dispatchable extrinsic that this …","Ceiling was not found for the given currency","Configuration trait of this pallet.","The collateral ceiling would be exceeded for the vault’s …","","","","","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","The amount of tokens to be issued is higher than the …","Can be used to configure the genesis state of this pallet.","Currency used for griefing collateral, e.g. DOT.","","","","","Not enough free collateral available.","The requested amount of tokens exceeds the amount …","The provided collateral was insufficient - it must be …","Failed attempt to modify vault’s collateral because it …","Deposit address could not be generated with the given …","","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","No bitcoin public key is registered for the vault.","Collateralization is infinite if no tokens are issued","","","","The <code>Pallet</code> struct, the main type that implements traits …","The vault module id, used for deriving its sovereign …","A bitcoin public key was already registered for this …","","","","","","","","The overarching event type.","","","","","","Vault attempted to set secure threshold below the global …","Threshold was not found for the given currency","Unable to convert value","","Returned if a vault tries to register while already being …","Action not allowed on banned vault.","Vault is no longer usable as it was liquidated due to …","Vault is not accepting new issue requests.","Attempted to liquidate a vault that is not …","The specified vault does not exist.","Vault must be liquidated.","Weight information for the extrinsics in this module.","","","","","","","","","","Configures whether or not the vault accepts new issues.","See <code>Pallet::accept_new_issues</code>.","","","","","","","","","","","","","","","","","","","","","","","return (collateral * Numerator) / denominator, used when …","Calculates the inclusion fee for a redeem transaction …","Cancels a replace - which in the normal case decreases the …","","","","","","","","","","","","","","","","","","","","","","","","","Decreases the amount of collateral held after liquidation …","Decreases the amount of tokens to be issued in the next …","Subtracts an amount tokens from the to-be-redeemed tokens …","","Decreases the amount of tokens f a redeem request is not …","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","Withdraw an <code>amount</code> of collateral without checking …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Like get_vault_from_id, but additionally checks that the …","","","","","","","Get the current collateralization of a vault","","","","","Get the global secure threshold for a specified currency …","Get the amount of tokens a vault can issue","","","Get all vaults that:","Get the amount of collateral required for the given vault …","Gets the minimum amount of collateral required for the …","","Get the amount of tokens issued by a vault","","","Calculate the maximum premium that can be given by a vault.","","RPC get all vaults the are registered using the given …","Get all vaults with non-zero issuable tokens, ordered in …","Get all vaults with non-zero issued (thus redeemable) …","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Checks if the vault would be above the secure threshold …","Takes vault custom secure threshold into account (if set)","","check if the vault is below the liquidation threshold.","Threshold checks","","Issues an amount of <code>tokens</code> tokens for the given <code>vault_id</code> …","Liquidates a vault, transferring all of its token balances …","“ Determines the lower bound for the collateral rate in …","","Public functions","“ The minimum collateral (e.g. DOT/KSM) a Vault needs to …","","","","Create a call with the variant <code>accept_new_issues</code>.","Create a call with the variant <code>recover_vault_id</code>.","Create a call with the variant <code>register_public_key</code>.","Create a call with the variant <code>register_vault</code>.","Create a call with the variant …","Create a call with the variant <code>set_custom_secure_threshold</code>.","Create a call with the variant …","Create a call with the variant <code>set_minimum_collateral</code>.","Create a call with the variant <code>set_premium_redeem_threshold</code>…","Create a call with the variant …","Create a call with the variant …","","","","","","","","","","","“ Determines the rate for the collateral rate of Vaults, …","","“ If a Vault fails to execute a correct redeem or …","","Recover vault ID from a liquidated status.","See <code>Pallet::recover_vault_id</code>.","Reduces the to-be-redeemed tokens when a redeem request …","Handles redeem requests which are executed against the …","Registers a btc address","Registers a new Bitcoin address for the vault.","See <code>Pallet::register_public_key</code>.","Initiates the registration procedure for a new Vault. The …","See <code>Pallet::register_vault</code>.","Replaces the old vault by the new vault by transferring …","","See <code>Pallet::report_undercollateralized_vault</code>.","returns the amount of tokens that a vault can request to …","“ Determines the over-collateralization rate for …","","","Configures a custom, higher secure collateral threshold …","See <code>Pallet::set_custom_secure_threshold</code>.","Changes the collateral liquidation threshold for a …","See <code>Pallet::set_liquidation_collateral_threshold</code>.","Changes the minimum amount of collateral required for …","See <code>Pallet::set_minimum_collateral</code>.","Changes the collateral premium redeem threshold for a …","See <code>Pallet::set_premium_redeem_threshold</code>.","Changes the secure threshold for a currency (only …","See <code>Pallet::set_secure_collateral_threshold</code>.","Changes the collateral ceiling for a currency (only …","See <code>Pallet::set_system_collateral_ceiling</code>.","","","","","Auto-generated docs-only module listing all (public and …","“ Pallet storage version“","","","","","","","","","","","Deposit an <code>amount</code> of collateral to be used for collateral …","","","","","","Checks if the vault has sufficient collateral to increase …","Adds an amount tokens to the to-be-redeemed tokens balance …","returns the new total to-be-replaced and replace-collateral","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Withdraws an <code>amount</code> of tokens that were requested for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures whether or not the vault accepts new issues.","Recover vault ID from a liquidated status.","Registers a new Bitcoin address for the vault.","Initiates the registration procedure for a new Vault. The …","Warning: Doc-Only","Configures a custom, higher secure collateral threshold …","Changes the collateral liquidation threshold for a …","Changes the minimum amount of collateral required for …","Changes the collateral premium redeem threshold for a …","Changes the secure threshold for a currency (only …","Changes the collateral ceiling for a currency (only …","Determines the lower bound for the collateral rate in …","Warning: Doc-Only","The minimum collateral (e.g. DOT/KSM) a Vault needs to …","Determines the rate for the collateral rate of Vaults, at …","If a Vault fails to execute a correct redeem or replace, …","Mapping of reserved BTC addresses to the registered account","Determines the over-collateralization rate for collateral …","Pallet storage version","Determines the over-collateralization rate for collateral …","Total collateral used for collateral tokens issued by …","Mapping of Vaults, using the respective Vault account …","Mapping of Vaults, using the respective Vault account …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vault is active - bool=true indicates that the vault …","Collateral that is locked, but not used to back issued …","Collateral put down by request_replace, but that has not …","A Bitcoin address is a serialized identifier that …","Compressed ECDSA (secp256k1 curve) Public Key","Used by vault to back issued tokens","","","","","","","Unlocked balance","Vault has been liquidated","Locked balance (like collateral but doesn’t slash)","Funds within the liquidation vault","","","","","","","","","","User’s issue griefing collateral","Initial version.","BtcAddress type with script format.","added replace_collateral to vault, changed vaultStatus enum","moved public_key out of the vault struct","Fixed liquidation vault","Added custom pervault secure collateral threshold","Removed wallet","","","","","Storage version.","","","","","","Amount of collateral locked for accepted replace requests.","","Block height until which this Vault is banned from being …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the currency used for collateral","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","Account identifier of the Vault","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Number of issued tokens","","Amount of collateral that is locked for remaining …","","","","","","","","","Amount of collateral that is available as griefing …","Custom secure collateral threshold","","","","","","Current status of the vault","Number of tokens pending issue","","Number of tokens pending redeem","","Number of tokens that have been requested for a replace …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[16,37,0,37,0,37,0,0,0,37,16,37,37,0,0,0,37,0,0,0,0,4,15,16,6,17,18,97,15,17,4,4,4,4,6,17,15,16,6,17,18,15,16,6,17,18,15,16,6,17,18,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,4,4,4,4,4,4,4,16,6,4,15,16,6,17,18,4,15,16,6,17,18,15,18,15,4,15,4,18,15,16,6,17,18,15,16,6,17,18,15,16,6,17,18,15,16,6,17,18,16,6,4,15,4,15,4,15,4,15,98,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,15,6,18,4,4,98,15,37,16,6,17,18,6,6,15,16,6,17,18,4,4,15,37,16,6,17,18,4,4,15,15,16,16,6,6,17,17,4,15,37,16,6,17,18,43,4,98,15,15,37,16,6,6,17,18,4,4,98,98,15,15,37,37,16,16,6,6,17,17,18,18,15,4,4,98,98,15,15,37,37,16,16,6,6,17,17,18,18,4,4,4,15,4,15,17,15,16,6,17,18,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,16,6,4,17,18,98,4,17,4,4,4,4,15,16,6,17,18,4,4,4,4,4,4,4,15,6,98,98,0,4,15,4,97,97,97,17,97,4,17,15,6,18,4,97,97,97,97,97,97,15,16,6,17,18,98,17,4,4,4,17,18,17,18,17,6,15,16,6,17,18,4,15,16,6,17,18,6,6,4,4,4,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,15,16,6,17,18,15,16,6,17,18,15,16,6,17,18,4,98,15,37,16,6,17,18,15,16,6,17,18,0,4,98,15,37,16,6,17,18,4,98,15,37,16,6,17,18,4,6,4,98,15,37,16,6,17,18,4,98,15,4,74,0,77,0,77,74,74,74,74,74,0,0,77,0,25,74,74,74,74,77,77,77,77,77,74,74,77,0,77,77,77,77,77,0,25,77,74,74,74,74,74,74,74,25,74,74,74,74,74,77,77,77,74,77,77,77,77,77,77,77,25,73,74,75,73,73,73,73,73,73,73,75,70,73,74,77,75,74,77,75,74,77,75,73,74,77,70,75,73,74,77,70,75,70,73,73,73,73,74,75,73,74,75,73,73,73,73,73,73,74,77,75,74,77,75,74,77,75,74,77,75,73,73,73,73,73,73,70,73,74,77,70,75,73,74,77,70,75,70,75,0,73,74,77,70,75,74,77,75,73,73,73,74,75,73,73,74,74,75,75,73,74,77,75,73,73,74,77,70,75,73,73,74,74,77,77,70,70,75,75,73,73,74,74,77,77,70,70,75,75,73,73,73,75,75,75,75,73,73,75,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,77,75,73,73,73,74,77,70,75,73,73,73,74,77,70,75,73,74,77,70,75,73,74,77,70,75,73,73,73,73,73,73,73,73,73,70,73,73,70,73,73,75,75,75,75,75,75,75,75,75,75,75,73,73,73,73,73,73,73,73,73,73,73,70,73,70,73,75,73,73,73,73,75,73,75,73,73,75,73,73,70,70,73,75,73,75,73,75,73,75,73,75,73,75,74,77,75,73,0,73,70,74,77,75,73,74,75,73,73,73,73,73,74,77,70,75,73,73,73,73,73,74,77,70,75,73,74,77,75,74,77,75,74,77,75,73,74,77,70,75,74,77,75,73,74,77,70,75,73,74,77,70,75,73,73,73,74,77,70,75,73,73,77,73,99,100,101,102,101,99,103,100,104,105,106,107,103,102,108,104,105,106,109,110,111,112,113,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,120,121,130,131,132,133,114,112,112,111,134,118,116,114,114,122,123,124,114,114,114,119,120,121,116,129,118,117,113,130,126,131,132,127,133,128,129,134,118,119,114,115,110,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,16,37,37,0,0,37,0,0,0,0,0,0,37,16,37,37,84,84,84,84,0,0,0,0,0,37,88,88,88,88,88,88,88,0,0,0,0,0,44,84,17,37,15,17,42,17,44,88,84,44,88,84,44,88,84,42,44,88,84,81,42,44,88,84,81,84,44,84,44,84,44,84,81,44,18,15,18,37,44,88,84,44,88,84,44,88,84,44,88,84,147,42,81,147,42,81,147,42,81,84,44,84,44,84,44,84,44,84,42,44,88,84,81,42,44,88,84,81,44,84,42,44,88,84,81,84,44,88,84,42,44,88,84,44,44,88,88,84,84,44,84,80,42,42,44,88,84,81,81,42,42,44,44,88,88,84,84,81,81,42,42,44,44,88,88,84,84,81,81,84,42,44,84,42,42,42,42,44,84,17,44,88,84,147,42,81,147,42,81,147,42,81,42,44,88,84,81,42,44,88,84,81,42,44,88,84,81,42,44,88,84,81,84,17,84,42,17,18,17,44,88,84,17,44,84,84,42,17,17,44,84,44,88,84,17,17,18,17,18,17,44,88,84,44,84,84,42,44,88,84,81,42,44,88,84,81,44,88,84,44,88,84,44,88,84,42,44,88,84,81,44,88,84,42,44,88,84,81,42,44,88,84,81,0,42,44,88,84,81,44,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],0,0,[[[4,[3]],[4,[3]]],[[4,[3]]]],[[[4,[3]],5],[[4,[3]]]],[[[4,[3]],[4,[3]]]],[[[4,[3]]]],[6],0,[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[11,[10]]]],[[[4,[3]],[4,[3]]],[[11,[[4,[3]],10]]]],[[[4,[3]],[4,[3]]],[[11,[[4,[3]],10]]]],[[[4,[3]]],[[11,[[4,[3]],10]]]],[[[4,[3]]],[[11,[[4,[3]],10]]]],[[[4,[3]],12],[[11,[[4,[3]],10]]]],[[[4,[3]],[4,[3]]],[[11,[[4,[3]],10]]]],[[]],[[]],[[[4,[[0,[13,3]]]]],[[4,[[0,[13,3]]]]]],[[[15,[13,[0,[13,14]]]]],[[15,[13,[0,[13,14]]]]]],[16,16],[6,6],[[[17,[13,13,13,[0,[13,14]],13]]],[[17,[13,13,13,[0,[13,14]],13]]]],[[[18,[13,[0,[13,14]]]]],[[18,[13,[0,[13,14]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[19,[0,[19,14]]]],[15,[19,[0,[19,14]]]]],20],0,[[[15,[14]]],14],[[[4,[3]]],[[11,[[4,[3]],10]]]],0,[[[4,[3]]]],0,[21,[[11,[[15,[22,14]],23]]]],[21,[[11,[16,23]]]],[21,[[11,[6,23]]]],[21,[[11,[[17,[22,14]],23]]]],[21,[[11,[[18,[22,14]],23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[],16],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]],[4,[25]]],[[11,[10]]]],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[28,[[11,[[15,[29,[0,[14,29]]]]]]]],[28,[[11,[6]]]],[28,[[11,[[18,[29,[0,[29,14]]]]]]]],[[[4,[3]]],[[4,[3]]]],[27],[27],[27],[27],[27],[27],[27],[27],[[],6],[6,[[9,[7,8]]]],[[[15,[30,14]],[0,[31,32]]]],[[16,[0,[31,32]]]],[[6,[0,[31,32]]]],[[[17,[30,14]],[0,[31,32]]]],[[[18,[30,14]],[0,[31,32]]]],[[[4,[[0,[[33,[[0,[[33,[[0,[[33,[[0,[33,3]]]],3]]]],3]]]],3]]]],[4,[[0,[[33,[[0,[[33,[[0,[[33,[[0,[33,3]]]],3]]]],3]]]],3]]]]],34],[[[4,[3]],[4,[3]]],[[11,[34,10]]]],[[[15,[[33,[[33,[[33,[33]]]]]],[0,[[33,[[0,[[33,[[0,[[33,[[0,[33,14]]]],14]]]],14]]]],14]]]],[15,[[33,[[33,[[33,[33]]]]]],[0,[[33,[[0,[[33,[[0,[[33,[[0,[33,14]]]],14]]]],14]]]],14]]]]],34],[[[37,[[0,[33,35,36]]]],[37,[[0,[33,35,36]]]]],34],[[16,16],34],[[6,6],34],[[[17,[33,33,33,[0,[33,14]],33]],[17,[33,33,33,[0,[33,14]],33]]],34],[[[18,[33,[0,[33,14]]]],[18,[33,[0,[33,14]]]]],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[[4,[[0,[38,3]]]],39],[[11,[40]]]],[[[15,[38,[0,[38,14]]]],39],[[11,[40]]]],[[[37,[[0,[38,35,36]]]],39],41],[[16,39],41],[[6,39],[[11,[40]]]],[[[17,[38,38,38,[0,[38,14]],38]],39],41],[[[18,[38,[0,[38,14]]]],39],41],[[[42,[25]]],[[43,[25]]]],[[]],[[]],[[]],[[],[[15,[14]]]],[[]],[[]],[[]],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[14]]],[[15,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[[4,[3]],10]]]],[[],[[11,[[4,[3]],10]]]],[[[4,[3]],[4,[3]]],[[11,[34,10]]]],[[[0,[45,32]],46],47],[[[4,[3]],[4,[3]]],[[11,[34,10]]]],[[[15,[45,[0,[45,14]]]],48]],0,[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[[4,[3]]],34],0,0,[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[4,[3]],[4,[3]]],[[11,[34,10]]]],0,[[[4,[3]]],[[11,[10]]]],[[[4,[3]],[4,[3]]],[[11,[34,10]]]],[[[4,[3]],49],[[4,[3]]]],[[[4,[3]],[4,[3]]],[[11,[[4,[3]],10]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[[4,[3]],[4,[3]]],[[11,[[4,[3]],10]]]],[[[4,[3]]],[[11,[10]]]],[[[4,[3]],50],[[4,[3]]]],[[[4,[3]],5],[[4,[3]]]],[[[4,[3]],51],[[4,[3]]]],[[[4,[3]],[4,[3]]],[[11,[34,10]]]],[[],[[4,[3]]]],[[14,14],[[15,[14]]]],[[6,52],[[11,[6,53]]]],[[[54,[25]]]],[[[26,[25]]],[[11,[10]]]],0,[[[4,[3]],[4,[3]]],[[55,[20]]]],[[[15,[[56,[[56,[[56,[56]]]]]],[0,[[56,[[0,[[56,[[0,[[56,[[0,[56,14]]]],14]]]],14]]]],14]]]],[15,[[56,[[56,[[56,[56]]]]]],[0,[[56,[[0,[[56,[[0,[[56,[[0,[56,14]]]],14]]]],14]]]],14]]]]],[[55,[20]]]],[[[4,[3]],[4,[3]]],[[11,[10]]]],[[],2],[[],2],[[],2],0,[[],2],[[[4,[3]],[4,[3]]],[[11,[[4,[3]],10]]]],0,[[[15,[57,[0,[14,57]]]],58],11],[[6,58],11],[[[18,[57,[0,[57,14]]]],58],11],[[[4,[3]]],[[4,[3]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[15,[30,14]]],27],[16,27],[6,27],[[[17,[30,14]]],27],[[[18,[30,14]]],27],[[[26,[25]],[4,[25]]],[[11,[10]]]],0,[[[4,[3]],[4,[3]]],[[4,[3]]]],[[[4,[3]],5],[[4,[3]]]],[[[4,[3]],[4,[3]]]],0,0,0,0,0,[6,59],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,[9,[7,8]]],60],[[6,[9,[7,8]]],60],[[[4,[3]]],[[11,[10]]]],[[[4,[3]]],[[11,[10]]]],[[[4,[3]]],[[11,[10]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],[[63,[62]]]],[[],63],[[],[[63,[62]]]],[[],63],[[],63],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[11,[10]]]],[[6,64]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]],64],[[4,[3]]]],[[[26,[25]],[55,[[4,[25]]]],55],[[11,[[4,[25]],10]]]],[[[15,[14]]],14],[[],[[4,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[26,[25]]],65],[[[66,[25]],[67,[25]]]],[[[54,[25]]]],[[[66,[25]],[67,[25]]]],[[[66,[25]],[67,[25]]]],[[[66,[25]]]],[[[68,[25]],[66,[25]],34],69],0,[[[70,[25]],71],[[11,[72]]]],[[[26,[25]]],65],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[25]]]],[[[4,[25]],[4,[25]],[4,[25]]],[[11,[[4,[25]],10]]]],[[[54,[25]],24],[[11,[[4,[25]],10]]]],[[[26,[25]],[26,[25]],[4,[25]]],65],[73,73],[[[74,[25]]],[[74,[25]]]],[[[75,[25]]],[[75,[25]]]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[],27],[[],76],[[]],[21,[[11,[[74,[25]],23]]]],[21,[[11,[77,23]]]],[21,[[11,[[75,[25]],23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[[26,[25]],[4,[25]]],65],[[[26,[25]],[4,[25]]],65],[[[26,[25]],[4,[25]]],65],[[[26,[25]],[4,[25]]],[[11,[10]]]],[[[26,[25]],[4,[25]]],65],[[[66,[25]],[4,[25]]],65],[[],[[70,[25]]]],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[28,[[11,[[70,[25]]]]]],[[[75,[25]]],69],0,[27],[27],[27],[27],[27],[[[74,[25]],[0,[31,32]]]],[[77,[0,[31,32]]]],[[[75,[25]],[0,[31,32]]]],[[[26,[25]]],[[11,[10]]]],[[[26,[25]]],65],[[73,73],34],[[[74,[25]],[74,[25]]],34],[[[75,[25]],[75,[25]]],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[73,39],41],[[[74,[25]],39],41],[[[77,[25]],39],41],[[[75,[25]],39],41],[[[26,[25]],[4,[25]]],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[11,[[43,[25]],10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[],[[11,[6,10]]]],[[[75,[25]]],7],[[]],[[[75,[25]]],78],[[]],[[[26,[25]],34],[[11,[[67,[25]],10]]]],[[[26,[25]],[4,[25]],34],[[11,[[67,[25]],10]]]],[[[75,[25]]],79],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[44,[[54,[25]]]]],[[11,[[67,[25]],10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[66,[25]]],[[80,[25]]]],[24,[[11,[9,10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[4,[25]],[54,[25]]],[[11,[[4,[25]],10]]]],[[[66,[25]]],[[81,[25]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[66,[25]]],[[11,[[4,[25]],10]]]],[[[26,[25]]],[[11,[[43,[25]],10]]]],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[26,[25]]],[[11,[[67,[25]],10]]]],[[],[[11,[[9,[[26,[25]]]],10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],27],[[],[[9,[82]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[[26,[25]],[43,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]],[55,[[4,[25]]]]],[[11,[34,10]]]],[[[4,[25]],[4,[25]],[42,[25]]],[[11,[34,10]]]],[[[26,[25]],[67,[25]]],[[11,[34,10]]]],[[[43,[25]],[67,[25]]],[[11,[34,10]]]],[[[26,[25]]],[[11,[34,10]]]],[[[26,[25]]],[[11,[34,10]]]],[[[26,[25]],[4,[25]]],65],[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[83,[[66,[25]]]]],[[55,[[67,[25]]]]]],0,[[]],[[[83,[[54,[25]]]]]],0,[[],78],[[],78],[[[66,[25]],34],[[75,[25]]]],[[[66,[25]]],[[75,[25]]]],[6,[[75,[25]]]],[[[66,[25]]],[[75,[25]]]],[[[26,[25]]],[[75,[25]]]],[[[66,[25]],[55,[[67,[25]]]]],[[75,[25]]]],[[[66,[25]],[67,[25]]],[[75,[25]]]],[[[54,[25]]],[[75,[25]]]],[[[66,[25]],[67,[25]]],[[75,[25]]]],[[[66,[25]],[67,[25]]],[[75,[25]]]],[[[66,[25]]],[[75,[25]]]],[[[26,[25]],52],[[11,[84,10]]]],[[[85,[25]]]],[[[85,[25]]]],[[],86],[[[85,[25]]]],[[]],[[[85,[25]],2],2],[[[85,[25]]],2],[[],2],[[],2],[[[83,[[66,[25]]]]],[[55,[[67,[25]]]]]],0,[[],[[85,[25]]]],0,[[[68,[25]],[66,[25]]],65],0,[[[26,[25]],[4,[25]],[4,[25]]],65],[[[54,[25]],[4,[25]]],65],[[[26,[25]],52],[[11,[84,10]]]],[[[68,[25]],6],69],0,[[[68,[25]],[66,[25]]],69],0,[[[26,[25]],[26,[25]],[4,[25]],[4,[25]]],65],[[[68,[25]],[26,[25]]],69],0,[[[26,[25]]],[[11,[[4,[25]],10]]]],[[[83,[[66,[25]]]]],[[55,[[67,[25]]]]]],0,[[[70,[25]],58],11],[[[68,[25]],[66,[25]],[55,[[67,[25]]]]],69],0,[[[68,[25]],[66,[25]],[67,[25]]],65],0,[[[68,[25]],[54,[25]]],65],0,[[[68,[25]],[66,[25]],[67,[25]]],65],0,[[[68,[25]],[66,[25]],[67,[25]]],65],0,[[[68,[25]],[66,[25]]],65],0,[[[74,[25]]],27],[77,27],[[[75,[25]]],27],[[],[[9,[87]]]],0,[[],88],0,[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[[37,[25]],[37,[25]],[4,[25]]],65],[[[37,[25]],[37,[25]],[4,[25]]],[[11,[[4,[25]],10]]]],[[[26,[25]],[4,[25]]],65],[[],11],[[],11],[[],11],[[],11],[[],11],[[[26,[25]],[4,[25]]],[[11,[10]]]],[[[26,[25]],[4,[25]]],65],[[[26,[25]],[4,[25]]],[[11,[[4,[25]],10]]]],[[[66,[25]],[4,[25]]],65],[[],11],[[],11],[[],11],[[],11],[[],11],[[[26,[25]],[55,[[67,[25]]]]],65],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],63],[[],63],[[],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,90],[[[26,[25]]],34],[[]],[[]],[[]],[[]],[[]],[[],[[9,[91]]]],[[[26,[25]]],[[11,[34,10]]]],[2,[[93,[92]]]],[[[26,[25]],[4,[25]]],[[11,[10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[66,[25]],34]],[[[66,[25]]]],[6],[[[66,[25]]]],[[[26,[25]]]],[[[66,[25]],[55,[[67,[25]]]]]],[[[66,[25]],[67,[25]]]],[[[54,[25]]]],[[[66,[25]],[67,[25]]]],[[[66,[25]],[67,[25]]]],[[[66,[25]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[[17,[19,94,[0,[95,94]],14,94]]],34],[[[37,[25]]]],0,0,[[[42,[25]],[85,[25]]]],0,[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[[0,[13,14]]]]],[[44,[[0,[13,14]]]]]],[84,84],[[]],[[]],[[[44,[[0,[19,14]]]],[44,[[0,[19,14]]]]],20],[[84,84],20],[[[81,[25]]],[[4,[25]]]],0,0,0,0,[[[37,[25]],[54,[25]]],[[11,[[4,[25]],10]]]],[21,[[11,[[44,[[0,[14,22]]]],23]]]],[21,[[11,[88,23]]]],[21,[[11,[84,23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[[],[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[24,[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[[24,21],[[11,[23]]]],[4,65],[[[42,[25]],[4,[25]]],65],[[[81,[25]],[4,[25]]],65],[4,65],[[[42,[25]],[4,[25]]],65],[[[81,[25]],[4,[25]]],65],[4,65],[[[42,[25]],[4,[25]]],65],[[[81,[25]],[4,[25]]],65],[[],84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[28,[[11,[[44,[[0,[14,29]]]]]]]],[28,[[11,[84]]]],[27],[27],[27],[27],[27],[[],84],[[[44,[[0,[14,30]]]],[0,[31,32]]]],[[88,[0,[31,32]]]],[[84,[0,[31,32]]]],[[[42,[25]]],65],[[[44,[[0,[[33,[[0,[[33,[[0,[[33,[[0,[33,14]]]],14]]]],14]]]],14]]]],[44,[[0,[[33,[[0,[[33,[[0,[[33,[[0,[33,14]]]],14]]]],14]]]],14]]]]],34],[[88,88],34],[[84,84],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[[44,[[0,[38,14]]]],39],[[11,[40]]]],[[84,39],[[11,[40]]]],[[[81,[25]]],[[80,[25]]]],[[[43,[25]]],[[42,[25]]]],[[]],[[]],[[]],[[]],[[]],[[[80,[25]]],[[81,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,[[11,[84,96]]]],[[[42,[25]]],[[11,[[4,[25]],10]]]],[[[0,[45,32]],46],47],[[[0,[45,32]],46],47],[[[42,[25]]],[[11,[[67,[25]],10]]]],[[[42,[25]]],[[11,[[4,[25]],10]]]],[[[42,[25]],[67,[25]]],[[11,[[4,[25]],10]]]],[[[42,[25]]],[[11,[[4,[25]],10]]]],[[[44,[[0,[45,14]]]],48]],[[84,48]],0,[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[4,65],[[[42,[25]],[4,[25]]],65],[[[81,[25]],[4,[25]]],65],[4,65],[[[42,[25]],[4,[25]]],65],[[[81,[25]],[4,[25]]],65],[4,65],[[[42,[25]],[4,[25]]],65],[[[81,[25]],[4,[25]]],65],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[[17,[19,94,[0,[95,94]],14,94]]],34],[84,34],[[[42,[25]]],[[11,[[4,[25]],10]]]],0,0,0,[[],27],[[],27],[[],27],[[[15,[19,14]]],[[17,[19,94,[0,[95,94]],14,94]]]],[[[44,[[0,[[56,[[0,[[56,[[0,[[56,[[0,[56,14]]]],14]]]],14]]]],14]]]],[44,[[0,[[56,[[0,[[56,[[0,[[56,[[0,[56,14]]]],14]]]],14]]]],14]]]]],[[55,[20]]]],[[84,84],[[55,[20]]]],[[],84],[[[42,[25]]],[[11,[[4,[25]],10]]]],0,0,[[[44,[[0,[14,57]]]],58],11],[[84,58],11],[[[44,[[0,[14,30]]]]],27],[88,27],[84,27],0,0,0,0,0,0,[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[]],[[]],[84,60],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],[[63,[62]]]],[[],63],[[],[[63,[62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,[[],2]],"c":[457],"p":[[3,"Private"],[3,"Weight"],[8,"Config"],[3,"Amount"],[15,"u128"],[3,"BtcPublicKey"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"DispatchError"],[4,"Result"],[4,"Rounding"],[8,"Clone"],[8,"Copy"],[3,"VaultId"],[4,"VaultStatus"],[3,"Vault"],[3,"SystemVault"],[8,"Ord"],[4,"Ordering"],[8,"Input"],[8,"Decode"],[3,"Error"],[15,"u32"],[8,"Config"],[6,"DefaultVaultId"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[8,"Encode"],[8,"Output"],[8,"Sized"],[8,"PartialEq"],[15,"bool"],[8,"Config"],[8,"Config"],[4,"CurrencySource"],[8,"Debug"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"RichVault"],[6,"DefaultVault"],[3,"VaultCurrencyPair"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[8,"Fn"],[3,"FixedU128"],[3,"Permill"],[3,"H256"],[4,"Error"],[6,"CurrencyId"],[4,"Option"],[8,"PartialOrd"],[8,"Serialize"],[8,"Serializer"],[3,"H160"],[3,"Script"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"FnOnce"],[6,"DispatchResult"],[6,"DefaultVaultCurrencyPair"],[6,"UnsignedFixedPoint"],[6,"OriginFor"],[6,"DispatchResultWithPostInfo"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[4,"Error"],[15,"str"],[3,"DispatchInfo"],[6,"DefaultSystemVault"],[3,"RichSystemVault"],[3,"PalletInfoData"],[8,"EncodeLike"],[4,"BtcAddress"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"StorageInfo"],[4,"Version"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"Default"],[8,"HasCompact"],[4,"Error"],[8,"WeightInfo"],[3,"PoolManager"],[13,"accept_new_issues"],[13,"set_system_collateral_ceiling"],[13,"register_vault"],[13,"set_minimum_collateral"],[13,"set_custom_secure_threshold"],[13,"set_secure_collateral_threshold"],[13,"set_premium_redeem_threshold"],[13,"set_liquidation_collateral_threshold"],[13,"recover_vault_id"],[13,"register_public_key"],[13,"report_undercollateralized_vault"],[13,"SetAcceptNewIssues"],[13,"UpdatePublicKey"],[13,"ReplaceTokens"],[13,"RegisterAddress"],[13,"LiquidateVault"],[13,"BanVault"],[13,"RedeemTokensLiquidation"],[13,"RegisterVault"],[13,"RedeemTokensPremium"],[13,"RedeemTokensLiquidatedVault"],[13,"IncreaseLockedCollateral"],[13,"DecreaseLockedCollateral"],[13,"SetSecureCollateralThreshold"],[13,"SetPremiumRedeemThreshold"],[13,"SetLiquidationCollateralThreshold"],[13,"SetCustomSecureThreshold"],[13,"DecreaseToBeIssuedTokens"],[13,"DecreaseToBeRedeemedTokens"],[13,"DecreaseToBeReplacedTokens"],[13,"DecreaseTokens"],[13,"IncreaseToBeIssuedTokens"],[13,"IssueTokens"],[13,"IncreaseToBeRedeemedTokens"],[13,"IncreaseToBeReplacedTokens"],[13,"RedeemTokens"],[3,"MinimumCollateralVault"],[3,"PunishmentDelay"],[3,"SystemCollateralCeiling"],[3,"SecureCollateralThreshold"],[3,"PremiumRedeemThreshold"],[3,"LiquidationCollateralThreshold"],[3,"LiquidationVault"],[3,"Vaults"],[3,"VaultBitcoinPublicKey"],[3,"ReservedAddresses"],[3,"TotalUserVaultCollateral"],[3,"StorageVersion"],[8,"UpdatableVault"]]},\
"vault_registry_rpc":{"doc":"RPC interface for the Vault Registry.","t":"DIIILLLLLLLLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLLLLLL","n":["VaultRegistry","VaultRegistryApiClient","VaultRegistryApiServer","VaultRegistryRuntimeApi","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get_collateralization_from_vault","get_collateralization_from_vault","get_collateralization_from_vault","get_collateralization_from_vault","get_collateralization_from_vault_and_collateral","get_collateralization_from_vault_and_collateral","get_collateralization_from_vault_and_collateral","get_collateralization_from_vault_and_collateral","get_issuable_tokens_from_vault","get_issuable_tokens_from_vault","get_issuable_tokens_from_vault","get_issuable_tokens_from_vault","get_required_collateral_for_vault","get_required_collateral_for_vault","get_required_collateral_for_vault","get_required_collateral_for_vault","get_required_collateral_for_wrapped","get_required_collateral_for_wrapped","get_required_collateral_for_wrapped","get_required_collateral_for_wrapped","get_vault_collateral","get_vault_collateral","get_vault_collateral","get_vault_collateral","get_vault_total_collateral","get_vault_total_collateral","get_vault_total_collateral","get_vault_total_collateral","get_vaults_by_account_id","get_vaults_by_account_id","get_vaults_by_account_id","get_vaults_by_account_id","get_vaults_with_issuable_tokens","get_vaults_with_issuable_tokens","get_vaults_with_issuable_tokens","get_vaults_with_issuable_tokens","get_vaults_with_redeemable_tokens","get_vaults_with_redeemable_tokens","get_vaults_with_redeemable_tokens","get_vaults_with_redeemable_tokens","init","into","into_mut","into_ref","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"vault_registry_rpc"]],"d":["A struct that implements the [<code>VaultRegistryApi</code>].","Client implementation for the <code>VaultRegistryApi</code> RPC API.","Server trait implementation for the <code>VaultRegistryApi</code> RPC …","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Get the collateralization rate of a vault","","","","Get the collateralization rate of a vault and collateral","","","","Get the amount of tokens a vault can issue","","","","Get the amount of collateral required for the given vault …","","","","Get the minimum amount of collateral required for the …","","","","Get the vault’s collateral (excluding nomination)","","","","Get the vault’s collateral (including nomination)","","","","Get all the vaultIds registered by a vault’s accountId","","","","Get all vaults with non-zero issuable tokens, ordered in …","","","","Get all vaults with non-zero redeemable tokens, ordered in …","","","Calls <code>U::from(self)</code>.","","","Collects all the methods and subscriptions defined in the …","Create new <code>VaultRegistry</code> with the given reference to the …","","","","","",""],"i":[0,0,0,0,10,10,10,10,10,10,10,10,10,10,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,26,10,27,28,10,10,10,10,26,10,10,10,10,10,10,10],"f":[0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[2,3],4],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,2,3],[[4,[[0,[11,12,13]]]]]],[2,[[15,[[15,[14]],16]]]],[[6,2,3],[[19,[[18,[17]]]]]],[[20,2,3],4],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,[20,[[0,[11,12,13]]]],2,3],[[4,[[0,[11,12,13]]]]]],[[20,2],[[15,[[15,[14]],16]]]],[[6,20,2,3],[[19,[[18,[17]]]]]],[3,[[4,[20]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,3],[[4,[[20,[[0,[11,12,13]]]]]]]],[[],[[15,[[15,[20,14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[3,[[4,[20]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,3],[[4,[[20,[[0,[11,12,13]]]]]]]],[[],[[15,[[15,[20,14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[[20,3],[[4,[20]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],[20,[[0,[11,12,13]]]],11,3],[[4,[[20,[[0,[11,12,13]]]]]]]],[20,[[15,[[15,[20,14]],16]]]],[[6,20,3],[[19,[[18,[17]]]]]],[3,[[4,[20]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,3],[[4,[[20,[[0,[11,12,13]]]]]]]],[[],[[15,[[15,[20,14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[3,[[4,[20]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,3],[[4,[[20,[[0,[11,12,13]]]]]]]],[[],[[15,[[15,[20,14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[3,[[4,[21]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],11,3],[[4,[[21,[11]]]]]],[[],[[15,[[15,[[21,[22]],14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[3,[[4,[21]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],3],[[4,[21]]]],[[],[[15,[[15,[[21,[22]],14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[3,[[4,[21]]]],[[[10,[[0,[5,6,[8,[7]],[9,[7]]]],7]],3],[[4,[21]]]],[[],[[15,[[15,[[21,[22]],14]],16]]]],[[6,3],[[19,[[18,[17]]]]]],[[],1],[[]],[[]],[[]],[[],23],[24,10],[[],15],[[],15],[[],25],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[15,"bool"],[4,"Option"],[6,"RpcResult"],[8,"Send"],[8,"Sync"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[3,"VaultRegistry"],[8,"Codec"],[8,"MaybeDisplay"],[8,"MaybeFromStr"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"BalanceWrapper"],[3,"Vec"],[3,"Global"],[3,"RpcModule"],[3,"Arc"],[3,"TypeId"],[8,"VaultRegistryApiServer"],[8,"VaultRegistryRuntimeApi"],[8,"VaultRegistryApiClient"]]},\
"vault_registry_rpc_runtime_api":{"doc":"Runtime API definition for the Vault Registry","t":"ILLLLLLLLLL","n":["VaultRegistryApi","get_collateralization_from_vault","get_collateralization_from_vault_and_collateral","get_issuable_tokens_from_vault","get_required_collateral_for_vault","get_required_collateral_for_wrapped","get_vault_collateral","get_vault_total_collateral","get_vaults_by_account_id","get_vaults_with_issuable_tokens","get_vaults_with_redeemable_tokens"],"q":[[0,"vault_registry_rpc_runtime_api"]],"d":["","Get the collateralization rate of a vault","Get the collateralization rate of a vault and collateral","Get the amount of tokens a vault can issue","Get the amount of collateral required for the given vault …","Get the minimum amount of collateral required for the …","Get the vault’s collateral (excluding nomination)","Get the vault’s collateral (including nomination)","Get all the vaultIds registered by a vault’s accountId","Get all vaults with non-zero issuable tokens, ordered in …","Get all vaults with non-zero redeemable tokens, ordered in …"],"i":[0,7,7,7,7,7,7,7,7,7,7],"f":[0,[1,[[3,[[3,[2]],4]]]],[[5,1],[[3,[[3,[2]],4]]]],[[],[[3,[[3,[5,2]],4]]]],[[],[[3,[[3,[5,2]],4]]]],[5,[[3,[[3,[5,2]],4]]]],[[],[[3,[[3,[5,2]],4]]]],[[],[[3,[[3,[5,2]],4]]]],[[],[[3,[[3,[6,2]],4]]]],[[],[[3,[[3,[6,2]],4]]]],[[],[[3,[[3,[6,2]],4]]]]],"c":[],"p":[[15,"bool"],[4,"DispatchError"],[4,"Result"],[4,"ApiError"],[3,"BalanceWrapper"],[3,"Vec"],[8,"VaultRegistryApi"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
